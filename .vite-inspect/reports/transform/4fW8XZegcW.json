{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-NHUKAZUT.js?v=3c106fdb",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  Transition_default\n} from \"./chunk-ZFUPPDSN.js\";\nimport {\n  init_useForkRef,\n  useForkRef_default\n} from \"./chunk-23AETIBN.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-NEVWHIAS.js\";\nimport {\n  useTheme\n} from \"./chunk-JCF5JOWN.js\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  elementAcceptingRef_default,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-6ZT6S2Z7.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/Backdrop/Backdrop.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types2 = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_styled();\ninit_useThemeProps();\n\n// node_modules/@mui/material/Fade/Fade.js\ninit_extends();\ninit_objectWithoutPropertiesLoose();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_esm();\n\n// node_modules/@mui/material/transitions/utils.js\nvar reflow = (node) => node.scrollTop;\nfunction getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === \"number\" ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === \"object\" ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}\n\n// node_modules/@mui/material/Fade/Fade.js\ninit_useForkRef();\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nvar styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\nvar Fade = React.forwardRef(function Fade2(props, ref) {\n  const theme = useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition_default\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const enableStrictModeCompat = true;\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef_default(nodeRef, children.ref, ref);\n  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {\n    if (callback) {\n      const node = nodeRef.current;\n      if (maybeIsAppearing === void 0) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node);\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \"enter\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"opacity\", transitionProps);\n    node.style.transition = theme.transitions.create(\"opacity\", transitionProps);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback((node) => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \"exit\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"opacity\", transitionProps);\n    node.style.transition = theme.transitions.create(\"opacity\", transitionProps);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = (next) => {\n    if (addEndListener) {\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({\n    appear,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : void 0,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout\n  }, other, {\n    children: (state, childProps) => {\n      return React.cloneElement(children, _extends({\n        style: _extends({\n          opacity: 0,\n          visibility: state === \"exited\" && !inProp ? \"hidden\" : void 0\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\ntrue ? Fade.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: import_prop_types.default.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: import_prop_types.default.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef_default.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: import_prop_types.default.oneOfType([import_prop_types.default.shape({\n    enter: import_prop_types.default.string,\n    exit: import_prop_types.default.string\n  }), import_prop_types.default.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: import_prop_types.default.bool,\n  /**\n   * @ignore\n   */\n  onEnter: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntered: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntering: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExit: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExited: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExiting: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  style: import_prop_types.default.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({\n    appear: import_prop_types.default.number,\n    enter: import_prop_types.default.number,\n    exit: import_prop_types.default.number\n  })])\n} : void 0;\nvar Fade_default = Fade;\n\n// node_modules/@mui/material/Backdrop/backdropClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getBackdropUtilityClass(slot) {\n  return generateUtilityClass(\"MuiBackdrop\", slot);\n}\nvar backdropClasses = generateUtilityClasses(\"MuiBackdrop\", [\"root\", \"invisible\"]);\nvar backdropClasses_default = backdropClasses;\n\n// node_modules/@mui/material/Backdrop/Backdrop.js\nvar import_jsx_runtime2 = __toESM(require_jsx_runtime());\nvar _excluded2 = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"invisible\", \"open\", \"slotProps\", \"slots\", \"TransitionComponent\", \"transitionDuration\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: [\"root\", invisible && \"invisible\"]\n  };\n  return composeClasses(slots, getBackdropUtilityClass, classes);\n};\nvar BackdropRoot = styled_default(\"div\", {\n  name: \"MuiBackdrop\",\n  slot: \"Root\",\n  overridesResolver: (props, styles2) => {\n    const {\n      ownerState\n    } = props;\n    return [styles2.root, ownerState.invisible && styles2.invisible];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: \"fixed\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n  backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  WebkitTapHighlightColor: \"transparent\"\n}, ownerState.invisible && {\n  backgroundColor: \"transparent\"\n}));\nvar Backdrop = React2.forwardRef(function Backdrop2(inProps, ref) {\n  var _slotProps$root, _ref, _slots$root;\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiBackdrop\"\n  });\n  const {\n    children,\n    className,\n    component = \"div\",\n    components = {},\n    componentsProps = {},\n    invisible = false,\n    open,\n    slotProps = {},\n    slots = {},\n    TransitionComponent = Fade_default,\n    transitionDuration\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    component,\n    invisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  const rootSlotProps = (_slotProps$root = slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  return (0, import_jsx_runtime2.jsx)(TransitionComponent, _extends({\n    in: open,\n    timeout: transitionDuration\n  }, other, {\n    children: (0, import_jsx_runtime2.jsx)(BackdropRoot, _extends({\n      \"aria-hidden\": true\n    }, rootSlotProps, {\n      as: (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : component,\n      className: clsx_default(classes.root, className, rootSlotProps == null ? void 0 : rootSlotProps.className),\n      ownerState: _extends({}, ownerState, rootSlotProps == null ? void 0 : rootSlotProps.ownerState),\n      classes,\n      ref,\n      children\n    }))\n  }));\n});\ntrue ? Backdrop.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types2.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types2.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types2.default.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types2.default.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: import_prop_types2.default.shape({\n    Root: import_prop_types2.default.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: import_prop_types2.default.shape({\n    root: import_prop_types2.default.object\n  }),\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   * @default false\n   */\n  invisible: import_prop_types2.default.bool,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: import_prop_types2.default.bool.isRequired,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: import_prop_types2.default.shape({\n    root: import_prop_types2.default.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: import_prop_types2.default.shape({\n    root: import_prop_types2.default.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: import_prop_types2.default.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.shape({\n    appear: import_prop_types2.default.number,\n    enter: import_prop_types2.default.number,\n    exit: import_prop_types2.default.number\n  })])\n} : void 0;\nvar Backdrop_default = Backdrop;\n\nexport {\n  reflow,\n  getTransitionProps,\n  Fade_default,\n  getBackdropUtilityClass,\n  backdropClasses_default,\n  Backdrop_default\n};\n//# sourceMappingURL=chunk-NHUKAZUT.js.map\n",
      "start": 1701766112550,
      "end": 1701766112683,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701766112683,
      "end": 1701766112683,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  Transition_default\n} from \"/node_modules/.vite/deps/chunk-ZFUPPDSN.js?v=3c106fdb\";\nimport {\n  init_useForkRef,\n  useForkRef_default\n} from \"/node_modules/.vite/deps/chunk-23AETIBN.js?v=3c106fdb\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-NEVWHIAS.js?v=3c106fdb\";\nimport {\n  useTheme\n} from \"/node_modules/.vite/deps/chunk-JCF5JOWN.js?v=3c106fdb\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  elementAcceptingRef_default,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-6ZT6S2Z7.js?v=3c106fdb\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=3c106fdb\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=3c106fdb\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=3c106fdb\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=3c106fdb\";\n\n// node_modules/@mui/material/Backdrop/Backdrop.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types2 = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_styled();\ninit_useThemeProps();\n\n// node_modules/@mui/material/Fade/Fade.js\ninit_extends();\ninit_objectWithoutPropertiesLoose();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_esm();\n\n// node_modules/@mui/material/transitions/utils.js\nvar reflow = (node) => node.scrollTop;\nfunction getTransitionProps(props, options) {\n  var _style$transitionDura, _style$transitionTimi;\n  const {\n    timeout,\n    easing,\n    style = {}\n  } = props;\n  return {\n    duration: (_style$transitionDura = style.transitionDuration) != null ? _style$transitionDura : typeof timeout === \"number\" ? timeout : timeout[options.mode] || 0,\n    easing: (_style$transitionTimi = style.transitionTimingFunction) != null ? _style$transitionTimi : typeof easing === \"object\" ? easing[options.mode] : easing,\n    delay: style.transitionDelay\n  };\n}\n\n// node_modules/@mui/material/Fade/Fade.js\ninit_useForkRef();\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"addEndListener\", \"appear\", \"children\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nvar styles = {\n  entering: {\n    opacity: 1\n  },\n  entered: {\n    opacity: 1\n  }\n};\nvar Fade = React.forwardRef(function Fade2(props, ref) {\n  const theme = useTheme();\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    easing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition_default\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const enableStrictModeCompat = true;\n  const nodeRef = React.useRef(null);\n  const handleRef = useForkRef_default(nodeRef, children.ref, ref);\n  const normalizedTransitionCallback = (callback) => (maybeIsAppearing) => {\n    if (callback) {\n      const node = nodeRef.current;\n      if (maybeIsAppearing === void 0) {\n        callback(node);\n      } else {\n        callback(node, maybeIsAppearing);\n      }\n    }\n  };\n  const handleEntering = normalizedTransitionCallback(onEntering);\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    reflow(node);\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \"enter\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"opacity\", transitionProps);\n    node.style.transition = theme.transitions.create(\"opacity\", transitionProps);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback((node) => {\n    const transitionProps = getTransitionProps({\n      style,\n      timeout,\n      easing\n    }, {\n      mode: \"exit\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"opacity\", transitionProps);\n    node.style.transition = theme.transitions.create(\"opacity\", transitionProps);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback(onExited);\n  const handleAddEndListener = (next) => {\n    if (addEndListener) {\n      addEndListener(nodeRef.current, next);\n    }\n  };\n  return (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({\n    appear,\n    in: inProp,\n    nodeRef: enableStrictModeCompat ? nodeRef : void 0,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    timeout\n  }, other, {\n    children: (state, childProps) => {\n      return React.cloneElement(children, _extends({\n        style: _extends({\n          opacity: 0,\n          visibility: state === \"exited\" && !inProp ? \"hidden\" : void 0\n        }, styles[state], style, children.props.style),\n        ref: handleRef\n      }, childProps));\n    }\n  }));\n});\ntrue ? Fade.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: import_prop_types.default.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: import_prop_types.default.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef_default.isRequired,\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   */\n  easing: import_prop_types.default.oneOfType([import_prop_types.default.shape({\n    enter: import_prop_types.default.string,\n    exit: import_prop_types.default.string\n  }), import_prop_types.default.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: import_prop_types.default.bool,\n  /**\n   * @ignore\n   */\n  onEnter: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntered: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntering: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExit: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExited: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExiting: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  style: import_prop_types.default.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({\n    appear: import_prop_types.default.number,\n    enter: import_prop_types.default.number,\n    exit: import_prop_types.default.number\n  })])\n} : void 0;\nvar Fade_default = Fade;\n\n// node_modules/@mui/material/Backdrop/backdropClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getBackdropUtilityClass(slot) {\n  return generateUtilityClass(\"MuiBackdrop\", slot);\n}\nvar backdropClasses = generateUtilityClasses(\"MuiBackdrop\", [\"root\", \"invisible\"]);\nvar backdropClasses_default = backdropClasses;\n\n// node_modules/@mui/material/Backdrop/Backdrop.js\nvar import_jsx_runtime2 = __toESM(require_jsx_runtime());\nvar _excluded2 = [\"children\", \"className\", \"component\", \"components\", \"componentsProps\", \"invisible\", \"open\", \"slotProps\", \"slots\", \"TransitionComponent\", \"transitionDuration\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    invisible\n  } = ownerState;\n  const slots = {\n    root: [\"root\", invisible && \"invisible\"]\n  };\n  return composeClasses(slots, getBackdropUtilityClass, classes);\n};\nvar BackdropRoot = styled_default(\"div\", {\n  name: \"MuiBackdrop\",\n  slot: \"Root\",\n  overridesResolver: (props, styles2) => {\n    const {\n      ownerState\n    } = props;\n    return [styles2.root, ownerState.invisible && styles2.invisible];\n  }\n})(({\n  ownerState\n}) => _extends({\n  position: \"fixed\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n  backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  WebkitTapHighlightColor: \"transparent\"\n}, ownerState.invisible && {\n  backgroundColor: \"transparent\"\n}));\nvar Backdrop = React2.forwardRef(function Backdrop2(inProps, ref) {\n  var _slotProps$root, _ref, _slots$root;\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiBackdrop\"\n  });\n  const {\n    children,\n    className,\n    component = \"div\",\n    components = {},\n    componentsProps = {},\n    invisible = false,\n    open,\n    slotProps = {},\n    slots = {},\n    TransitionComponent = Fade_default,\n    transitionDuration\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const ownerState = _extends({}, props, {\n    component,\n    invisible\n  });\n  const classes = useUtilityClasses(ownerState);\n  const rootSlotProps = (_slotProps$root = slotProps.root) != null ? _slotProps$root : componentsProps.root;\n  return (0, import_jsx_runtime2.jsx)(TransitionComponent, _extends({\n    in: open,\n    timeout: transitionDuration\n  }, other, {\n    children: (0, import_jsx_runtime2.jsx)(BackdropRoot, _extends({\n      \"aria-hidden\": true\n    }, rootSlotProps, {\n      as: (_ref = (_slots$root = slots.root) != null ? _slots$root : components.Root) != null ? _ref : component,\n      className: clsx_default(classes.root, className, rootSlotProps == null ? void 0 : rootSlotProps.className),\n      ownerState: _extends({}, ownerState, rootSlotProps == null ? void 0 : rootSlotProps.ownerState),\n      classes,\n      ref,\n      children\n    }))\n  }));\n});\ntrue ? Backdrop.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types2.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types2.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types2.default.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types2.default.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `slots` prop.\n   * It's recommended to use the `slots` prop instead.\n   *\n   * @default {}\n   */\n  components: import_prop_types2.default.shape({\n    Root: import_prop_types2.default.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `slotProps` prop.\n   * It's recommended to use the `slotProps` prop instead, as `componentsProps` will be deprecated in the future.\n   *\n   * @default {}\n   */\n  componentsProps: import_prop_types2.default.shape({\n    root: import_prop_types2.default.object\n  }),\n  /**\n   * If `true`, the backdrop is invisible.\n   * It can be used when rendering a popover or a custom select component.\n   * @default false\n   */\n  invisible: import_prop_types2.default.bool,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: import_prop_types2.default.bool.isRequired,\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * This prop is an alias for the `componentsProps` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slotProps: import_prop_types2.default.shape({\n    root: import_prop_types2.default.object\n  }),\n  /**\n   * The components used for each slot inside.\n   *\n   * This prop is an alias for the `components` prop, which will be deprecated in the future.\n   *\n   * @default {}\n   */\n  slots: import_prop_types2.default.shape({\n    root: import_prop_types2.default.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: import_prop_types2.default.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   */\n  transitionDuration: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.shape({\n    appear: import_prop_types2.default.number,\n    enter: import_prop_types2.default.number,\n    exit: import_prop_types2.default.number\n  })])\n} : void 0;\nvar Backdrop_default = Backdrop;\n\nexport {\n  reflow,\n  getTransitionProps,\n  Fade_default,\n  getBackdropUtilityClass,\n  backdropClasses_default,\n  Backdrop_default\n};\n//# sourceMappingURL=chunk-NHUKAZUT.js.map\n",
      "start": 1701766112683,
      "end": 1701766112685,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
