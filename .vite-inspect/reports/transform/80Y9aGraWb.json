{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-545KLGFI.js?v=c929456e",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  capitalize_default,\n  init_capitalize\n} from \"./chunk-63S7JPMK.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-5CYIWUDX.js\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-CY3GP2WZ.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __esm,\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/SvgIcon/svgIconClasses.js\nfunction getSvgIconUtilityClass(slot) {\n  return generateUtilityClass(\"MuiSvgIcon\", slot);\n}\nvar svgIconClasses, svgIconClasses_default;\nvar init_svgIconClasses = __esm({\n  \"node_modules/@mui/material/SvgIcon/svgIconClasses.js\"() {\n    init_esm();\n    init_generateUtilityClass();\n    svgIconClasses = generateUtilityClasses(\"MuiSvgIcon\", [\"root\", \"colorPrimary\", \"colorSecondary\", \"colorAction\", \"colorError\", \"colorDisabled\", \"fontSizeInherit\", \"fontSizeSmall\", \"fontSizeMedium\", \"fontSizeLarge\"]);\n    svgIconClasses_default = svgIconClasses;\n  }\n});\n\n// node_modules/@mui/material/SvgIcon/SvgIcon.js\nvar React, import_prop_types, import_jsx_runtime, import_jsx_runtime2, _excluded, useUtilityClasses, SvgIconRoot, SvgIcon, SvgIcon_default;\nvar init_SvgIcon = __esm({\n  \"node_modules/@mui/material/SvgIcon/SvgIcon.js\"() {\n    \"use client\";\n    init_extends();\n    init_objectWithoutPropertiesLoose();\n    React = __toESM(require_react());\n    import_prop_types = __toESM(require_prop_types());\n    init_clsx();\n    init_composeClasses();\n    init_capitalize();\n    init_useThemeProps();\n    init_styled();\n    init_svgIconClasses();\n    import_jsx_runtime = __toESM(require_jsx_runtime());\n    import_jsx_runtime2 = __toESM(require_jsx_runtime());\n    _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\n    useUtilityClasses = (ownerState) => {\n      const {\n        color,\n        fontSize,\n        classes\n      } = ownerState;\n      const slots = {\n        root: [\"root\", color !== \"inherit\" && `color${capitalize_default(color)}`, `fontSize${capitalize_default(fontSize)}`]\n      };\n      return composeClasses(slots, getSvgIconUtilityClass, classes);\n    };\n    SvgIconRoot = styled_default(\"svg\", {\n      name: \"MuiSvgIcon\",\n      slot: \"Root\",\n      overridesResolver: (props, styles) => {\n        const {\n          ownerState\n        } = props;\n        return [styles.root, ownerState.color !== \"inherit\" && styles[`color${capitalize_default(ownerState.color)}`], styles[`fontSize${capitalize_default(ownerState.fontSize)}`]];\n      }\n    })(({\n      theme,\n      ownerState\n    }) => {\n      var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette2, _palette3;\n      return {\n        userSelect: \"none\",\n        width: \"1em\",\n        height: \"1em\",\n        display: \"inline-block\",\n        // the <svg> will define the property that has `currentColor`\n        // e.g. heroicons uses fill=\"none\" and stroke=\"currentColor\"\n        fill: ownerState.hasSvgAsChild ? void 0 : \"currentColor\",\n        flexShrink: 0,\n        transition: (_theme$transitions = theme.transitions) == null || (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, \"fill\", {\n          duration: (_theme$transitions2 = theme.transitions) == null || (_theme$transitions2 = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2.shorter\n        }),\n        fontSize: {\n          inherit: \"inherit\",\n          small: ((_theme$typography = theme.typography) == null || (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || \"1.25rem\",\n          medium: ((_theme$typography2 = theme.typography) == null || (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || \"1.5rem\",\n          large: ((_theme$typography3 = theme.typography) == null || (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || \"2.1875rem\"\n        }[ownerState.fontSize],\n        // TODO v5 deprecate, v6 remove for sx\n        color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null || (_palette = _palette[ownerState.color]) == null ? void 0 : _palette.main) != null ? _palette$ownerState$c : {\n          action: (_palette2 = (theme.vars || theme).palette) == null || (_palette2 = _palette2.action) == null ? void 0 : _palette2.active,\n          disabled: (_palette3 = (theme.vars || theme).palette) == null || (_palette3 = _palette3.action) == null ? void 0 : _palette3.disabled,\n          inherit: void 0\n        }[ownerState.color]\n      };\n    });\n    SvgIcon = React.forwardRef(function SvgIcon2(inProps, ref) {\n      const props = useThemeProps({\n        props: inProps,\n        name: \"MuiSvgIcon\"\n      });\n      const {\n        children,\n        className,\n        color = \"inherit\",\n        component = \"svg\",\n        fontSize = \"medium\",\n        htmlColor,\n        inheritViewBox = false,\n        titleAccess,\n        viewBox = \"0 0 24 24\"\n      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n      const hasSvgAsChild = React.isValidElement(children) && children.type === \"svg\";\n      const ownerState = _extends({}, props, {\n        color,\n        component,\n        fontSize,\n        instanceFontSize: inProps.fontSize,\n        inheritViewBox,\n        viewBox,\n        hasSvgAsChild\n      });\n      const more = {};\n      if (!inheritViewBox) {\n        more.viewBox = viewBox;\n      }\n      const classes = useUtilityClasses(ownerState);\n      return (0, import_jsx_runtime2.jsxs)(SvgIconRoot, _extends({\n        as: component,\n        className: clsx_default(classes.root, className),\n        focusable: \"false\",\n        color: htmlColor,\n        \"aria-hidden\": titleAccess ? void 0 : true,\n        role: titleAccess ? \"img\" : void 0,\n        ref\n      }, more, other, hasSvgAsChild && children.props, {\n        ownerState,\n        children: [hasSvgAsChild ? children.props.children : children, titleAccess ? (0, import_jsx_runtime.jsx)(\"title\", {\n          children: titleAccess\n        }) : null]\n      }));\n    });\n    true ? SvgIcon.propTypes = {\n      // ----------------------------- Warning --------------------------------\n      // | These PropTypes are generated from the TypeScript type definitions |\n      // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n      // ----------------------------------------------------------------------\n      /**\n       * Node passed into the SVG element.\n       */\n      children: import_prop_types.default.node,\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: import_prop_types.default.object,\n      /**\n       * @ignore\n       */\n      className: import_prop_types.default.string,\n      /**\n       * The color of the component.\n       * It supports both default and custom theme colors, which can be added as shown in the\n       * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n       * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n       * @default 'inherit'\n       */\n      color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"inherit\", \"action\", \"disabled\", \"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]), import_prop_types.default.string]),\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: import_prop_types.default.elementType,\n      /**\n       * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n       * @default 'medium'\n       */\n      fontSize: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"inherit\", \"large\", \"medium\", \"small\"]), import_prop_types.default.string]),\n      /**\n       * Applies a color attribute to the SVG element.\n       */\n      htmlColor: import_prop_types.default.string,\n      /**\n       * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n       * prop will be ignored.\n       * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n       * `component`'s viewBox to the root node.\n       * @default false\n       */\n      inheritViewBox: import_prop_types.default.bool,\n      /**\n       * The shape-rendering attribute. The behavior of the different options is described on the\n       * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n       * If you are having issues with blurry icons you should investigate this prop.\n       */\n      shapeRendering: import_prop_types.default.string,\n      /**\n       * The system prop that allows defining system overrides as well as additional CSS styles.\n       */\n      sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n      /**\n       * Provides a human-readable title for the element that contains it.\n       * https://www.w3.org/TR/SVG-access/#Equivalent\n       */\n      titleAccess: import_prop_types.default.string,\n      /**\n       * Allows you to redefine what the coordinates without units mean inside an SVG element.\n       * For example, if the SVG element is 500 (width) by 200 (height),\n       * and you pass viewBox=\"0 0 50 20\",\n       * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n       * to bottom right (50,20) and each unit will be worth 10px.\n       * @default '0 0 24 24'\n       */\n      viewBox: import_prop_types.default.string\n    } : void 0;\n    SvgIcon.muiName = \"SvgIcon\";\n    SvgIcon_default = SvgIcon;\n  }\n});\n\n// node_modules/@mui/material/SvgIcon/index.js\nvar init_SvgIcon2 = __esm({\n  \"node_modules/@mui/material/SvgIcon/index.js\"() {\n    \"use client\";\n    init_SvgIcon();\n    init_svgIconClasses();\n    init_svgIconClasses();\n  }\n});\n\n// node_modules/@mui/material/utils/createSvgIcon.js\nfunction createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return (0, import_jsx_runtime3.jsx)(SvgIcon_default, _extends({\n      \"data-testid\": `${displayName}Icon`,\n      ref\n    }, props, {\n      children: path\n    }));\n  }\n  if (true) {\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon_default.muiName;\n  return React2.memo(React2.forwardRef(Component));\n}\nvar React2, import_jsx_runtime3;\nvar init_createSvgIcon = __esm({\n  \"node_modules/@mui/material/utils/createSvgIcon.js\"() {\n    \"use client\";\n    init_extends();\n    React2 = __toESM(require_react());\n    init_SvgIcon2();\n    import_jsx_runtime3 = __toESM(require_jsx_runtime());\n  }\n});\n\nexport {\n  getSvgIconUtilityClass,\n  svgIconClasses_default,\n  SvgIcon_default,\n  init_SvgIcon2 as init_SvgIcon,\n  createSvgIcon,\n  init_createSvgIcon\n};\n//# sourceMappingURL=chunk-545KLGFI.js.map\n",
      "start": 1701867792155,
      "end": 1701867792296,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  capitalize_default,\n  init_capitalize\n} from \"/node_modules/.vite/deps/chunk-63S7JPMK.js?v=c929456e\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-5CYIWUDX.js?v=c929456e\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-CY3GP2WZ.js?v=c929456e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=c929456e\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=c929456e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=c929456e\";\nimport {\n  __esm,\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=c929456e\";\n\n// node_modules/@mui/material/SvgIcon/svgIconClasses.js\nfunction getSvgIconUtilityClass(slot) {\n  return generateUtilityClass(\"MuiSvgIcon\", slot);\n}\nvar svgIconClasses, svgIconClasses_default;\nvar init_svgIconClasses = __esm({\n  \"node_modules/@mui/material/SvgIcon/svgIconClasses.js\"() {\n    init_esm();\n    init_generateUtilityClass();\n    svgIconClasses = generateUtilityClasses(\"MuiSvgIcon\", [\"root\", \"colorPrimary\", \"colorSecondary\", \"colorAction\", \"colorError\", \"colorDisabled\", \"fontSizeInherit\", \"fontSizeSmall\", \"fontSizeMedium\", \"fontSizeLarge\"]);\n    svgIconClasses_default = svgIconClasses;\n  }\n});\n\n// node_modules/@mui/material/SvgIcon/SvgIcon.js\nvar React, import_prop_types, import_jsx_runtime, import_jsx_runtime2, _excluded, useUtilityClasses, SvgIconRoot, SvgIcon, SvgIcon_default;\nvar init_SvgIcon = __esm({\n  \"node_modules/@mui/material/SvgIcon/SvgIcon.js\"() {\n    \"use client\";\n    init_extends();\n    init_objectWithoutPropertiesLoose();\n    React = __toESM(require_react());\n    import_prop_types = __toESM(require_prop_types());\n    init_clsx();\n    init_composeClasses();\n    init_capitalize();\n    init_useThemeProps();\n    init_styled();\n    init_svgIconClasses();\n    import_jsx_runtime = __toESM(require_jsx_runtime());\n    import_jsx_runtime2 = __toESM(require_jsx_runtime());\n    _excluded = [\"children\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"inheritViewBox\", \"titleAccess\", \"viewBox\"];\n    useUtilityClasses = (ownerState) => {\n      const {\n        color,\n        fontSize,\n        classes\n      } = ownerState;\n      const slots = {\n        root: [\"root\", color !== \"inherit\" && `color${capitalize_default(color)}`, `fontSize${capitalize_default(fontSize)}`]\n      };\n      return composeClasses(slots, getSvgIconUtilityClass, classes);\n    };\n    SvgIconRoot = styled_default(\"svg\", {\n      name: \"MuiSvgIcon\",\n      slot: \"Root\",\n      overridesResolver: (props, styles) => {\n        const {\n          ownerState\n        } = props;\n        return [styles.root, ownerState.color !== \"inherit\" && styles[`color${capitalize_default(ownerState.color)}`], styles[`fontSize${capitalize_default(ownerState.fontSize)}`]];\n      }\n    })(({\n      theme,\n      ownerState\n    }) => {\n      var _theme$transitions, _theme$transitions$cr, _theme$transitions2, _theme$typography, _theme$typography$pxT, _theme$typography2, _theme$typography2$px, _theme$typography3, _theme$typography3$px, _palette$ownerState$c, _palette, _palette2, _palette3;\n      return {\n        userSelect: \"none\",\n        width: \"1em\",\n        height: \"1em\",\n        display: \"inline-block\",\n        // the <svg> will define the property that has `currentColor`\n        // e.g. heroicons uses fill=\"none\" and stroke=\"currentColor\"\n        fill: ownerState.hasSvgAsChild ? void 0 : \"currentColor\",\n        flexShrink: 0,\n        transition: (_theme$transitions = theme.transitions) == null || (_theme$transitions$cr = _theme$transitions.create) == null ? void 0 : _theme$transitions$cr.call(_theme$transitions, \"fill\", {\n          duration: (_theme$transitions2 = theme.transitions) == null || (_theme$transitions2 = _theme$transitions2.duration) == null ? void 0 : _theme$transitions2.shorter\n        }),\n        fontSize: {\n          inherit: \"inherit\",\n          small: ((_theme$typography = theme.typography) == null || (_theme$typography$pxT = _theme$typography.pxToRem) == null ? void 0 : _theme$typography$pxT.call(_theme$typography, 20)) || \"1.25rem\",\n          medium: ((_theme$typography2 = theme.typography) == null || (_theme$typography2$px = _theme$typography2.pxToRem) == null ? void 0 : _theme$typography2$px.call(_theme$typography2, 24)) || \"1.5rem\",\n          large: ((_theme$typography3 = theme.typography) == null || (_theme$typography3$px = _theme$typography3.pxToRem) == null ? void 0 : _theme$typography3$px.call(_theme$typography3, 35)) || \"2.1875rem\"\n        }[ownerState.fontSize],\n        // TODO v5 deprecate, v6 remove for sx\n        color: (_palette$ownerState$c = (_palette = (theme.vars || theme).palette) == null || (_palette = _palette[ownerState.color]) == null ? void 0 : _palette.main) != null ? _palette$ownerState$c : {\n          action: (_palette2 = (theme.vars || theme).palette) == null || (_palette2 = _palette2.action) == null ? void 0 : _palette2.active,\n          disabled: (_palette3 = (theme.vars || theme).palette) == null || (_palette3 = _palette3.action) == null ? void 0 : _palette3.disabled,\n          inherit: void 0\n        }[ownerState.color]\n      };\n    });\n    SvgIcon = React.forwardRef(function SvgIcon2(inProps, ref) {\n      const props = useThemeProps({\n        props: inProps,\n        name: \"MuiSvgIcon\"\n      });\n      const {\n        children,\n        className,\n        color = \"inherit\",\n        component = \"svg\",\n        fontSize = \"medium\",\n        htmlColor,\n        inheritViewBox = false,\n        titleAccess,\n        viewBox = \"0 0 24 24\"\n      } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n      const hasSvgAsChild = React.isValidElement(children) && children.type === \"svg\";\n      const ownerState = _extends({}, props, {\n        color,\n        component,\n        fontSize,\n        instanceFontSize: inProps.fontSize,\n        inheritViewBox,\n        viewBox,\n        hasSvgAsChild\n      });\n      const more = {};\n      if (!inheritViewBox) {\n        more.viewBox = viewBox;\n      }\n      const classes = useUtilityClasses(ownerState);\n      return (0, import_jsx_runtime2.jsxs)(SvgIconRoot, _extends({\n        as: component,\n        className: clsx_default(classes.root, className),\n        focusable: \"false\",\n        color: htmlColor,\n        \"aria-hidden\": titleAccess ? void 0 : true,\n        role: titleAccess ? \"img\" : void 0,\n        ref\n      }, more, other, hasSvgAsChild && children.props, {\n        ownerState,\n        children: [hasSvgAsChild ? children.props.children : children, titleAccess ? (0, import_jsx_runtime.jsx)(\"title\", {\n          children: titleAccess\n        }) : null]\n      }));\n    });\n    true ? SvgIcon.propTypes = {\n      // ----------------------------- Warning --------------------------------\n      // | These PropTypes are generated from the TypeScript type definitions |\n      // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n      // ----------------------------------------------------------------------\n      /**\n       * Node passed into the SVG element.\n       */\n      children: import_prop_types.default.node,\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: import_prop_types.default.object,\n      /**\n       * @ignore\n       */\n      className: import_prop_types.default.string,\n      /**\n       * The color of the component.\n       * It supports both default and custom theme colors, which can be added as shown in the\n       * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n       * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n       * @default 'inherit'\n       */\n      color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"inherit\", \"action\", \"disabled\", \"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]), import_prop_types.default.string]),\n      /**\n       * The component used for the root node.\n       * Either a string to use a HTML element or a component.\n       */\n      component: import_prop_types.default.elementType,\n      /**\n       * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n       * @default 'medium'\n       */\n      fontSize: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"inherit\", \"large\", \"medium\", \"small\"]), import_prop_types.default.string]),\n      /**\n       * Applies a color attribute to the SVG element.\n       */\n      htmlColor: import_prop_types.default.string,\n      /**\n       * If `true`, the root node will inherit the custom `component`'s viewBox and the `viewBox`\n       * prop will be ignored.\n       * Useful when you want to reference a custom `component` and have `SvgIcon` pass that\n       * `component`'s viewBox to the root node.\n       * @default false\n       */\n      inheritViewBox: import_prop_types.default.bool,\n      /**\n       * The shape-rendering attribute. The behavior of the different options is described on the\n       * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n       * If you are having issues with blurry icons you should investigate this prop.\n       */\n      shapeRendering: import_prop_types.default.string,\n      /**\n       * The system prop that allows defining system overrides as well as additional CSS styles.\n       */\n      sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n      /**\n       * Provides a human-readable title for the element that contains it.\n       * https://www.w3.org/TR/SVG-access/#Equivalent\n       */\n      titleAccess: import_prop_types.default.string,\n      /**\n       * Allows you to redefine what the coordinates without units mean inside an SVG element.\n       * For example, if the SVG element is 500 (width) by 200 (height),\n       * and you pass viewBox=\"0 0 50 20\",\n       * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n       * to bottom right (50,20) and each unit will be worth 10px.\n       * @default '0 0 24 24'\n       */\n      viewBox: import_prop_types.default.string\n    } : void 0;\n    SvgIcon.muiName = \"SvgIcon\";\n    SvgIcon_default = SvgIcon;\n  }\n});\n\n// node_modules/@mui/material/SvgIcon/index.js\nvar init_SvgIcon2 = __esm({\n  \"node_modules/@mui/material/SvgIcon/index.js\"() {\n    \"use client\";\n    init_SvgIcon();\n    init_svgIconClasses();\n    init_svgIconClasses();\n  }\n});\n\n// node_modules/@mui/material/utils/createSvgIcon.js\nfunction createSvgIcon(path, displayName) {\n  function Component(props, ref) {\n    return (0, import_jsx_runtime3.jsx)(SvgIcon_default, _extends({\n      \"data-testid\": `${displayName}Icon`,\n      ref\n    }, props, {\n      children: path\n    }));\n  }\n  if (true) {\n    Component.displayName = `${displayName}Icon`;\n  }\n  Component.muiName = SvgIcon_default.muiName;\n  return React2.memo(React2.forwardRef(Component));\n}\nvar React2, import_jsx_runtime3;\nvar init_createSvgIcon = __esm({\n  \"node_modules/@mui/material/utils/createSvgIcon.js\"() {\n    \"use client\";\n    init_extends();\n    React2 = __toESM(require_react());\n    init_SvgIcon2();\n    import_jsx_runtime3 = __toESM(require_jsx_runtime());\n  }\n});\n\nexport {\n  getSvgIconUtilityClass,\n  svgIconClasses_default,\n  SvgIcon_default,\n  init_SvgIcon2 as init_SvgIcon,\n  createSvgIcon,\n  init_createSvgIcon\n};\n//# sourceMappingURL=chunk-545KLGFI.js.map\n",
      "start": 1701867792296,
      "end": 1701867792296,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
