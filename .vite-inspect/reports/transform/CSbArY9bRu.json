{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-VBYXYQT4.js?v=c929456e",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  isAdornedStart,\n  isFilled\n} from \"./chunk-AKKANAVW.js\";\nimport {\n  FormControlContext_default\n} from \"./chunk-DFOFFFUN.js\";\nimport {\n  init_isMuiElement,\n  isMuiElement_default\n} from \"./chunk-CURGALAR.js\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"./chunk-63S7JPMK.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-5CYIWUDX.js\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-CY3GP2WZ.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/FormControl/FormControl.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_useThemeProps();\ninit_styled();\ninit_capitalize();\ninit_isMuiElement();\n\n// node_modules/@mui/material/FormControl/formControlClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getFormControlUtilityClasses(slot) {\n  return generateUtilityClass(\"MuiFormControl\", slot);\n}\nvar formControlClasses = generateUtilityClasses(\"MuiFormControl\", [\"root\", \"marginNone\", \"marginNormal\", \"marginDense\", \"fullWidth\", \"disabled\"]);\nvar formControlClasses_default = formControlClasses;\n\n// node_modules/@mui/material/FormControl/FormControl.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: [\"root\", margin !== \"none\" && `margin${capitalize_default(margin)}`, fullWidth && \"fullWidth\"]\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\nvar FormControlRoot = styled_default(\"div\", {\n  name: \"MuiFormControl\",\n  slot: \"Root\",\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize_default(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  position: \"relative\",\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: \"top\"\n}, ownerState.margin === \"normal\" && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === \"dense\" && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: \"100%\"\n}));\nvar FormControl = React.forwardRef(function FormControl2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiFormControl\"\n  });\n  const {\n    children,\n    className,\n    color = \"primary\",\n    component = \"div\",\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = \"none\",\n    required = false,\n    size = \"medium\",\n    variant = \"outlined\"\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    let initialAdornedStart = false;\n    if (children) {\n      React.Children.forEach(children, (child) => {\n        if (!isMuiElement_default(child, [\"Input\", \"Select\"])) {\n          return;\n        }\n        const input = isMuiElement_default(child, [\"Select\"]) ? child.props.input : child;\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    let initialFilled = false;\n    if (children) {\n      React.Children.forEach(children, (child) => {\n        if (!isMuiElement_default(child, [\"Input\", \"Select\"])) {\n          return;\n        }\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n  const focused = visuallyFocused !== void 0 && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  if (true) {\n    const registeredInput = React.useRef(false);\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error([\"MUI: There are multiple `InputBase` components inside a FormControl.\", \"This creates visual inconsistencies, only use one `InputBase`.\"].join(\"\\n\"));\n      }\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return (0, import_jsx_runtime.jsx)(FormControlContext_default.Provider, {\n    value: childContext,\n    children: (0, import_jsx_runtime.jsx)(FormControlRoot, _extends({\n      as: component,\n      ownerState,\n      className: clsx_default(classes.root, className),\n      ref\n    }, other, {\n      children\n    }))\n  });\n});\ntrue ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]), import_prop_types.default.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types.default.elementType,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: import_prop_types.default.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: import_prop_types.default.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: import_prop_types.default.bool,\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: import_prop_types.default.bool,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: import_prop_types.default.bool,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: import_prop_types.default.oneOf([\"dense\", \"none\", \"normal\"]),\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: import_prop_types.default.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"medium\", \"small\"]), import_prop_types.default.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: import_prop_types.default.oneOf([\"filled\", \"outlined\", \"standard\"])\n} : void 0;\nvar FormControl_default = FormControl;\n\nexport {\n  getFormControlUtilityClasses,\n  formControlClasses_default,\n  FormControl_default\n};\n//# sourceMappingURL=chunk-VBYXYQT4.js.map\n",
      "start": 1701867792155,
      "end": 1701867792276,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701867792276,
      "end": 1701867792276,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  isAdornedStart,\n  isFilled\n} from \"/node_modules/.vite/deps/chunk-AKKANAVW.js?v=c929456e\";\nimport {\n  FormControlContext_default\n} from \"/node_modules/.vite/deps/chunk-DFOFFFUN.js?v=c929456e\";\nimport {\n  init_isMuiElement,\n  isMuiElement_default\n} from \"/node_modules/.vite/deps/chunk-CURGALAR.js?v=c929456e\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"/node_modules/.vite/deps/chunk-63S7JPMK.js?v=c929456e\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-5CYIWUDX.js?v=c929456e\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-CY3GP2WZ.js?v=c929456e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=c929456e\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=c929456e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=c929456e\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=c929456e\";\n\n// node_modules/@mui/material/FormControl/FormControl.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_useThemeProps();\ninit_styled();\ninit_capitalize();\ninit_isMuiElement();\n\n// node_modules/@mui/material/FormControl/formControlClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getFormControlUtilityClasses(slot) {\n  return generateUtilityClass(\"MuiFormControl\", slot);\n}\nvar formControlClasses = generateUtilityClasses(\"MuiFormControl\", [\"root\", \"marginNone\", \"marginNormal\", \"marginDense\", \"fullWidth\", \"disabled\"]);\nvar formControlClasses_default = formControlClasses;\n\n// node_modules/@mui/material/FormControl/FormControl.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"focused\", \"fullWidth\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    margin,\n    fullWidth\n  } = ownerState;\n  const slots = {\n    root: [\"root\", margin !== \"none\" && `margin${capitalize_default(margin)}`, fullWidth && \"fullWidth\"]\n  };\n  return composeClasses(slots, getFormControlUtilityClasses, classes);\n};\nvar FormControlRoot = styled_default(\"div\", {\n  name: \"MuiFormControl\",\n  slot: \"Root\",\n  overridesResolver: ({\n    ownerState\n  }, styles) => {\n    return _extends({}, styles.root, styles[`margin${capitalize_default(ownerState.margin)}`], ownerState.fullWidth && styles.fullWidth);\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: \"inline-flex\",\n  flexDirection: \"column\",\n  position: \"relative\",\n  // Reset fieldset default style.\n  minWidth: 0,\n  padding: 0,\n  margin: 0,\n  border: 0,\n  verticalAlign: \"top\"\n}, ownerState.margin === \"normal\" && {\n  marginTop: 16,\n  marginBottom: 8\n}, ownerState.margin === \"dense\" && {\n  marginTop: 8,\n  marginBottom: 4\n}, ownerState.fullWidth && {\n  width: \"100%\"\n}));\nvar FormControl = React.forwardRef(function FormControl2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiFormControl\"\n  });\n  const {\n    children,\n    className,\n    color = \"primary\",\n    component = \"div\",\n    disabled = false,\n    error = false,\n    focused: visuallyFocused,\n    fullWidth = false,\n    hiddenLabel = false,\n    margin = \"none\",\n    required = false,\n    size = \"medium\",\n    variant = \"outlined\"\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    error,\n    fullWidth,\n    hiddenLabel,\n    margin,\n    required,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const [adornedStart, setAdornedStart] = React.useState(() => {\n    let initialAdornedStart = false;\n    if (children) {\n      React.Children.forEach(children, (child) => {\n        if (!isMuiElement_default(child, [\"Input\", \"Select\"])) {\n          return;\n        }\n        const input = isMuiElement_default(child, [\"Select\"]) ? child.props.input : child;\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n    return initialAdornedStart;\n  });\n  const [filled, setFilled] = React.useState(() => {\n    let initialFilled = false;\n    if (children) {\n      React.Children.forEach(children, (child) => {\n        if (!isMuiElement_default(child, [\"Input\", \"Select\"])) {\n          return;\n        }\n        if (isFilled(child.props, true) || isFilled(child.props.inputProps, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n    return initialFilled;\n  });\n  const [focusedState, setFocused] = React.useState(false);\n  if (disabled && focusedState) {\n    setFocused(false);\n  }\n  const focused = visuallyFocused !== void 0 && !disabled ? visuallyFocused : focusedState;\n  let registerEffect;\n  if (true) {\n    const registeredInput = React.useRef(false);\n    registerEffect = () => {\n      if (registeredInput.current) {\n        console.error([\"MUI: There are multiple `InputBase` components inside a FormControl.\", \"This creates visual inconsistencies, only use one `InputBase`.\"].join(\"\\n\"));\n      }\n      registeredInput.current = true;\n      return () => {\n        registeredInput.current = false;\n      };\n    };\n  }\n  const childContext = React.useMemo(() => {\n    return {\n      adornedStart,\n      setAdornedStart,\n      color,\n      disabled,\n      error,\n      filled,\n      focused,\n      fullWidth,\n      hiddenLabel,\n      size,\n      onBlur: () => {\n        setFocused(false);\n      },\n      onEmpty: () => {\n        setFilled(false);\n      },\n      onFilled: () => {\n        setFilled(true);\n      },\n      onFocus: () => {\n        setFocused(true);\n      },\n      registerEffect,\n      required,\n      variant\n    };\n  }, [adornedStart, color, disabled, error, filled, focused, fullWidth, hiddenLabel, registerEffect, required, size, variant]);\n  return (0, import_jsx_runtime.jsx)(FormControlContext_default.Provider, {\n    value: childContext,\n    children: (0, import_jsx_runtime.jsx)(FormControlRoot, _extends({\n      as: component,\n      ownerState,\n      className: clsx_default(classes.root, className),\n      ref\n    }, other, {\n      children\n    }))\n  });\n});\ntrue ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"primary\", \"secondary\", \"error\", \"info\", \"success\", \"warning\"]), import_prop_types.default.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types.default.elementType,\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   * @default false\n   */\n  disabled: import_prop_types.default.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   * @default false\n   */\n  error: import_prop_types.default.bool,\n  /**\n   * If `true`, the component is displayed in focused state.\n   */\n  focused: import_prop_types.default.bool,\n  /**\n   * If `true`, the component will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: import_prop_types.default.bool,\n  /**\n   * If `true`, the label is hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   * @default false\n   */\n  hiddenLabel: import_prop_types.default.bool,\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   * @default 'none'\n   */\n  margin: import_prop_types.default.oneOf([\"dense\", \"none\", \"normal\"]),\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   * @default false\n   */\n  required: import_prop_types.default.bool,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"medium\", \"small\"]), import_prop_types.default.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: import_prop_types.default.oneOf([\"filled\", \"outlined\", \"standard\"])\n} : void 0;\nvar FormControl_default = FormControl;\n\nexport {\n  getFormControlUtilityClasses,\n  formControlClasses_default,\n  FormControl_default\n};\n//# sourceMappingURL=chunk-VBYXYQT4.js.map\n",
      "start": 1701867792276,
      "end": 1701867792277,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
