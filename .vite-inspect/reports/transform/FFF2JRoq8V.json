{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/uuid.js?v=3c106fdb",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import \"./chunk-ROME4SDB.js\";\n\n// node_modules/uuid/dist/esm-browser/rng.js\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    getRandomValues = typeof crypto !== \"undefined\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n    }\n  }\n  return getRandomValues(rnds8);\n}\n\n// node_modules/uuid/dist/esm-browser/regex.js\nvar regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\n// node_modules/uuid/dist/esm-browser/validate.js\nfunction validate(uuid) {\n  return typeof uuid === \"string\" && regex_default.test(uuid);\n}\nvar validate_default = validate;\n\n// node_modules/uuid/dist/esm-browser/stringify.js\nvar byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 256).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  if (!validate_default(uuid)) {\n    throw TypeError(\"Stringified UUID is invalid\");\n  }\n  return uuid;\n}\nvar stringify_default = stringify;\n\n// node_modules/uuid/dist/esm-browser/v1.js\nvar _nodeId;\nvar _clockseq;\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== void 0 ? options.clockseq : _clockseq;\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n    if (node == null) {\n      node = _nodeId = [seedBytes[0] | 1, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 16383;\n    }\n  }\n  let msecs = options.msecs !== void 0 ? options.msecs : Date.now();\n  let nsecs = options.nsecs !== void 0 ? options.nsecs : _lastNSecs + 1;\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;\n  if (dt < 0 && options.clockseq === void 0) {\n    clockseq = clockseq + 1 & 16383;\n  }\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === void 0) {\n    nsecs = 0;\n  }\n  if (nsecs >= 1e4) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n  msecs += 122192928e5;\n  const tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;\n  b[i++] = tl >>> 24 & 255;\n  b[i++] = tl >>> 16 & 255;\n  b[i++] = tl >>> 8 & 255;\n  b[i++] = tl & 255;\n  const tmh = msecs / 4294967296 * 1e4 & 268435455;\n  b[i++] = tmh >>> 8 & 255;\n  b[i++] = tmh & 255;\n  b[i++] = tmh >>> 24 & 15 | 16;\n  b[i++] = tmh >>> 16 & 255;\n  b[i++] = clockseq >>> 8 | 128;\n  b[i++] = clockseq & 255;\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || unsafeStringify(b);\n}\nvar v1_default = v1;\n\n// node_modules/uuid/dist/esm-browser/parse.js\nfunction parse(uuid) {\n  if (!validate_default(uuid)) {\n    throw TypeError(\"Invalid UUID\");\n  }\n  let v;\n  const arr = new Uint8Array(16);\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 255;\n  arr[2] = v >>> 8 & 255;\n  arr[3] = v & 255;\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 255;\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 255;\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 255;\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;\n  arr[11] = v / 4294967296 & 255;\n  arr[12] = v >>> 24 & 255;\n  arr[13] = v >>> 16 & 255;\n  arr[14] = v >>> 8 & 255;\n  arr[15] = v & 255;\n  return arr;\n}\nvar parse_default = parse;\n\n// node_modules/uuid/dist/esm-browser/v35.js\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str));\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nvar DNS = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\";\nvar URL = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\";\nfunction v35(name, version2, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === \"string\") {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === \"string\") {\n      namespace = parse_default(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n    }\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 15 | version2;\n    bytes[8] = bytes[8] & 63 | 128;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}\n\n// node_modules/uuid/dist/esm-browser/md5.js\nfunction md5(bytes) {\n  if (typeof bytes === \"string\") {\n    const msg = unescape(encodeURIComponent(bytes));\n    bytes = new Uint8Array(msg.length);\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = \"0123456789abcdef\";\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 255;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 15) + hexTab.charAt(x & 15), 16);\n    output.push(hex);\n  }\n  return output;\n}\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\nfunction wordsToMd5(x, len) {\n  x[len >> 5] |= 128 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 255) << i % 32;\n  }\n  return output;\n}\nfunction safeAdd(x, y) {\n  const lsw = (x & 65535) + (y & 65535);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 65535;\n}\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nvar md5_default = md5;\n\n// node_modules/uuid/dist/esm-browser/v3.js\nvar v3 = v35(\"v3\", 48, md5_default);\nvar v3_default = v3;\n\n// node_modules/uuid/dist/esm-browser/native.js\nvar randomUUID = typeof crypto !== \"undefined\" && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native_default = {\n  randomUUID\n};\n\n// node_modules/uuid/dist/esm-browser/v4.js\nfunction v4(options, buf, offset) {\n  if (native_default.randomUUID && !buf && !options) {\n    return native_default.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n  rnds[6] = rnds[6] & 15 | 64;\n  rnds[8] = rnds[8] & 63 | 128;\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nvar v4_default = v4;\n\n// node_modules/uuid/dist/esm-browser/sha1.js\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  const K = [1518500249, 1859775393, 2400959708, 3395469782];\n  const H = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  if (typeof bytes === \"string\") {\n    const msg = unescape(encodeURIComponent(bytes));\n    bytes = [];\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(128);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n    M[i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 4294967295;\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 255, H[0] >> 16 & 255, H[0] >> 8 & 255, H[0] & 255, H[1] >> 24 & 255, H[1] >> 16 & 255, H[1] >> 8 & 255, H[1] & 255, H[2] >> 24 & 255, H[2] >> 16 & 255, H[2] >> 8 & 255, H[2] & 255, H[3] >> 24 & 255, H[3] >> 16 & 255, H[3] >> 8 & 255, H[3] & 255, H[4] >> 24 & 255, H[4] >> 16 & 255, H[4] >> 8 & 255, H[4] & 255];\n}\nvar sha1_default = sha1;\n\n// node_modules/uuid/dist/esm-browser/v5.js\nvar v5 = v35(\"v5\", 80, sha1_default);\nvar v5_default = v5;\n\n// node_modules/uuid/dist/esm-browser/nil.js\nvar nil_default = \"00000000-0000-0000-0000-000000000000\";\n\n// node_modules/uuid/dist/esm-browser/version.js\nfunction version(uuid) {\n  if (!validate_default(uuid)) {\n    throw TypeError(\"Invalid UUID\");\n  }\n  return parseInt(uuid.slice(14, 15), 16);\n}\nvar version_default = version;\nexport {\n  nil_default as NIL,\n  parse_default as parse,\n  stringify_default as stringify,\n  v1_default as v1,\n  v3_default as v3,\n  v4_default as v4,\n  v5_default as v5,\n  validate_default as validate,\n  version_default as version\n};\n//# sourceMappingURL=uuid.js.map\n",
      "start": 1701766112703,
      "end": 1701766112750,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701766112750,
      "end": 1701766112750,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=3c106fdb\";\n\n// node_modules/uuid/dist/esm-browser/rng.js\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  if (!getRandomValues) {\n    getRandomValues = typeof crypto !== \"undefined\" && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");\n    }\n  }\n  return getRandomValues(rnds8);\n}\n\n// node_modules/uuid/dist/esm-browser/regex.js\nvar regex_default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\n\n// node_modules/uuid/dist/esm-browser/validate.js\nfunction validate(uuid) {\n  return typeof uuid === \"string\" && regex_default.test(uuid);\n}\nvar validate_default = validate;\n\n// node_modules/uuid/dist/esm-browser/stringify.js\nvar byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 256).toString(16).slice(1));\n}\nfunction unsafeStringify(arr, offset = 0) {\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + \"-\" + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + \"-\" + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + \"-\" + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + \"-\" + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset);\n  if (!validate_default(uuid)) {\n    throw TypeError(\"Stringified UUID is invalid\");\n  }\n  return uuid;\n}\nvar stringify_default = stringify;\n\n// node_modules/uuid/dist/esm-browser/v1.js\nvar _nodeId;\nvar _clockseq;\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== void 0 ? options.clockseq : _clockseq;\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n    if (node == null) {\n      node = _nodeId = [seedBytes[0] | 1, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n    if (clockseq == null) {\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 16383;\n    }\n  }\n  let msecs = options.msecs !== void 0 ? options.msecs : Date.now();\n  let nsecs = options.nsecs !== void 0 ? options.nsecs : _lastNSecs + 1;\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;\n  if (dt < 0 && options.clockseq === void 0) {\n    clockseq = clockseq + 1 & 16383;\n  }\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === void 0) {\n    nsecs = 0;\n  }\n  if (nsecs >= 1e4) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n  msecs += 122192928e5;\n  const tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;\n  b[i++] = tl >>> 24 & 255;\n  b[i++] = tl >>> 16 & 255;\n  b[i++] = tl >>> 8 & 255;\n  b[i++] = tl & 255;\n  const tmh = msecs / 4294967296 * 1e4 & 268435455;\n  b[i++] = tmh >>> 8 & 255;\n  b[i++] = tmh & 255;\n  b[i++] = tmh >>> 24 & 15 | 16;\n  b[i++] = tmh >>> 16 & 255;\n  b[i++] = clockseq >>> 8 | 128;\n  b[i++] = clockseq & 255;\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n  return buf || unsafeStringify(b);\n}\nvar v1_default = v1;\n\n// node_modules/uuid/dist/esm-browser/parse.js\nfunction parse(uuid) {\n  if (!validate_default(uuid)) {\n    throw TypeError(\"Invalid UUID\");\n  }\n  let v;\n  const arr = new Uint8Array(16);\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 255;\n  arr[2] = v >>> 8 & 255;\n  arr[3] = v & 255;\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 255;\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 255;\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 255;\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 1099511627776 & 255;\n  arr[11] = v / 4294967296 & 255;\n  arr[12] = v >>> 24 & 255;\n  arr[13] = v >>> 16 & 255;\n  arr[14] = v >>> 8 & 255;\n  arr[15] = v & 255;\n  return arr;\n}\nvar parse_default = parse;\n\n// node_modules/uuid/dist/esm-browser/v35.js\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str));\n  const bytes = [];\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n  return bytes;\n}\nvar DNS = \"6ba7b810-9dad-11d1-80b4-00c04fd430c8\";\nvar URL = \"6ba7b811-9dad-11d1-80b4-00c04fd430c8\";\nfunction v35(name, version2, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n    if (typeof value === \"string\") {\n      value = stringToBytes(value);\n    }\n    if (typeof namespace === \"string\") {\n      namespace = parse_default(namespace);\n    }\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError(\"Namespace must be array-like (16 iterable integer values, 0-255)\");\n    }\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 15 | version2;\n    bytes[8] = bytes[8] & 63 | 128;\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(bytes);\n  }\n  try {\n    generateUUID.name = name;\n  } catch (err) {\n  }\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}\n\n// node_modules/uuid/dist/esm-browser/md5.js\nfunction md5(bytes) {\n  if (typeof bytes === \"string\") {\n    const msg = unescape(encodeURIComponent(bytes));\n    bytes = new Uint8Array(msg.length);\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = \"0123456789abcdef\";\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 255;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 15) + hexTab.charAt(x & 15), 16);\n    output.push(hex);\n  }\n  return output;\n}\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\nfunction wordsToMd5(x, len) {\n  x[len >> 5] |= 128 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n  return [a, b, c, d];\n}\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 255) << i % 32;\n  }\n  return output;\n}\nfunction safeAdd(x, y) {\n  const lsw = (x & 65535) + (y & 65535);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 65535;\n}\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\nvar md5_default = md5;\n\n// node_modules/uuid/dist/esm-browser/v3.js\nvar v3 = v35(\"v3\", 48, md5_default);\nvar v3_default = v3;\n\n// node_modules/uuid/dist/esm-browser/native.js\nvar randomUUID = typeof crypto !== \"undefined\" && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native_default = {\n  randomUUID\n};\n\n// node_modules/uuid/dist/esm-browser/v4.js\nfunction v4(options, buf, offset) {\n  if (native_default.randomUUID && !buf && !options) {\n    return native_default.randomUUID();\n  }\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)();\n  rnds[6] = rnds[6] & 15 | 64;\n  rnds[8] = rnds[8] & 63 | 128;\n  if (buf) {\n    offset = offset || 0;\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nvar v4_default = v4;\n\n// node_modules/uuid/dist/esm-browser/sha1.js\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n    case 1:\n      return x ^ y ^ z;\n    case 2:\n      return x & y ^ x & z ^ y & z;\n    case 3:\n      return x ^ y ^ z;\n  }\n}\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\nfunction sha1(bytes) {\n  const K = [1518500249, 1859775393, 2400959708, 3395469782];\n  const H = [1732584193, 4023233417, 2562383102, 271733878, 3285377520];\n  if (typeof bytes === \"string\") {\n    const msg = unescape(encodeURIComponent(bytes));\n    bytes = [];\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    bytes = Array.prototype.slice.call(bytes);\n  }\n  bytes.push(128);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n    M[i] = arr;\n  }\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 4294967295;\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n  return [H[0] >> 24 & 255, H[0] >> 16 & 255, H[0] >> 8 & 255, H[0] & 255, H[1] >> 24 & 255, H[1] >> 16 & 255, H[1] >> 8 & 255, H[1] & 255, H[2] >> 24 & 255, H[2] >> 16 & 255, H[2] >> 8 & 255, H[2] & 255, H[3] >> 24 & 255, H[3] >> 16 & 255, H[3] >> 8 & 255, H[3] & 255, H[4] >> 24 & 255, H[4] >> 16 & 255, H[4] >> 8 & 255, H[4] & 255];\n}\nvar sha1_default = sha1;\n\n// node_modules/uuid/dist/esm-browser/v5.js\nvar v5 = v35(\"v5\", 80, sha1_default);\nvar v5_default = v5;\n\n// node_modules/uuid/dist/esm-browser/nil.js\nvar nil_default = \"00000000-0000-0000-0000-000000000000\";\n\n// node_modules/uuid/dist/esm-browser/version.js\nfunction version(uuid) {\n  if (!validate_default(uuid)) {\n    throw TypeError(\"Invalid UUID\");\n  }\n  return parseInt(uuid.slice(14, 15), 16);\n}\nvar version_default = version;\nexport {\n  nil_default as NIL,\n  parse_default as parse,\n  stringify_default as stringify,\n  v1_default as v1,\n  v3_default as v3,\n  v4_default as v4,\n  v5_default as v5,\n  validate_default as validate,\n  version_default as version\n};\n//# sourceMappingURL=uuid.js.map\n",
      "start": 1701766112750,
      "end": 1701766112751,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
