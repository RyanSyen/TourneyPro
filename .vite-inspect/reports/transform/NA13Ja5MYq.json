{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-CCNQLDAO.js?v=3c106fdb",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  createSvgIcon,\n  init_createSvgIcon\n} from \"./chunk-N72BEXVQ.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-NEVWHIAS.js\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-6ZT6S2Z7.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/Avatar/Avatar.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_styled();\ninit_useThemeProps();\n\n// node_modules/@mui/material/internal/svg-icons/Person.js\nvar React = __toESM(require_react());\ninit_createSvgIcon();\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar Person_default = createSvgIcon((0, import_jsx_runtime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), \"Person\");\n\n// node_modules/@mui/material/Avatar/avatarClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getAvatarUtilityClass(slot) {\n  return generateUtilityClass(\"MuiAvatar\", slot);\n}\nvar avatarClasses = generateUtilityClasses(\"MuiAvatar\", [\"root\", \"colorDefault\", \"circular\", \"rounded\", \"square\", \"img\", \"fallback\"]);\nvar avatarClasses_default = avatarClasses;\n\n// node_modules/@mui/material/Avatar/Avatar.js\nvar import_jsx_runtime2 = __toESM(require_jsx_runtime());\nvar _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: [\"root\", variant, colorDefault && \"colorDefault\"],\n    img: [\"img\"],\n    fallback: [\"fallback\"]\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nvar AvatarRoot = styled_default(\"div\", {\n  name: \"MuiAvatar\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  userSelect: \"none\"\n}, ownerState.variant === \"rounded\" && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === \"square\" && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === \"light\" ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nvar AvatarImg = styled_default(\"img\", {\n  name: \"MuiAvatar\",\n  slot: \"Img\",\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: \"100%\",\n  height: \"100%\",\n  textAlign: \"center\",\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: \"cover\",\n  // Hide alt text.\n  color: \"transparent\",\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 1e4\n});\nvar AvatarFallback = styled_default(Person_default, {\n  name: \"MuiAvatar\",\n  slot: \"Fallback\",\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: \"75%\",\n  height: \"75%\"\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React2.useState(false);\n  React2.useEffect(() => {\n    if (!src && !srcSet) {\n      return void 0;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded(\"loaded\");\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded(\"error\");\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nvar Avatar = React2.forwardRef(function Avatar2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiAvatar\"\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = \"div\",\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = \"circular\"\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== \"error\";\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = (0, import_jsx_runtime2.jsx)(AvatarImg, _extends({\n      alt,\n      srcSet,\n      src,\n      sizes,\n      ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = (0, import_jsx_runtime2.jsx)(AvatarFallback, {\n      ownerState,\n      className: classes.fallback\n    });\n  }\n  return (0, import_jsx_runtime2.jsx)(AvatarRoot, _extends({\n    as: component,\n    ownerState,\n    className: clsx_default(classes.root, className),\n    ref\n  }, other, {\n    children\n  }));\n});\ntrue ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: import_prop_types.default.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types.default.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: import_prop_types.default.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: import_prop_types.default.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: import_prop_types.default.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: import_prop_types.default.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"circular\", \"rounded\", \"square\"]), import_prop_types.default.string])\n} : void 0;\nvar Avatar_default = Avatar;\n\nexport {\n  getAvatarUtilityClass,\n  avatarClasses_default,\n  Avatar_default\n};\n//# sourceMappingURL=chunk-CCNQLDAO.js.map\n",
      "start": 1701766112550,
      "end": 1701766112660,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701766112660,
      "end": 1701766112660,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  createSvgIcon,\n  init_createSvgIcon\n} from \"/node_modules/.vite/deps/chunk-N72BEXVQ.js?v=3c106fdb\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-NEVWHIAS.js?v=3c106fdb\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-6ZT6S2Z7.js?v=3c106fdb\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=3c106fdb\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=3c106fdb\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=3c106fdb\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=3c106fdb\";\n\n// node_modules/@mui/material/Avatar/Avatar.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_styled();\ninit_useThemeProps();\n\n// node_modules/@mui/material/internal/svg-icons/Person.js\nvar React = __toESM(require_react());\ninit_createSvgIcon();\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar Person_default = createSvgIcon((0, import_jsx_runtime.jsx)(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), \"Person\");\n\n// node_modules/@mui/material/Avatar/avatarClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getAvatarUtilityClass(slot) {\n  return generateUtilityClass(\"MuiAvatar\", slot);\n}\nvar avatarClasses = generateUtilityClasses(\"MuiAvatar\", [\"root\", \"colorDefault\", \"circular\", \"rounded\", \"square\", \"img\", \"fallback\"]);\nvar avatarClasses_default = avatarClasses;\n\n// node_modules/@mui/material/Avatar/Avatar.js\nvar import_jsx_runtime2 = __toESM(require_jsx_runtime());\nvar _excluded = [\"alt\", \"children\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: [\"root\", variant, colorDefault && \"colorDefault\"],\n    img: [\"img\"],\n    fallback: [\"fallback\"]\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nvar AvatarRoot = styled_default(\"div\", {\n  name: \"MuiAvatar\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: \"relative\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: \"50%\",\n  overflow: \"hidden\",\n  userSelect: \"none\"\n}, ownerState.variant === \"rounded\" && {\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === \"square\" && {\n  borderRadius: 0\n}, ownerState.colorDefault && _extends({\n  color: (theme.vars || theme).palette.background.default\n}, theme.vars ? {\n  backgroundColor: theme.vars.palette.Avatar.defaultBg\n} : {\n  backgroundColor: theme.palette.mode === \"light\" ? theme.palette.grey[400] : theme.palette.grey[600]\n})));\nvar AvatarImg = styled_default(\"img\", {\n  name: \"MuiAvatar\",\n  slot: \"Img\",\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: \"100%\",\n  height: \"100%\",\n  textAlign: \"center\",\n  // Handle non-square image. The property isn't supported by IE11.\n  objectFit: \"cover\",\n  // Hide alt text.\n  color: \"transparent\",\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 1e4\n});\nvar AvatarFallback = styled_default(Person_default, {\n  name: \"MuiAvatar\",\n  slot: \"Fallback\",\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: \"75%\",\n  height: \"75%\"\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React2.useState(false);\n  React2.useEffect(() => {\n    if (!src && !srcSet) {\n      return void 0;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded(\"loaded\");\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded(\"error\");\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nvar Avatar = React2.forwardRef(function Avatar2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiAvatar\"\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = \"div\",\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = \"circular\"\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  let children = null;\n  const loaded = useLoaded(_extends({}, imgProps, {\n    src,\n    srcSet\n  }));\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== \"error\";\n  const ownerState = _extends({}, props, {\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  if (hasImgNotFailing) {\n    children = (0, import_jsx_runtime2.jsx)(AvatarImg, _extends({\n      alt,\n      srcSet,\n      src,\n      sizes,\n      ownerState,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = (0, import_jsx_runtime2.jsx)(AvatarFallback, {\n      ownerState,\n      className: classes.fallback\n    });\n  }\n  return (0, import_jsx_runtime2.jsx)(AvatarRoot, _extends({\n    as: component,\n    ownerState,\n    className: clsx_default(classes.root, className),\n    ref\n  }, other, {\n    children\n  }));\n});\ntrue ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: import_prop_types.default.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types.default.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: import_prop_types.default.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: import_prop_types.default.string,\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: import_prop_types.default.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: import_prop_types.default.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"circular\", \"rounded\", \"square\"]), import_prop_types.default.string])\n} : void 0;\nvar Avatar_default = Avatar;\n\nexport {\n  getAvatarUtilityClass,\n  avatarClasses_default,\n  Avatar_default\n};\n//# sourceMappingURL=chunk-CCNQLDAO.js.map\n",
      "start": 1701766112660,
      "end": 1701766112661,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
