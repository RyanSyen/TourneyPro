{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-QS43WNIN.js?v=c929456e",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  Modal_default,\n  Paper_default\n} from \"./chunk-BO4RBQWS.js\";\nimport {\n  Backdrop_default,\n  Fade_default\n} from \"./chunk-3VBKQG2M.js\";\nimport {\n  useTheme\n} from \"./chunk-ZOIWXA3S.js\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"./chunk-63S7JPMK.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-5CYIWUDX.js\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useId,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-CY3GP2WZ.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/Dialog/Dialog.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_esm();\ninit_capitalize();\ninit_useThemeProps();\ninit_styled();\n\n// node_modules/@mui/material/Dialog/dialogClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getDialogUtilityClass(slot) {\n  return generateUtilityClass(\"MuiDialog\", slot);\n}\nvar dialogClasses = generateUtilityClasses(\"MuiDialog\", [\"root\", \"scrollPaper\", \"scrollBody\", \"container\", \"paper\", \"paperScrollPaper\", \"paperScrollBody\", \"paperWidthFalse\", \"paperWidthXs\", \"paperWidthSm\", \"paperWidthMd\", \"paperWidthLg\", \"paperWidthXl\", \"paperFullWidth\", \"paperFullScreen\"]);\nvar dialogClasses_default = dialogClasses;\n\n// node_modules/@mui/material/Dialog/DialogContext.js\nvar React = __toESM(require_react());\nvar DialogContext = React.createContext({});\nif (true) {\n  DialogContext.displayName = \"DialogContext\";\n}\nvar DialogContext_default = DialogContext;\n\n// node_modules/@mui/material/Dialog/Dialog.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nvar DialogBackdrop = styled_default(Backdrop_default, {\n  name: \"MuiDialog\",\n  slot: \"Backdrop\",\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: [\"root\"],\n    container: [\"container\", `scroll${capitalize_default(scroll)}`],\n    paper: [\"paper\", `paperScroll${capitalize_default(scroll)}`, `paperWidth${capitalize_default(String(maxWidth))}`, fullWidth && \"paperFullWidth\", fullScreen && \"paperFullScreen\"]\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nvar DialogRoot = styled_default(Modal_default, {\n  name: \"MuiDialog\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => styles.root\n})({\n  \"@media print\": {\n    // Use !important to override the Modal inline-style.\n    position: \"absolute !important\"\n  }\n});\nvar DialogContainer = styled_default(\"div\", {\n  name: \"MuiDialog\",\n  slot: \"Container\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize_default(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: \"100%\",\n  \"@media print\": {\n    height: \"auto\"\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === \"paper\" && {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n}, ownerState.scroll === \"body\" && {\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  textAlign: \"center\",\n  \"&:after\": {\n    content: '\"\"',\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    height: \"100%\",\n    width: \"0\"\n  }\n}));\nvar DialogPaper = styled_default(Paper_default, {\n  name: \"MuiDialog\",\n  slot: \"Paper\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize_default(ownerState.scroll)}`], styles[`paperWidth${capitalize_default(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: \"relative\",\n  overflowY: \"auto\",\n  // Fix IE11 issue, to remove at some point.\n  \"@media print\": {\n    overflowY: \"visible\",\n    boxShadow: \"none\"\n  }\n}, ownerState.scroll === \"paper\" && {\n  display: \"flex\",\n  flexDirection: \"column\",\n  maxHeight: \"calc(100% - 64px)\"\n}, ownerState.scroll === \"body\" && {\n  display: \"inline-block\",\n  verticalAlign: \"middle\",\n  textAlign: \"left\"\n  // 'initial' doesn't work on IE11\n}, !ownerState.maxWidth && {\n  maxWidth: \"calc(100% - 64px)\"\n}, ownerState.maxWidth === \"xs\" && {\n  maxWidth: theme.breakpoints.unit === \"px\" ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,\n  [`&.${dialogClasses_default.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: \"calc(100% - 64px)\"\n    }\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== \"xs\" && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses_default.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: \"calc(100% - 64px)\"\n    }\n  }\n}, ownerState.fullWidth && {\n  width: \"calc(100% - 64px)\"\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: \"100%\",\n  maxWidth: \"100%\",\n  height: \"100%\",\n  maxHeight: \"none\",\n  borderRadius: 0,\n  [`&.${dialogClasses_default.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: \"100%\"\n  }\n}));\nvar Dialog = React2.forwardRef(function Dialog2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiDialog\"\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = \"sm\",\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper_default,\n    PaperProps = {},\n    scroll = \"paper\",\n    TransitionComponent = Fade_default,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React2.useRef();\n  const handleMouseDown = (event) => {\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = (event) => {\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, \"backdropClick\");\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React2.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return (0, import_jsx_runtime.jsx)(DialogRoot, _extends({\n    className: clsx_default(classes.root, className),\n    closeAfterTransition: true,\n    components: {\n      Backdrop: DialogBackdrop\n    },\n    componentsProps: {\n      backdrop: _extends({\n        transitionDuration,\n        as: BackdropComponent\n      }, BackdropProps)\n    },\n    disableEscapeKeyDown,\n    onClose,\n    open,\n    ref,\n    onClick: handleBackdropClick,\n    ownerState\n  }, other, {\n    children: (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: (0, import_jsx_runtime.jsx)(DialogContainer, {\n        className: clsx_default(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState,\n        children: (0, import_jsx_runtime.jsx)(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx_default(classes.paper, PaperProps.className),\n          ownerState,\n          children: (0, import_jsx_runtime.jsx)(DialogContext_default.Provider, {\n            value: dialogContextValue,\n            children\n          })\n        }))\n      })\n    }))\n  }));\n});\ntrue ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  \"aria-describedby\": import_prop_types.default.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  \"aria-labelledby\": import_prop_types.default.string,\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: import_prop_types.default.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: import_prop_types.default.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: import_prop_types.default.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: import_prop_types.default.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: import_prop_types.default.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", false]), import_prop_types.default.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: import_prop_types.default.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: import_prop_types.default.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: import_prop_types.default.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: import_prop_types.default.elementType,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: import_prop_types.default.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: import_prop_types.default.oneOf([\"body\", \"paper\"]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: import_prop_types.default.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({\n    appear: import_prop_types.default.number,\n    enter: import_prop_types.default.number,\n    exit: import_prop_types.default.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: import_prop_types.default.object\n} : void 0;\nvar Dialog_default = Dialog;\n\nexport {\n  getDialogUtilityClass,\n  dialogClasses_default,\n  DialogContext_default,\n  Dialog_default\n};\n//# sourceMappingURL=chunk-QS43WNIN.js.map\n",
      "start": 1701867792155,
      "end": 1701867792282,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  Modal_default,\n  Paper_default\n} from \"/node_modules/.vite/deps/chunk-BO4RBQWS.js?v=c929456e\";\nimport {\n  Backdrop_default,\n  Fade_default\n} from \"/node_modules/.vite/deps/chunk-3VBKQG2M.js?v=c929456e\";\nimport {\n  useTheme\n} from \"/node_modules/.vite/deps/chunk-ZOIWXA3S.js?v=c929456e\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"/node_modules/.vite/deps/chunk-63S7JPMK.js?v=c929456e\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-5CYIWUDX.js?v=c929456e\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useId,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-CY3GP2WZ.js?v=c929456e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=c929456e\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=c929456e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=c929456e\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=c929456e\";\n\n// node_modules/@mui/material/Dialog/Dialog.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_composeClasses();\ninit_esm();\ninit_capitalize();\ninit_useThemeProps();\ninit_styled();\n\n// node_modules/@mui/material/Dialog/dialogClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getDialogUtilityClass(slot) {\n  return generateUtilityClass(\"MuiDialog\", slot);\n}\nvar dialogClasses = generateUtilityClasses(\"MuiDialog\", [\"root\", \"scrollPaper\", \"scrollBody\", \"container\", \"paper\", \"paperScrollPaper\", \"paperScrollBody\", \"paperWidthFalse\", \"paperWidthXs\", \"paperWidthSm\", \"paperWidthMd\", \"paperWidthLg\", \"paperWidthXl\", \"paperFullWidth\", \"paperFullScreen\"]);\nvar dialogClasses_default = dialogClasses;\n\n// node_modules/@mui/material/Dialog/DialogContext.js\nvar React = __toESM(require_react());\nvar DialogContext = React.createContext({});\nif (true) {\n  DialogContext.displayName = \"DialogContext\";\n}\nvar DialogContext_default = DialogContext;\n\n// node_modules/@mui/material/Dialog/Dialog.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"aria-describedby\", \"aria-labelledby\", \"BackdropComponent\", \"BackdropProps\", \"children\", \"className\", \"disableEscapeKeyDown\", \"fullScreen\", \"fullWidth\", \"maxWidth\", \"onBackdropClick\", \"onClose\", \"open\", \"PaperComponent\", \"PaperProps\", \"scroll\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"];\nvar DialogBackdrop = styled_default(Backdrop_default, {\n  name: \"MuiDialog\",\n  slot: \"Backdrop\",\n  overrides: (props, styles) => styles.backdrop\n})({\n  // Improve scrollable dialog support.\n  zIndex: -1\n});\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    scroll,\n    maxWidth,\n    fullWidth,\n    fullScreen\n  } = ownerState;\n  const slots = {\n    root: [\"root\"],\n    container: [\"container\", `scroll${capitalize_default(scroll)}`],\n    paper: [\"paper\", `paperScroll${capitalize_default(scroll)}`, `paperWidth${capitalize_default(String(maxWidth))}`, fullWidth && \"paperFullWidth\", fullScreen && \"paperFullScreen\"]\n  };\n  return composeClasses(slots, getDialogUtilityClass, classes);\n};\nvar DialogRoot = styled_default(Modal_default, {\n  name: \"MuiDialog\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => styles.root\n})({\n  \"@media print\": {\n    // Use !important to override the Modal inline-style.\n    position: \"absolute !important\"\n  }\n});\nvar DialogContainer = styled_default(\"div\", {\n  name: \"MuiDialog\",\n  slot: \"Container\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.container, styles[`scroll${capitalize_default(ownerState.scroll)}`]];\n  }\n})(({\n  ownerState\n}) => _extends({\n  height: \"100%\",\n  \"@media print\": {\n    height: \"auto\"\n  },\n  // We disable the focus ring for mouse, touch and keyboard users.\n  outline: 0\n}, ownerState.scroll === \"paper\" && {\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\"\n}, ownerState.scroll === \"body\" && {\n  overflowY: \"auto\",\n  overflowX: \"hidden\",\n  textAlign: \"center\",\n  \"&:after\": {\n    content: '\"\"',\n    display: \"inline-block\",\n    verticalAlign: \"middle\",\n    height: \"100%\",\n    width: \"0\"\n  }\n}));\nvar DialogPaper = styled_default(Paper_default, {\n  name: \"MuiDialog\",\n  slot: \"Paper\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`scrollPaper${capitalize_default(ownerState.scroll)}`], styles[`paperWidth${capitalize_default(String(ownerState.maxWidth))}`], ownerState.fullWidth && styles.paperFullWidth, ownerState.fullScreen && styles.paperFullScreen];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 32,\n  position: \"relative\",\n  overflowY: \"auto\",\n  // Fix IE11 issue, to remove at some point.\n  \"@media print\": {\n    overflowY: \"visible\",\n    boxShadow: \"none\"\n  }\n}, ownerState.scroll === \"paper\" && {\n  display: \"flex\",\n  flexDirection: \"column\",\n  maxHeight: \"calc(100% - 64px)\"\n}, ownerState.scroll === \"body\" && {\n  display: \"inline-block\",\n  verticalAlign: \"middle\",\n  textAlign: \"left\"\n  // 'initial' doesn't work on IE11\n}, !ownerState.maxWidth && {\n  maxWidth: \"calc(100% - 64px)\"\n}, ownerState.maxWidth === \"xs\" && {\n  maxWidth: theme.breakpoints.unit === \"px\" ? Math.max(theme.breakpoints.values.xs, 444) : `max(${theme.breakpoints.values.xs}${theme.breakpoints.unit}, 444px)`,\n  [`&.${dialogClasses_default.paperScrollBody}`]: {\n    [theme.breakpoints.down(Math.max(theme.breakpoints.values.xs, 444) + 32 * 2)]: {\n      maxWidth: \"calc(100% - 64px)\"\n    }\n  }\n}, ownerState.maxWidth && ownerState.maxWidth !== \"xs\" && {\n  maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`,\n  [`&.${dialogClasses_default.paperScrollBody}`]: {\n    [theme.breakpoints.down(theme.breakpoints.values[ownerState.maxWidth] + 32 * 2)]: {\n      maxWidth: \"calc(100% - 64px)\"\n    }\n  }\n}, ownerState.fullWidth && {\n  width: \"calc(100% - 64px)\"\n}, ownerState.fullScreen && {\n  margin: 0,\n  width: \"100%\",\n  maxWidth: \"100%\",\n  height: \"100%\",\n  maxHeight: \"none\",\n  borderRadius: 0,\n  [`&.${dialogClasses_default.paperScrollBody}`]: {\n    margin: 0,\n    maxWidth: \"100%\"\n  }\n}));\nvar Dialog = React2.forwardRef(function Dialog2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiDialog\"\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    \"aria-describedby\": ariaDescribedby,\n    \"aria-labelledby\": ariaLabelledbyProp,\n    BackdropComponent,\n    BackdropProps,\n    children,\n    className,\n    disableEscapeKeyDown = false,\n    fullScreen = false,\n    fullWidth = false,\n    maxWidth = \"sm\",\n    onBackdropClick,\n    onClose,\n    open,\n    PaperComponent = Paper_default,\n    PaperProps = {},\n    scroll = \"paper\",\n    TransitionComponent = Fade_default,\n    transitionDuration = defaultTransitionDuration,\n    TransitionProps\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableEscapeKeyDown,\n    fullScreen,\n    fullWidth,\n    maxWidth,\n    scroll\n  });\n  const classes = useUtilityClasses(ownerState);\n  const backdropClick = React2.useRef();\n  const handleMouseDown = (event) => {\n    backdropClick.current = event.target === event.currentTarget;\n  };\n  const handleBackdropClick = (event) => {\n    if (!backdropClick.current) {\n      return;\n    }\n    backdropClick.current = null;\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n    if (onClose) {\n      onClose(event, \"backdropClick\");\n    }\n  };\n  const ariaLabelledby = useId(ariaLabelledbyProp);\n  const dialogContextValue = React2.useMemo(() => {\n    return {\n      titleId: ariaLabelledby\n    };\n  }, [ariaLabelledby]);\n  return (0, import_jsx_runtime.jsx)(DialogRoot, _extends({\n    className: clsx_default(classes.root, className),\n    closeAfterTransition: true,\n    components: {\n      Backdrop: DialogBackdrop\n    },\n    componentsProps: {\n      backdrop: _extends({\n        transitionDuration,\n        as: BackdropComponent\n      }, BackdropProps)\n    },\n    disableEscapeKeyDown,\n    onClose,\n    open,\n    ref,\n    onClick: handleBackdropClick,\n    ownerState\n  }, other, {\n    children: (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({\n      appear: true,\n      in: open,\n      timeout: transitionDuration,\n      role: \"presentation\"\n    }, TransitionProps, {\n      children: (0, import_jsx_runtime.jsx)(DialogContainer, {\n        className: clsx_default(classes.container),\n        onMouseDown: handleMouseDown,\n        ownerState,\n        children: (0, import_jsx_runtime.jsx)(DialogPaper, _extends({\n          as: PaperComponent,\n          elevation: 24,\n          role: \"dialog\",\n          \"aria-describedby\": ariaDescribedby,\n          \"aria-labelledby\": ariaLabelledby\n        }, PaperProps, {\n          className: clsx_default(classes.paper, PaperProps.className),\n          ownerState,\n          children: (0, import_jsx_runtime.jsx)(DialogContext_default.Provider, {\n            value: dialogContextValue,\n            children\n          })\n        }))\n      })\n    }))\n  }));\n});\ntrue ? Dialog.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The id(s) of the element(s) that describe the dialog.\n   */\n  \"aria-describedby\": import_prop_types.default.string,\n  /**\n   * The id(s) of the element(s) that label the dialog.\n   */\n  \"aria-labelledby\": import_prop_types.default.string,\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: import_prop_types.default.elementType,\n  /**\n   * @ignore\n   */\n  BackdropProps: import_prop_types.default.object,\n  /**\n   * Dialog children, usually the included sub-components.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: import_prop_types.default.bool,\n  /**\n   * If `true`, the dialog is full-screen.\n   * @default false\n   */\n  fullScreen: import_prop_types.default.bool,\n  /**\n   * If `true`, the dialog stretches to `maxWidth`.\n   *\n   * Notice that the dialog width grow is limited by the default margin.\n   * @default false\n   */\n  fullWidth: import_prop_types.default.bool,\n  /**\n   * Determine the max-width of the dialog.\n   * The dialog width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'sm'\n   */\n  maxWidth: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"xs\", \"sm\", \"md\", \"lg\", \"xl\", false]), import_prop_types.default.string]),\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: import_prop_types.default.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: import_prop_types.default.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: import_prop_types.default.bool.isRequired,\n  /**\n   * The component used to render the body of the dialog.\n   * @default Paper\n   */\n  PaperComponent: import_prop_types.default.elementType,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: import_prop_types.default.object,\n  /**\n   * Determine the container for scrolling the dialog.\n   * @default 'paper'\n   */\n  scroll: import_prop_types.default.oneOf([\"body\", \"paper\"]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Fade\n   */\n  TransitionComponent: import_prop_types.default.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({\n    appear: import_prop_types.default.number,\n    enter: import_prop_types.default.number,\n    exit: import_prop_types.default.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition/) component.\n   */\n  TransitionProps: import_prop_types.default.object\n} : void 0;\nvar Dialog_default = Dialog;\n\nexport {\n  getDialogUtilityClass,\n  dialogClasses_default,\n  DialogContext_default,\n  Dialog_default\n};\n//# sourceMappingURL=chunk-QS43WNIN.js.map\n",
      "start": 1701867792282,
      "end": 1701867792282,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
