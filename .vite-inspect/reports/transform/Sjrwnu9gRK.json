{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/lib/mui/createMuiTheme.js",
  "transforms": [
    {
      "name": "__load__",
      "result": "import { createTheme, responsiveFontSizes } from '@mui/material/styles';\r\n\r\nimport GlobalButtonStyle from './custom/components/inputs/button.ts';\r\nimport MenuTheme from './menu.theme.ts';\r\n\r\n/*\r\n  cannot use typescript here due to too many customizations\r\n\r\n  To expose the theme in the component, do this:\r\n  - import { useTheme } from \"@mui/material/styles\";\r\n  - const theme = useTheme();\r\n*/\r\n\r\nconst themesOption = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 400,\r\n      sm: 480,\r\n      md: 768,\r\n      lg: 1024,\r\n      xl: 1200,\r\n    },\r\n  },\r\n  direction: 'ltr',\r\n  palette: {\r\n    mode: 'dark',\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n    },\r\n    primary: {\r\n      main: 'rgba(21, 115, 255, 1)',\r\n    },\r\n    secondary: {\r\n      main: '#000000',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Noto Sans', sans-serif\",\r\n    primary: {\r\n      color: '#FCFCFC',\r\n      hoverColor: '#FF2D2F',\r\n      size: '1rem',\r\n    },\r\n    secondary: {\r\n      color: '#FCFCFC',\r\n      hoverColor: '#C7CBD3',\r\n      size: '0.9rem',\r\n    },\r\n  },\r\n  components: {\r\n    // Name of component\r\n    MuiSelect: {\r\n      styleOverrides: {\r\n        root: {\r\n          '& .MuiSelect-select:focus': {\r\n            backgroundColor: 'transparent',\r\n          },\r\n          '& .MuiSelect-select:hover': {\r\n            color: '#FF2D2F',\r\n          },\r\n          // '& .MuiSvgIcon-root': {\r\n          //   top: '12%',\r\n          // },\r\n          '&:hover .MuiSvgIcon-root': {\r\n            color: '#FF2D2F',\r\n          },\r\n        },\r\n      },\r\n      // Name of slot\r\n      //! not working. when focus still got background color\r\n      outlined: {\r\n        backgroundColor: '#fcfcfc',\r\n        '&:focus': {\r\n          backgroundColor: 'transparent',\r\n        },\r\n      },\r\n      standard: {\r\n        '&:focus': {\r\n          backgroundColor: 'transparent',\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'line-input' },\r\n          style: {\r\n            padding: '0.4rem 1.5rem',\r\n            background:\r\n              'transparent linear-gradient(116deg, #E50B0D 0%, #CF0868 100%) 0% 0% no-repeat padding-box',\r\n            '&:hover': {\r\n              textDecoration: 'none',\r\n              background:\r\n                'transparent linear-gradient(116deg, #c3090c 0%, #b10659 100%) 0% 0% no-repeat padding-box',\r\n              // Reset on touch devices, it doesn't add specificity\r\n              '@media (hover: none)': {\r\n                background:\r\n                  'transparent linear-gradient(116deg, #c3090c 0%, #b10659 100%) 0% 0% no-repeat padding-box',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiMenu: MenuTheme,\r\n    MuiMenuItem: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#26282F',\r\n          '&.Mui-selected': {\r\n            backgroundColor: '#26282F',\r\n            '&.Mui-focusVisible': {\r\n              background: '#26282F',\r\n            },\r\n            '&:hover': {\r\n              backgroundColor: '#FF2D2F',\r\n            },\r\n          },\r\n          '&:hover': {\r\n            backgroundColor: '#FF2D2F',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiButton: GlobalButtonStyle,\r\n    MuiInput: {\r\n      styleOverrides: {\r\n        root: {\r\n          // backgroundColor: \"yellow\",\r\n          // border: \"none\",\r\n          // borderRadius: \"1.5rem\",\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'line-input' },\r\n          style: {\r\n            width: '100%',\r\n            backgroundColor: 'transparent',\r\n            '&:hover': {\r\n              textDecoration: 'none',\r\n              backgroundColor: 'transparent',\r\n\r\n              // Reset on touch devices, it doesn't add specificity\r\n              '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n              },\r\n\r\n              '&.MuiInput-root::before': {\r\n                borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\r\n              },\r\n            },\r\n            '&.MuiInput-root::before': {\r\n              borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\r\n            },\r\n            '&.MuiInput-root::after': {\r\n              borderBottom: `2px solid ${'#E50B0D'}`,\r\n            },\r\n            '&.MuiInput-underline .Mui-focused': {\r\n              color: '#E50B0D',\r\n              borderColor: '#E50B0D',\r\n            },\r\n            '&.Mui-focused': {\r\n              '&::after': {\r\n                borderColor: '#E50B0D',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiInputLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#FCFCFC',\r\n        },\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      variants: [\r\n        {\r\n          props: { variant: 'err-msg' },\r\n          style: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            color: '#E87C03',\r\n            fontSize: '0.9rem',\r\n            '&::before': {},\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiLink: {\r\n      styleOverrides: {\r\n        root: {\r\n          textAlign: 'center',\r\n          fontSize: '.75rem',\r\n          color: '#fcfcfc',\r\n          cursor: 'pointer',\r\n          verticalAlign: 'unset',\r\n\r\n          '&:hover': {\r\n            color: '#FF2D2F',\r\n          },\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'no-href' },\r\n          style: {\r\n            textDecoration: 'none',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiDialog: {\r\n      styleOverrides: {\r\n        paper: {\r\n          borderRadius: '1rem',\r\n        },\r\n      },\r\n    },\r\n    // MuiDatePicker: {\r\n    //   // does not allow global overrides? found a workaround using className to style datepicker\r\n    // },\r\n    MuiPickersDay: {\r\n      styleOverrides: {\r\n        today: {\r\n          color: '#FF2D2F',\r\n        },\r\n      },\r\n    },\r\n    MuiPickersMonth: {\r\n      styleOverrides: {\r\n        root: {\r\n          // color: \"#FF2D2F\",\r\n\r\n          '&.Mui-selected': {\r\n            backgroundColor: '#26282F',\r\n            '&.Mui-focusVisible': {\r\n              background: '#26282F',\r\n            },\r\n            '&:hover': {\r\n              backgroundColor: '#FF2D2F',\r\n            },\r\n          },\r\n        },\r\n        monthButton: {\r\n          '&.Mui-selected': {\r\n            backgroundColor: '#FF2D2F',\r\n            '&.Mui-focusVisible': {\r\n              background: '#FF2D2F',\r\n            },\r\n            '&:hover': {\r\n              backgroundColor: '#FF2D2F',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiPickersYear: {\r\n      styleOverrides: {\r\n        today: {\r\n          color: '#FF2D2F',\r\n        },\r\n      },\r\n    },\r\n    MuiTab: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'tabBtn' },\r\n          style: {\r\n            padding: '0.4rem 1.5rem',\r\n            backgroundColor: 'transparent',\r\n            border: ' 1px solid #fcfcfc',\r\n            borderRadius: '1.5rem',\r\n            fontSize: '1rem',\r\n            marginRight: '1rem',\r\n            transition:\r\n              'color .25s ease-in-out,background-color .25s ease-in-out,border-color .25s ease-in-out,box-shadow .25s ease-in-out',\r\n\r\n            '&:hover': {\r\n              color: '#E50B0D',\r\n              backgroundColor: '#fcfcfc',\r\n            },\r\n\r\n            '&.Mui-selected': {\r\n              textDecoration: 'none',\r\n              color: '#E50B0D',\r\n              backgroundColor: '#fcfcfc',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiBox: {\r\n      styleOverrides: {\r\n        root: {},\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'customContainer' },\r\n          style: {\r\n            padding: '1.5rem',\r\n            backgroundColor: '#14141B',\r\n            borderRadius: '1rem',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  // custom variables\r\n  border: {\r\n    borderRadius: {\r\n      btnBorder: '1.5rem',\r\n      modal: '1rem',\r\n    },\r\n  },\r\n  padding: {\r\n    signupbtn: '0.4rem 1.5rem',\r\n  },\r\n  background: {\r\n    signupbtn:\r\n      'transparent linear-gradient(116deg, #E50B0D 0%, #CF0868 100%) 0% 0% no-repeat padding-box',\r\n    modal: '#26282F',\r\n    hover: {\r\n      signupbtn:\r\n        'transparent linear-gradient(116deg, #c3090c 0%, #b10659 100%) 0% 0% no-repeat padding-box',\r\n    },\r\n  },\r\n  dropdown: {\r\n    primaryHover: '#FF2D2F',\r\n    secondaryHover: '#c7cbd333',\r\n    hoverCapacity: 1,\r\n    focusBg: 'transparent',\r\n  },\r\n};\r\n\r\nconst createMuiTheme = () => {\r\n  const muiTheme = createTheme(themesOption);\r\n\r\n  return responsiveFontSizes(muiTheme);\r\n};\r\n\r\nexport default createMuiTheme;\r\n",
      "start": 1701766112115,
      "end": 1701766112115
    },
    {
      "name": "vite:css",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701766112115,
      "end": 1701766112115,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createTheme, responsiveFontSizes } from \"/node_modules/.vite/deps/@mui_material_styles.js?v=3c106fdb\";\r\n\r\nimport GlobalButtonStyle from \"/src/lib/mui/custom/components/inputs/button.ts\";\r\nimport MenuTheme from \"/src/lib/mui/menu.theme.ts\";\r\n\r\n/*\r\n  cannot use typescript here due to too many customizations\r\n\r\n  To expose the theme in the component, do this:\r\n  - import { useTheme } from \"@mui/material/styles\";\r\n  - const theme = useTheme();\r\n*/\r\n\r\nconst themesOption = {\r\n  breakpoints: {\r\n    values: {\r\n      xs: 400,\r\n      sm: 480,\r\n      md: 768,\r\n      lg: 1024,\r\n      xl: 1200,\r\n    },\r\n  },\r\n  direction: 'ltr',\r\n  palette: {\r\n    mode: 'dark',\r\n    common: {\r\n      black: '#000',\r\n      white: '#fff',\r\n    },\r\n    primary: {\r\n      main: 'rgba(21, 115, 255, 1)',\r\n    },\r\n    secondary: {\r\n      main: '#000000',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: \"'Noto Sans', sans-serif\",\r\n    primary: {\r\n      color: '#FCFCFC',\r\n      hoverColor: '#FF2D2F',\r\n      size: '1rem',\r\n    },\r\n    secondary: {\r\n      color: '#FCFCFC',\r\n      hoverColor: '#C7CBD3',\r\n      size: '0.9rem',\r\n    },\r\n  },\r\n  components: {\r\n    // Name of component\r\n    MuiSelect: {\r\n      styleOverrides: {\r\n        root: {\r\n          '& .MuiSelect-select:focus': {\r\n            backgroundColor: 'transparent',\r\n          },\r\n          '& .MuiSelect-select:hover': {\r\n            color: '#FF2D2F',\r\n          },\r\n          // '& .MuiSvgIcon-root': {\r\n          //   top: '12%',\r\n          // },\r\n          '&:hover .MuiSvgIcon-root': {\r\n            color: '#FF2D2F',\r\n          },\r\n        },\r\n      },\r\n      // Name of slot\r\n      //! not working. when focus still got background color\r\n      outlined: {\r\n        backgroundColor: '#fcfcfc',\r\n        '&:focus': {\r\n          backgroundColor: 'transparent',\r\n        },\r\n      },\r\n      standard: {\r\n        '&:focus': {\r\n          backgroundColor: 'transparent',\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'line-input' },\r\n          style: {\r\n            padding: '0.4rem 1.5rem',\r\n            background:\r\n              'transparent linear-gradient(116deg, #E50B0D 0%, #CF0868 100%) 0% 0% no-repeat padding-box',\r\n            '&:hover': {\r\n              textDecoration: 'none',\r\n              background:\r\n                'transparent linear-gradient(116deg, #c3090c 0%, #b10659 100%) 0% 0% no-repeat padding-box',\r\n              // Reset on touch devices, it doesn't add specificity\r\n              '@media (hover: none)': {\r\n                background:\r\n                  'transparent linear-gradient(116deg, #c3090c 0%, #b10659 100%) 0% 0% no-repeat padding-box',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiMenu: MenuTheme,\r\n    MuiMenuItem: {\r\n      styleOverrides: {\r\n        root: {\r\n          backgroundColor: '#26282F',\r\n          '&.Mui-selected': {\r\n            backgroundColor: '#26282F',\r\n            '&.Mui-focusVisible': {\r\n              background: '#26282F',\r\n            },\r\n            '&:hover': {\r\n              backgroundColor: '#FF2D2F',\r\n            },\r\n          },\r\n          '&:hover': {\r\n            backgroundColor: '#FF2D2F',\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiButton: GlobalButtonStyle,\r\n    MuiInput: {\r\n      styleOverrides: {\r\n        root: {\r\n          // backgroundColor: \"yellow\",\r\n          // border: \"none\",\r\n          // borderRadius: \"1.5rem\",\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'line-input' },\r\n          style: {\r\n            width: '100%',\r\n            backgroundColor: 'transparent',\r\n            '&:hover': {\r\n              textDecoration: 'none',\r\n              backgroundColor: 'transparent',\r\n\r\n              // Reset on touch devices, it doesn't add specificity\r\n              '@media (hover: none)': {\r\n                backgroundColor: 'transparent',\r\n              },\r\n\r\n              '&.MuiInput-root::before': {\r\n                borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\r\n              },\r\n            },\r\n            '&.MuiInput-root::before': {\r\n              borderBottom: '1px solid rgba(255, 255, 255, 0.3)',\r\n            },\r\n            '&.MuiInput-root::after': {\r\n              borderBottom: `2px solid ${'#E50B0D'}`,\r\n            },\r\n            '&.MuiInput-underline .Mui-focused': {\r\n              color: '#E50B0D',\r\n              borderColor: '#E50B0D',\r\n            },\r\n            '&.Mui-focused': {\r\n              '&::after': {\r\n                borderColor: '#E50B0D',\r\n              },\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiInputLabel: {\r\n      styleOverrides: {\r\n        root: {\r\n          color: '#FCFCFC',\r\n        },\r\n      },\r\n    },\r\n    MuiTypography: {\r\n      variants: [\r\n        {\r\n          props: { variant: 'err-msg' },\r\n          style: {\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            color: '#E87C03',\r\n            fontSize: '0.9rem',\r\n            '&::before': {},\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiLink: {\r\n      styleOverrides: {\r\n        root: {\r\n          textAlign: 'center',\r\n          fontSize: '.75rem',\r\n          color: '#fcfcfc',\r\n          cursor: 'pointer',\r\n          verticalAlign: 'unset',\r\n\r\n          '&:hover': {\r\n            color: '#FF2D2F',\r\n          },\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'no-href' },\r\n          style: {\r\n            textDecoration: 'none',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiDialog: {\r\n      styleOverrides: {\r\n        paper: {\r\n          borderRadius: '1rem',\r\n        },\r\n      },\r\n    },\r\n    // MuiDatePicker: {\r\n    //   // does not allow global overrides? found a workaround using className to style datepicker\r\n    // },\r\n    MuiPickersDay: {\r\n      styleOverrides: {\r\n        today: {\r\n          color: '#FF2D2F',\r\n        },\r\n      },\r\n    },\r\n    MuiPickersMonth: {\r\n      styleOverrides: {\r\n        root: {\r\n          // color: \"#FF2D2F\",\r\n\r\n          '&.Mui-selected': {\r\n            backgroundColor: '#26282F',\r\n            '&.Mui-focusVisible': {\r\n              background: '#26282F',\r\n            },\r\n            '&:hover': {\r\n              backgroundColor: '#FF2D2F',\r\n            },\r\n          },\r\n        },\r\n        monthButton: {\r\n          '&.Mui-selected': {\r\n            backgroundColor: '#FF2D2F',\r\n            '&.Mui-focusVisible': {\r\n              background: '#FF2D2F',\r\n            },\r\n            '&:hover': {\r\n              backgroundColor: '#FF2D2F',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    MuiPickersYear: {\r\n      styleOverrides: {\r\n        today: {\r\n          color: '#FF2D2F',\r\n        },\r\n      },\r\n    },\r\n    MuiTab: {\r\n      styleOverrides: {\r\n        root: {\r\n          textTransform: 'none',\r\n        },\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'tabBtn' },\r\n          style: {\r\n            padding: '0.4rem 1.5rem',\r\n            backgroundColor: 'transparent',\r\n            border: ' 1px solid #fcfcfc',\r\n            borderRadius: '1.5rem',\r\n            fontSize: '1rem',\r\n            marginRight: '1rem',\r\n            transition:\r\n              'color .25s ease-in-out,background-color .25s ease-in-out,border-color .25s ease-in-out,box-shadow .25s ease-in-out',\r\n\r\n            '&:hover': {\r\n              color: '#E50B0D',\r\n              backgroundColor: '#fcfcfc',\r\n            },\r\n\r\n            '&.Mui-selected': {\r\n              textDecoration: 'none',\r\n              color: '#E50B0D',\r\n              backgroundColor: '#fcfcfc',\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    MuiBox: {\r\n      styleOverrides: {\r\n        root: {},\r\n      },\r\n      variants: [\r\n        {\r\n          props: { variant: 'customContainer' },\r\n          style: {\r\n            padding: '1.5rem',\r\n            backgroundColor: '#14141B',\r\n            borderRadius: '1rem',\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n  // custom variables\r\n  border: {\r\n    borderRadius: {\r\n      btnBorder: '1.5rem',\r\n      modal: '1rem',\r\n    },\r\n  },\r\n  padding: {\r\n    signupbtn: '0.4rem 1.5rem',\r\n  },\r\n  background: {\r\n    signupbtn:\r\n      'transparent linear-gradient(116deg, #E50B0D 0%, #CF0868 100%) 0% 0% no-repeat padding-box',\r\n    modal: '#26282F',\r\n    hover: {\r\n      signupbtn:\r\n        'transparent linear-gradient(116deg, #c3090c 0%, #b10659 100%) 0% 0% no-repeat padding-box',\r\n    },\r\n  },\r\n  dropdown: {\r\n    primaryHover: '#FF2D2F',\r\n    secondaryHover: '#c7cbd333',\r\n    hoverCapacity: 1,\r\n    focusBg: 'transparent',\r\n  },\r\n};\r\n\r\nconst createMuiTheme = () => {\r\n  const muiTheme = createTheme(themesOption);\r\n\r\n  return responsiveFontSizes(muiTheme);\r\n};\r\n\r\nexport default createMuiTheme;\r\n",
      "start": 1701766112115,
      "end": 1701766112117,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
