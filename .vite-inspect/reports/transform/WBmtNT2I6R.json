{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx",
  "transforms": [
    {
      "name": "__load__",
      "result": "import Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\n\r\nimport AppLogo from '../../common/appLogo.tsx';\r\nimport { CloseBtnLink, ContentWrapper, StyledModal } from './Modal.styles.ts';\r\n\r\ninterface CustomModalProps {\r\n  children: React.ReactNode;\r\n  title: string;\r\n  desc: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BaseModal = (props: CustomModalProps) => {\r\n  const { open, onClose, title, desc, children } = props;\r\n\r\n  return (\r\n    <StyledModal\r\n      open={open || false}\r\n      onClose={onClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      closeAfterTransition // if true, the modal waits until a nested transition is completed before closing\r\n      disableAutoFocus={false} // dont set to true for accessibility\r\n      disableEnforceFocus={false} // dont set to true for accessibility\r\n      disableEscapeKeyDown={false} // if true, esc key will not trigger onClose\r\n      disablePortal // if true, children will be under parent DOM\r\n      disableRestoreFocus={false} // if true, modal will not restore focus to previously focused element after modal is unmounted\r\n      disableScrollLock // if true, scroll lock behavior is disabled\r\n      hideBackdrop={false} // if true, backdrop is not rendered\r\n      keepMounted // keep children in DOM, this is useful for SEO, better open performance on mobile\r\n      // onTransitionEnter={props.onTransitionEnter || ''}\r\n      // onTransitionExited={props.onTransitionExited || ''}\r\n      slots={{ backdrop: Backdrop }}\r\n      slotProps={{\r\n        backdrop: {\r\n          sx: {\r\n            backgroundColor: 'rgba(0,0,0,0.4)',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <ContentWrapper>\r\n        <Box className=\"flex-center\" sx={{ padding: '30px 0' }}>\r\n          <AppLogo\r\n            enableOnclick={false}\r\n            textSize=\"clamp(1.5rem, 0.9643rem + 1.4286vw, 2.25rem)\"\r\n            isHidden={false}\r\n          />\r\n        </Box>\r\n        <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n          {desc}\r\n        </Typography>\r\n        {children}\r\n        <Container\r\n          sx={{\r\n            textAlign: 'center',\r\n            paddingTop: '32px',\r\n            paddingBottom: '15px',\r\n          }}\r\n        >\r\n          <CloseBtnLink\r\n            variant=\"body2\"\r\n            underline=\"none\"\r\n            color=\"inherit\"\r\n            onClick={() => onClose()}\r\n          >\r\n            Close\r\n          </CloseBtnLink>\r\n        </Container>\r\n      </ContentWrapper>\r\n    </StyledModal>\r\n  );\r\n};\r\n\r\nexport default BaseModal;\r\n",
      "start": 1701867792247,
      "end": 1701867792247
    },
    {
      "name": "vite:css",
      "start": 1701867792247,
      "end": 1701867792247,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701867792247,
      "end": 1701867792247,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701867792247,
      "end": 1701867792247,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "result": "import * as RefreshRuntime from \"/@react-refresh\";\n\nif (!window.$RefreshReg$) throw new Error(\"React refresh preamble was not loaded. Something is wrong.\");\nconst prevRefreshReg = window.$RefreshReg$;\nconst prevRefreshSig = window.$RefreshSig$;\nwindow.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\");\nwindow.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport Backdrop from '@mui/material/Backdrop';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport React from 'react';\nimport AppLogo from '../../common/appLogo.tsx';\nimport { CloseBtnLink, ContentWrapper, StyledModal } from './Modal.styles.ts';\nconst BaseModal = (props)=>{\n    const { open, onClose, title, desc, children } = props;\n    return /*#__PURE__*/ _jsxDEV(StyledModal, {\n        open: open || false,\n        onClose: onClose,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        closeAfterTransition: true,\n        disableAutoFocus: false,\n        disableEnforceFocus: false,\n        disableEscapeKeyDown: false,\n        disablePortal: true,\n        disableRestoreFocus: false,\n        disableScrollLock: true,\n        hideBackdrop: false,\n        keepMounted: true,\n        // onTransitionEnter={props.onTransitionEnter || ''}\n        // onTransitionExited={props.onTransitionExited || ''}\n        slots: {\n            backdrop: Backdrop\n        },\n        slotProps: {\n            backdrop: {\n                sx: {\n                    backgroundColor: 'rgba(0,0,0,0.4)'\n                }\n            }\n        },\n        children: /*#__PURE__*/ _jsxDEV(ContentWrapper, {\n            children: [\n                /*#__PURE__*/ _jsxDEV(Box, {\n                    className: \"flex-center\",\n                    sx: {\n                        padding: '30px 0'\n                    },\n                    children: /*#__PURE__*/ _jsxDEV(AppLogo, {\n                        enableOnclick: false,\n                        textSize: \"clamp(1.5rem, 0.9643rem + 1.4286vw, 2.25rem)\",\n                        isHidden: false\n                    }, void 0, false, {\n                        fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 48,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ _jsxDEV(Typography, {\n                    id: \"modal-modal-title\",\n                    variant: \"h5\",\n                    component: \"h2\",\n                    children: title\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 55,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ _jsxDEV(Typography, {\n                    id: \"modal-modal-description\",\n                    sx: {\n                        mt: 2\n                    },\n                    children: desc\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 58,\n                    columnNumber: 9\n                }, this),\n                children,\n                /*#__PURE__*/ _jsxDEV(Container, {\n                    sx: {\n                        textAlign: 'center',\n                        paddingTop: '32px',\n                        paddingBottom: '15px'\n                    },\n                    children: /*#__PURE__*/ _jsxDEV(CloseBtnLink, {\n                        variant: \"body2\",\n                        underline: \"none\",\n                        color: \"inherit\",\n                        onClick: ()=>onClose(),\n                        children: \"Close\"\n                    }, void 0, false, {\n                        fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                        lineNumber: 69,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 62,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n            lineNumber: 47,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n        lineNumber: 22,\n        columnNumber: 5\n    }, this);\n};\n_c = BaseModal;\nexport default BaseModal;\nvar _c;\n$RefreshReg$(_c, \"BaseModal\");\n\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;\nRefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n  RefreshRuntime.registerExportsForReactRefresh(\"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\", currentExports);\n  import.meta.hot.accept((nextExports) => {\n    if (!nextExports) return;\n    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);\n    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n  });\n});\n",
      "start": 1701867792247,
      "end": 1701867792323,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "Modal.tsx"
        ],
        "sourcesContent": [
          "import Backdrop from '@mui/material/Backdrop';\r\nimport Box from '@mui/material/Box';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport React from 'react';\r\n\r\nimport AppLogo from '../../common/appLogo.tsx';\r\nimport { CloseBtnLink, ContentWrapper, StyledModal } from './Modal.styles.ts';\r\n\r\ninterface CustomModalProps {\r\n  children: React.ReactNode;\r\n  title: string;\r\n  desc: string;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BaseModal = (props: CustomModalProps) => {\r\n  const { open, onClose, title, desc, children } = props;\r\n\r\n  return (\r\n    <StyledModal\r\n      open={open || false}\r\n      onClose={onClose}\r\n      aria-labelledby=\"modal-modal-title\"\r\n      aria-describedby=\"modal-modal-description\"\r\n      closeAfterTransition // if true, the modal waits until a nested transition is completed before closing\r\n      disableAutoFocus={false} // dont set to true for accessibility\r\n      disableEnforceFocus={false} // dont set to true for accessibility\r\n      disableEscapeKeyDown={false} // if true, esc key will not trigger onClose\r\n      disablePortal // if true, children will be under parent DOM\r\n      disableRestoreFocus={false} // if true, modal will not restore focus to previously focused element after modal is unmounted\r\n      disableScrollLock // if true, scroll lock behavior is disabled\r\n      hideBackdrop={false} // if true, backdrop is not rendered\r\n      keepMounted // keep children in DOM, this is useful for SEO, better open performance on mobile\r\n      // onTransitionEnter={props.onTransitionEnter || ''}\r\n      // onTransitionExited={props.onTransitionExited || ''}\r\n      slots={{ backdrop: Backdrop }}\r\n      slotProps={{\r\n        backdrop: {\r\n          sx: {\r\n            backgroundColor: 'rgba(0,0,0,0.4)',\r\n          },\r\n        },\r\n      }}\r\n    >\r\n      <ContentWrapper>\r\n        <Box className=\"flex-center\" sx={{ padding: '30px 0' }}>\r\n          <AppLogo\r\n            enableOnclick={false}\r\n            textSize=\"clamp(1.5rem, 0.9643rem + 1.4286vw, 2.25rem)\"\r\n            isHidden={false}\r\n          />\r\n        </Box>\r\n        <Typography id=\"modal-modal-title\" variant=\"h5\" component=\"h2\">\r\n          {title}\r\n        </Typography>\r\n        <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\r\n          {desc}\r\n        </Typography>\r\n        {children}\r\n        <Container\r\n          sx={{\r\n            textAlign: 'center',\r\n            paddingTop: '32px',\r\n            paddingBottom: '15px',\r\n          }}\r\n        >\r\n          <CloseBtnLink\r\n            variant=\"body2\"\r\n            underline=\"none\"\r\n            color=\"inherit\"\r\n            onClick={() => onClose()}\r\n          >\r\n            Close\r\n          </CloseBtnLink>\r\n        </Container>\r\n      </ContentWrapper>\r\n    </StyledModal>\r\n  );\r\n};\r\n\r\nexport default BaseModal;\r\n"
        ],
        "names": [
          "Backdrop",
          "Box",
          "Container",
          "Typography",
          "React",
          "AppLogo",
          "CloseBtnLink",
          "ContentWrapper",
          "StyledModal",
          "BaseModal",
          "props",
          "open",
          "onClose",
          "title",
          "desc",
          "children",
          "aria-labelledby",
          "aria-describedby",
          "closeAfterTransition",
          "disableAutoFocus",
          "disableEnforceFocus",
          "disableEscapeKeyDown",
          "disablePortal",
          "disableRestoreFocus",
          "disableScrollLock",
          "hideBackdrop",
          "keepMounted",
          "slots",
          "backdrop",
          "slotProps",
          "sx",
          "backgroundColor",
          "className",
          "padding",
          "enableOnclick",
          "textSize",
          "isHidden",
          "id",
          "variant",
          "component",
          "mt",
          "textAlign",
          "paddingTop",
          "paddingBottom",
          "underline",
          "color",
          "onClick"
        ],
        "mappings": ";;;;;;;;;AAAA,OAAOA,cAAc,yBAAyB;AAC9C,OAAOC,SAAS,oBAAoB;AACpC,OAAOC,eAAe,0BAA0B;AAChD,OAAOC,gBAAgB,2BAA2B;AAClD,OAAOC,WAAW,QAAQ;AAE1B,OAAOC,aAAa,2BAA2B;AAC/C,SAASC,YAAY,EAAEC,cAAc,EAAEC,WAAW,QAAQ,oBAAoB;AAU9E,MAAMC,YAAY,CAACC;IACjB,MAAM,EAAEC,IAAI,EAAEC,OAAO,EAAEC,KAAK,EAAEC,IAAI,EAAEC,QAAQ,EAAE,GAAGL;IAEjD,qBACE,QAACF;QACCG,MAAMA,QAAQ;QACdC,SAASA;QACTI,mBAAgB;QAChBC,oBAAiB;QACjBC,oBAAoB;QACpBC,kBAAkB;QAClBC,qBAAqB;QACrBC,sBAAsB;QACtBC,aAAa;QACbC,qBAAqB;QACrBC,iBAAiB;QACjBC,cAAc;QACdC,WAAW;QACX,oDAAoD;QACpD,sDAAsD;QACtDC,OAAO;YAAEC,UAAU5B;QAAS;QAC5B6B,WAAW;YACTD,UAAU;gBACRE,IAAI;oBACFC,iBAAiB;gBACnB;YACF;QACF;kBAEA,cAAA,QAACxB;;8BACC,QAACN;oBAAI+B,WAAU;oBAAcF,IAAI;wBAAEG,SAAS;oBAAS;8BACnD,cAAA,QAAC5B;wBACC6B,eAAe;wBACfC,UAAS;wBACTC,UAAU;;;;;;;;;;;8BAGd,QAACjC;oBAAWkC,IAAG;oBAAoBC,SAAQ;oBAAKC,WAAU;8BACvD1B;;;;;;8BAEH,QAACV;oBAAWkC,IAAG;oBAA0BP,IAAI;wBAAEU,IAAI;oBAAE;8BAClD1B;;;;;;gBAEFC;8BACD,QAACb;oBACC4B,IAAI;wBACFW,WAAW;wBACXC,YAAY;wBACZC,eAAe;oBACjB;8BAEA,cAAA,QAACrC;wBACCgC,SAAQ;wBACRM,WAAU;wBACVC,OAAM;wBACNC,SAAS,IAAMlC;kCAChB;;;;;;;;;;;;;;;;;;;;;;AAOX;KA/DMH;AAiEN,eAAeA,UAAU"
      }
    },
    {
      "name": "vite:define",
      "start": 1701867792323,
      "end": 1701867792323,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701867792323,
      "end": 1701867792323,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701867792323,
      "end": 1701867792323,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701867792323,
      "end": 1701867792323,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701867792323,
      "end": 1701867792323,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701867792323,
      "end": 1701867792323,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701867792323,
      "end": 1701867792323,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import { createHotContext as __vite__createHotContext } from \"/@vite/client\";import.meta.hot = __vite__createHotContext(\"/src/components/feedback/modal/Modal.tsx\");import * as RefreshRuntime from \"/@react-refresh\";\n\nif (!window.$RefreshReg$) throw new Error(\"React refresh preamble was not loaded. Something is wrong.\");\nconst prevRefreshReg = window.$RefreshReg$;\nconst prevRefreshSig = window.$RefreshSig$;\nwindow.$RefreshReg$ = RefreshRuntime.getRefreshReg(\"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\");\nwindow.$RefreshSig$ = RefreshRuntime.createSignatureFunctionForTransform;\n\nimport __vite__cjsImport1_react_jsxDevRuntime from \"/node_modules/.vite/deps/react_jsx-dev-runtime.js?v=c929456e\"; const _jsxDEV = __vite__cjsImport1_react_jsxDevRuntime[\"jsxDEV\"];\nimport Backdrop from \"/node_modules/.vite/deps/@mui_material_Backdrop.js?v=c929456e\";\nimport Box from \"/node_modules/.vite/deps/@mui_material_Box.js?v=c929456e\";\nimport Container from \"/node_modules/.vite/deps/@mui_material_Container.js?v=c929456e\";\nimport Typography from \"/node_modules/.vite/deps/@mui_material_Typography.js?v=c929456e\";\nimport __vite__cjsImport6_react from \"/node_modules/.vite/deps/react.js?v=c929456e\"; const React = __vite__cjsImport6_react.__esModule ? __vite__cjsImport6_react.default : __vite__cjsImport6_react;\nimport AppLogo from \"/src/components/common/appLogo.tsx\";\nimport { CloseBtnLink, ContentWrapper, StyledModal } from \"/src/components/feedback/modal/Modal.styles.ts\";\nconst BaseModal = (props)=>{\n    const { open, onClose, title, desc, children } = props;\n    return /*#__PURE__*/ _jsxDEV(StyledModal, {\n        open: open || false,\n        onClose: onClose,\n        \"aria-labelledby\": \"modal-modal-title\",\n        \"aria-describedby\": \"modal-modal-description\",\n        closeAfterTransition: true,\n        disableAutoFocus: false,\n        disableEnforceFocus: false,\n        disableEscapeKeyDown: false,\n        disablePortal: true,\n        disableRestoreFocus: false,\n        disableScrollLock: true,\n        hideBackdrop: false,\n        keepMounted: true,\n        // onTransitionEnter={props.onTransitionEnter || ''}\n        // onTransitionExited={props.onTransitionExited || ''}\n        slots: {\n            backdrop: Backdrop\n        },\n        slotProps: {\n            backdrop: {\n                sx: {\n                    backgroundColor: 'rgba(0,0,0,0.4)'\n                }\n            }\n        },\n        children: /*#__PURE__*/ _jsxDEV(ContentWrapper, {\n            children: [\n                /*#__PURE__*/ _jsxDEV(Box, {\n                    className: \"flex-center\",\n                    sx: {\n                        padding: '30px 0'\n                    },\n                    children: /*#__PURE__*/ _jsxDEV(AppLogo, {\n                        enableOnclick: false,\n                        textSize: \"clamp(1.5rem, 0.9643rem + 1.4286vw, 2.25rem)\",\n                        isHidden: false\n                    }, void 0, false, {\n                        fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                        lineNumber: 49,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 48,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ _jsxDEV(Typography, {\n                    id: \"modal-modal-title\",\n                    variant: \"h5\",\n                    component: \"h2\",\n                    children: title\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 55,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ _jsxDEV(Typography, {\n                    id: \"modal-modal-description\",\n                    sx: {\n                        mt: 2\n                    },\n                    children: desc\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 58,\n                    columnNumber: 9\n                }, this),\n                children,\n                /*#__PURE__*/ _jsxDEV(Container, {\n                    sx: {\n                        textAlign: 'center',\n                        paddingTop: '32px',\n                        paddingBottom: '15px'\n                    },\n                    children: /*#__PURE__*/ _jsxDEV(CloseBtnLink, {\n                        variant: \"body2\",\n                        underline: \"none\",\n                        color: \"inherit\",\n                        onClick: ()=>onClose(),\n                        children: \"Close\"\n                    }, void 0, false, {\n                        fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                        lineNumber: 69,\n                        columnNumber: 11\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n                    lineNumber: 62,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n            lineNumber: 47,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\",\n        lineNumber: 22,\n        columnNumber: 5\n    }, this);\n};\n_c = BaseModal;\nexport default BaseModal;\nvar _c;\n$RefreshReg$(_c, \"BaseModal\");\n\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;\nRefreshRuntime.__hmr_import(import.meta.url).then((currentExports) => {\n  RefreshRuntime.registerExportsForReactRefresh(\"C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/src/components/feedback/modal/Modal.tsx\", currentExports);\n  import.meta.hot.accept((nextExports) => {\n    if (!nextExports) return;\n    const invalidateMessage = RefreshRuntime.validateRefreshBoundaryAndEnqueueUpdate(currentExports, nextExports);\n    if (invalidateMessage) import.meta.hot.invalidate(invalidateMessage);\n  });\n});\n",
      "start": 1701867792323,
      "end": 1701867792325,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
