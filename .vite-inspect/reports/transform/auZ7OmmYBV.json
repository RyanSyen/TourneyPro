{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-F65R3Q5F.js?v=c929456e",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  capitalize_default,\n  init_capitalize\n} from \"./chunk-63S7JPMK.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-5CYIWUDX.js\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  extendSxProp,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_esm2,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-CY3GP2WZ.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/Typography/Typography.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_esm2();\ninit_composeClasses();\ninit_styled();\ninit_useThemeProps();\ninit_capitalize();\n\n// node_modules/@mui/material/Typography/typographyClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getTypographyUtilityClass(slot) {\n  return generateUtilityClass(\"MuiTypography\", slot);\n}\nvar typographyClasses = generateUtilityClasses(\"MuiTypography\", [\"root\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"subtitle1\", \"subtitle2\", \"body1\", \"body2\", \"inherit\", \"button\", \"caption\", \"overline\", \"alignLeft\", \"alignRight\", \"alignCenter\", \"alignJustify\", \"noWrap\", \"gutterBottom\", \"paragraph\"]);\nvar typographyClasses_default = typographyClasses;\n\n// node_modules/@mui/material/Typography/Typography.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\"root\", variant, ownerState.align !== \"inherit\" && `align${capitalize_default(align)}`, gutterBottom && \"gutterBottom\", noWrap && \"noWrap\", paragraph && \"paragraph\"]\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nvar TypographyRoot = styled_default(\"span\", {\n  name: \"MuiTypography\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== \"inherit\" && styles[`align${capitalize_default(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === \"inherit\" && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: \"inherit\"\n}, ownerState.variant !== \"inherit\" && theme.typography[ownerState.variant], ownerState.align !== \"inherit\" && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\"\n}, ownerState.gutterBottom && {\n  marginBottom: \"0.35em\"\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nvar defaultVariantMapping = {\n  h1: \"h1\",\n  h2: \"h2\",\n  h3: \"h3\",\n  h4: \"h4\",\n  h5: \"h5\",\n  h6: \"h6\",\n  subtitle1: \"h6\",\n  subtitle2: \"h6\",\n  body1: \"p\",\n  body2: \"p\",\n  inherit: \"p\"\n};\nvar colorTransformations = {\n  primary: \"primary.main\",\n  textPrimary: \"text.primary\",\n  secondary: \"secondary.main\",\n  textSecondary: \"text.secondary\",\n  error: \"error.main\"\n};\nvar transformDeprecatedColors = (color) => {\n  return colorTransformations[color] || color;\n};\nvar Typography = React.forwardRef(function Typography2(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: \"MuiTypography\"\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n    align = \"inherit\",\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = \"body1\",\n    variantMapping = defaultVariantMapping\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? \"p\" : variantMapping[variant] || defaultVariantMapping[variant]) || \"span\";\n  const classes = useUtilityClasses(ownerState);\n  return (0, import_jsx_runtime.jsx)(TypographyRoot, _extends({\n    as: Component,\n    ref,\n    ownerState,\n    className: clsx_default(classes.root, className)\n  }, other));\n});\ntrue ? Typography.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: import_prop_types.default.oneOf([\"center\", \"inherit\", \"justify\", \"left\", \"right\"]),\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types.default.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: import_prop_types.default.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: import_prop_types.default.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: import_prop_types.default.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"body1\", \"body2\", \"button\", \"caption\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"inherit\", \"overline\", \"subtitle1\", \"subtitle2\"]), import_prop_types.default.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: import_prop_types.default.object\n} : void 0;\nvar Typography_default = Typography;\n\nexport {\n  getTypographyUtilityClass,\n  typographyClasses_default,\n  Typography_default\n};\n//# sourceMappingURL=chunk-F65R3Q5F.js.map\n",
      "start": 1701867792155,
      "end": 1701867792277,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701867792277,
      "end": 1701867792277,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  capitalize_default,\n  init_capitalize\n} from \"/node_modules/.vite/deps/chunk-63S7JPMK.js?v=c929456e\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-5CYIWUDX.js?v=c929456e\";\nimport {\n  _objectWithoutPropertiesLoose,\n  clsx_default,\n  composeClasses,\n  extendSxProp,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_esm2,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-CY3GP2WZ.js?v=c929456e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=c929456e\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=c929456e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=c929456e\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=c929456e\";\n\n// node_modules/@mui/material/Typography/Typography.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_esm2();\ninit_composeClasses();\ninit_styled();\ninit_useThemeProps();\ninit_capitalize();\n\n// node_modules/@mui/material/Typography/typographyClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getTypographyUtilityClass(slot) {\n  return generateUtilityClass(\"MuiTypography\", slot);\n}\nvar typographyClasses = generateUtilityClasses(\"MuiTypography\", [\"root\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"subtitle1\", \"subtitle2\", \"body1\", \"body2\", \"inherit\", \"button\", \"caption\", \"overline\", \"alignLeft\", \"alignRight\", \"alignCenter\", \"alignJustify\", \"noWrap\", \"gutterBottom\", \"paragraph\"]);\nvar typographyClasses_default = typographyClasses;\n\n// node_modules/@mui/material/Typography/Typography.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: [\"root\", variant, ownerState.align !== \"inherit\" && `align${capitalize_default(align)}`, gutterBottom && \"gutterBottom\", noWrap && \"noWrap\", paragraph && \"paragraph\"]\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\nvar TypographyRoot = styled_default(\"span\", {\n  name: \"MuiTypography\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== \"inherit\" && styles[`align${capitalize_default(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant === \"inherit\" && {\n  // Some elements, like <button> on Chrome have default font that doesn't inherit, reset this.\n  font: \"inherit\"\n}, ownerState.variant !== \"inherit\" && theme.typography[ownerState.variant], ownerState.align !== \"inherit\" && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: \"hidden\",\n  textOverflow: \"ellipsis\",\n  whiteSpace: \"nowrap\"\n}, ownerState.gutterBottom && {\n  marginBottom: \"0.35em\"\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nvar defaultVariantMapping = {\n  h1: \"h1\",\n  h2: \"h2\",\n  h3: \"h3\",\n  h4: \"h4\",\n  h5: \"h5\",\n  h6: \"h6\",\n  subtitle1: \"h6\",\n  subtitle2: \"h6\",\n  body1: \"p\",\n  body2: \"p\",\n  inherit: \"p\"\n};\nvar colorTransformations = {\n  primary: \"primary.main\",\n  textPrimary: \"text.primary\",\n  secondary: \"secondary.main\",\n  textSecondary: \"text.secondary\",\n  error: \"error.main\"\n};\nvar transformDeprecatedColors = (color) => {\n  return colorTransformations[color] || color;\n};\nvar Typography = React.forwardRef(function Typography2(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: \"MuiTypography\"\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n  const {\n    align = \"inherit\",\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = \"body1\",\n    variantMapping = defaultVariantMapping\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n  const Component = component || (paragraph ? \"p\" : variantMapping[variant] || defaultVariantMapping[variant]) || \"span\";\n  const classes = useUtilityClasses(ownerState);\n  return (0, import_jsx_runtime.jsx)(TypographyRoot, _extends({\n    as: Component,\n    ref,\n    ownerState,\n    className: clsx_default(classes.root, className)\n  }, other));\n});\ntrue ? Typography.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: import_prop_types.default.oneOf([\"center\", \"inherit\", \"justify\", \"left\", \"right\"]),\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: import_prop_types.default.elementType,\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: import_prop_types.default.bool,\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: import_prop_types.default.bool,\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: import_prop_types.default.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"body1\", \"body2\", \"button\", \"caption\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"inherit\", \"overline\", \"subtitle1\", \"subtitle2\"]), import_prop_types.default.string]),\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: import_prop_types.default.object\n} : void 0;\nvar Typography_default = Typography;\n\nexport {\n  getTypographyUtilityClass,\n  typographyClasses_default,\n  Typography_default\n};\n//# sourceMappingURL=chunk-F65R3Q5F.js.map\n",
      "start": 1701867792277,
      "end": 1701867792278,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
