{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-YU3IIQQQ.js?v=c929456e",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  Modal_default,\n  Paper_default\n} from \"./chunk-BO4RBQWS.js\";\nimport {\n  getTransitionProps,\n  reflow\n} from \"./chunk-3VBKQG2M.js\";\nimport {\n  Transition_default\n} from \"./chunk-NQATQIFR.js\";\nimport {\n  useTheme\n} from \"./chunk-ZOIWXA3S.js\";\nimport {\n  init_utils\n} from \"./chunk-DRF2MIBW.js\";\nimport {\n  debounce_default,\n  init_debounce,\n  ownerWindow_default\n} from \"./chunk-Q2B64RV7.js\";\nimport {\n  init_useForkRef,\n  useForkRef_default\n} from \"./chunk-VAFBYMTJ.js\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"./chunk-63S7JPMK.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-5CYIWUDX.js\";\nimport {\n  HTMLElementType,\n  _objectWithoutPropertiesLoose,\n  chainPropTypes,\n  clsx_default,\n  composeClasses,\n  elementAcceptingRef_default,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  integerPropType_default,\n  require_prop_types,\n  rootShouldForwardProp,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-CY3GP2WZ.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/Drawer/Drawer.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types2 = __toESM(require_prop_types());\ninit_clsx();\ninit_esm();\ninit_composeClasses();\n\n// node_modules/@mui/material/Slide/Slide.js\ninit_extends();\ninit_objectWithoutPropertiesLoose();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_esm();\ninit_debounce();\ninit_useForkRef();\ninit_utils();\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"addEndListener\", \"appear\", \"children\", \"container\", \"direction\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nfunction getTranslateValue(direction, node, resolvedContainer) {\n  const rect = node.getBoundingClientRect();\n  const containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();\n  const containerWindow = ownerWindow_default(node);\n  let transform;\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue(\"-webkit-transform\") || computedStyle.getPropertyValue(\"transform\");\n  }\n  let offsetX = 0;\n  let offsetY = 0;\n  if (transform && transform !== \"none\" && typeof transform === \"string\") {\n    const transformValues = transform.split(\"(\")[1].split(\")\")[0].split(\",\");\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n  if (direction === \"left\") {\n    if (containerRect) {\n      return `translateX(${containerRect.right + offsetX - rect.left}px)`;\n    }\n    return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n  }\n  if (direction === \"right\") {\n    if (containerRect) {\n      return `translateX(-${rect.right - containerRect.left - offsetX}px)`;\n    }\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n  if (direction === \"up\") {\n    if (containerRect) {\n      return `translateY(${containerRect.bottom + offsetY - rect.top}px)`;\n    }\n    return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n  }\n  if (containerRect) {\n    return `translateY(-${rect.top - containerRect.top + rect.height - offsetY}px)`;\n  }\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\nfunction resolveContainer(containerPropProp) {\n  return typeof containerPropProp === \"function\" ? containerPropProp() : containerPropProp;\n}\nfunction setTranslateValue(direction, node, containerProp) {\n  const resolvedContainer = resolveContainer(containerProp);\n  const transform = getTranslateValue(direction, node, resolvedContainer);\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar Slide = React.forwardRef(function Slide2(props, ref) {\n  const theme = useTheme();\n  const defaultEasing = {\n    enter: theme.transitions.easing.easeOut,\n    exit: theme.transitions.easing.sharp\n  };\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    container: containerProp,\n    direction = \"down\",\n    easing: easingProp = defaultEasing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition_default\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const childrenRef = React.useRef(null);\n  const handleRef = useForkRef_default(children.ref, childrenRef, ref);\n  const normalizedTransitionCallback = (callback) => (isAppearing) => {\n    if (callback) {\n      if (isAppearing === void 0) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node, containerProp);\n    reflow(node);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: \"enter\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"-webkit-transform\", _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create(\"transform\", _extends({}, transitionProps));\n    node.style.webkitTransform = \"none\";\n    node.style.transform = \"none\";\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback((node) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: \"exit\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"-webkit-transform\", transitionProps);\n    node.style.transition = theme.transitions.create(\"transform\", transitionProps);\n    setTranslateValue(direction, node, containerProp);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback((node) => {\n    node.style.webkitTransition = \"\";\n    node.style.transition = \"\";\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const handleAddEndListener = (next) => {\n    if (addEndListener) {\n      addEndListener(childrenRef.current, next);\n    }\n  };\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current, containerProp);\n    }\n  }, [direction, containerProp]);\n  React.useEffect(() => {\n    if (inProp || direction === \"down\" || direction === \"right\") {\n      return void 0;\n    }\n    const handleResize = debounce_default(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current, containerProp);\n      }\n    });\n    const containerWindow = ownerWindow_default(childrenRef.current);\n    containerWindow.addEventListener(\"resize\", handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener(\"resize\", handleResize);\n    };\n  }, [direction, inProp, containerProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    appear,\n    in: inProp,\n    timeout\n  }, other, {\n    children: (state, childProps) => {\n      return React.cloneElement(children, _extends({\n        ref: handleRef,\n        style: _extends({\n          visibility: state === \"exited\" && !inProp ? \"hidden\" : void 0\n        }, style, children.props.style)\n      }, childProps));\n    }\n  }));\n});\ntrue ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: import_prop_types.default.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: import_prop_types.default.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef_default.isRequired,\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the container the Slide is transitioning from.\n   */\n  container: chainPropTypes(import_prop_types.default.oneOfType([HTMLElementType, import_prop_types.default.func]), (props) => {\n    if (props.open) {\n      const resolvedContainer = resolveContainer(props.container);\n      if (resolvedContainer && resolvedContainer.nodeType === 1) {\n        const box = resolvedContainer.getBoundingClientRect();\n        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error([\"MUI: The `container` prop provided to the component is invalid.\", \"The anchor element should be part of the document layout.\", \"Make sure the element is present in the document or that it's not display none.\"].join(\"\\n\"));\n        }\n      } else if (!resolvedContainer || typeof resolvedContainer.getBoundingClientRect !== \"function\" || resolvedContainer.contextElement != null && resolvedContainer.contextElement.nodeType !== 1) {\n        return new Error([\"MUI: The `container` prop provided to the component is invalid.\", \"It should be an HTML element instance.\"].join(\"\\n\"));\n      }\n    }\n    return null;\n  }),\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: import_prop_types.default.oneOf([\"down\", \"left\", \"right\", \"up\"]),\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   * @default {\n   *   enter: theme.transitions.easing.easeOut,\n   *   exit: theme.transitions.easing.sharp,\n   * }\n   */\n  easing: import_prop_types.default.oneOfType([import_prop_types.default.shape({\n    enter: import_prop_types.default.string,\n    exit: import_prop_types.default.string\n  }), import_prop_types.default.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: import_prop_types.default.bool,\n  /**\n   * @ignore\n   */\n  onEnter: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntered: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntering: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExit: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExited: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExiting: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  style: import_prop_types.default.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({\n    appear: import_prop_types.default.number,\n    enter: import_prop_types.default.number,\n    exit: import_prop_types.default.number\n  })])\n} : void 0;\nvar Slide_default = Slide;\n\n// node_modules/@mui/material/Drawer/Drawer.js\ninit_capitalize();\ninit_useThemeProps();\ninit_styled();\n\n// node_modules/@mui/material/Drawer/drawerClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getDrawerUtilityClass(slot) {\n  return generateUtilityClass(\"MuiDrawer\", slot);\n}\nvar drawerClasses = generateUtilityClasses(\"MuiDrawer\", [\"root\", \"docked\", \"paper\", \"paperAnchorLeft\", \"paperAnchorRight\", \"paperAnchorTop\", \"paperAnchorBottom\", \"paperAnchorDockedLeft\", \"paperAnchorDockedRight\", \"paperAnchorDockedTop\", \"paperAnchorDockedBottom\", \"modal\"]);\nvar drawerClasses_default = drawerClasses;\n\n// node_modules/@mui/material/Drawer/Drawer.js\nvar import_jsx_runtime2 = __toESM(require_jsx_runtime());\nvar _excluded2 = [\"BackdropProps\"];\nvar _excluded22 = [\"anchor\", \"BackdropProps\", \"children\", \"className\", \"elevation\", \"hideBackdrop\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"];\nvar overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, (ownerState.variant === \"permanent\" || ownerState.variant === \"persistent\") && styles.docked, styles.modal];\n};\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    anchor,\n    variant\n  } = ownerState;\n  const slots = {\n    root: [\"root\"],\n    docked: [(variant === \"permanent\" || variant === \"persistent\") && \"docked\"],\n    modal: [\"modal\"],\n    paper: [\"paper\", `paperAnchor${capitalize_default(anchor)}`, variant !== \"temporary\" && `paperAnchorDocked${capitalize_default(anchor)}`]\n  };\n  return composeClasses(slots, getDrawerUtilityClass, classes);\n};\nvar DrawerRoot = styled_default(Modal_default, {\n  name: \"MuiDrawer\",\n  slot: \"Root\",\n  overridesResolver\n})(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.drawer\n}));\nvar DrawerDockedRoot = styled_default(\"div\", {\n  shouldForwardProp: rootShouldForwardProp,\n  name: \"MuiDrawer\",\n  slot: \"Docked\",\n  skipVariantsResolver: false,\n  overridesResolver\n})({\n  flex: \"0 0 auto\"\n});\nvar DrawerPaper = styled_default(Paper_default, {\n  name: \"MuiDrawer\",\n  slot: \"Paper\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`paperAnchor${capitalize_default(ownerState.anchor)}`], ownerState.variant !== \"temporary\" && styles[`paperAnchorDocked${capitalize_default(ownerState.anchor)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  overflowY: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\",\n  flex: \"1 0 auto\",\n  zIndex: (theme.vars || theme).zIndex.drawer,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: \"touch\",\n  // temporary style\n  position: \"fixed\",\n  top: 0,\n  // We disable the focus ring for mouse, touch and keyboard users.\n  // At some point, it would be better to keep it for keyboard users.\n  // :focus-ring CSS pseudo-class will help.\n  outline: 0\n}, ownerState.anchor === \"left\" && {\n  left: 0\n}, ownerState.anchor === \"top\" && {\n  top: 0,\n  left: 0,\n  right: 0,\n  height: \"auto\",\n  maxHeight: \"100%\"\n}, ownerState.anchor === \"right\" && {\n  right: 0\n}, ownerState.anchor === \"bottom\" && {\n  top: \"auto\",\n  left: 0,\n  bottom: 0,\n  right: 0,\n  height: \"auto\",\n  maxHeight: \"100%\"\n}, ownerState.anchor === \"left\" && ownerState.variant !== \"temporary\" && {\n  borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === \"top\" && ownerState.variant !== \"temporary\" && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === \"right\" && ownerState.variant !== \"temporary\" && {\n  borderLeft: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === \"bottom\" && ownerState.variant !== \"temporary\" && {\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`\n}));\nvar oppositeDirection = {\n  left: \"right\",\n  right: \"left\",\n  top: \"down\",\n  bottom: \"up\"\n};\nfunction isHorizontal(anchor) {\n  return [\"left\", \"right\"].indexOf(anchor) !== -1;\n}\nfunction getAnchor(theme, anchor) {\n  return theme.direction === \"rtl\" && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nvar Drawer = React2.forwardRef(function Drawer2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiDrawer\"\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    anchor: anchorProp = \"left\",\n    BackdropProps,\n    children,\n    className,\n    elevation = 16,\n    hideBackdrop = false,\n    ModalProps: {\n      BackdropProps: BackdropPropsProp\n    } = {},\n    onClose,\n    open = false,\n    PaperProps = {},\n    SlideProps,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Slide_default,\n    transitionDuration = defaultTransitionDuration,\n    variant = \"temporary\"\n  } = props, ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, _excluded2), other = _objectWithoutPropertiesLoose(props, _excluded22);\n  const mounted = React2.useRef(false);\n  React2.useEffect(() => {\n    mounted.current = true;\n  }, []);\n  const anchorInvariant = getAnchor(theme, anchorProp);\n  const anchor = anchorProp;\n  const ownerState = _extends({}, props, {\n    anchor,\n    elevation,\n    open,\n    variant\n  }, other);\n  const classes = useUtilityClasses(ownerState);\n  const drawer = (0, import_jsx_runtime2.jsx)(DrawerPaper, _extends({\n    elevation: variant === \"temporary\" ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx_default(classes.paper, PaperProps.className),\n    ownerState,\n    children\n  }));\n  if (variant === \"permanent\") {\n    return (0, import_jsx_runtime2.jsx)(DrawerDockedRoot, _extends({\n      className: clsx_default(classes.root, classes.docked, className),\n      ownerState,\n      ref\n    }, other, {\n      children: drawer\n    }));\n  }\n  const slidingDrawer = (0, import_jsx_runtime2.jsx)(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchorInvariant],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps, {\n    children: drawer\n  }));\n  if (variant === \"persistent\") {\n    return (0, import_jsx_runtime2.jsx)(DrawerDockedRoot, _extends({\n      className: clsx_default(classes.root, classes.docked, className),\n      ownerState,\n      ref\n    }, other, {\n      children: slidingDrawer\n    }));\n  }\n  return (0, import_jsx_runtime2.jsx)(DrawerRoot, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration\n    }),\n    className: clsx_default(classes.root, classes.modal, className),\n    open,\n    ownerState,\n    onClose,\n    hideBackdrop,\n    ref\n  }, other, ModalProps, {\n    children: slidingDrawer\n  }));\n});\ntrue ? Drawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Side from which the drawer will appear.\n   * @default 'left'\n   */\n  anchor: import_prop_types2.default.oneOf([\"bottom\", \"left\", \"right\", \"top\"]),\n  /**\n   * @ignore\n   */\n  BackdropProps: import_prop_types2.default.object,\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types2.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types2.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types2.default.string,\n  /**\n   * The elevation of the drawer.\n   * @default 16\n   */\n  elevation: integerPropType_default,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: import_prop_types2.default.bool,\n  /**\n   * Props applied to the [`Modal`](/material-ui/api/modal/) element.\n   * @default {}\n   */\n  ModalProps: import_prop_types2.default.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: import_prop_types2.default.func,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: import_prop_types2.default.bool,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: import_prop_types2.default.object,\n  /**\n   * Props applied to the [`Slide`](/material-ui/api/slide/) element.\n   */\n  SlideProps: import_prop_types2.default.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object]),\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.shape({\n    appear: import_prop_types2.default.number,\n    enter: import_prop_types2.default.number,\n    exit: import_prop_types2.default.number\n  })]),\n  /**\n   * The variant to use.\n   * @default 'temporary'\n   */\n  variant: import_prop_types2.default.oneOf([\"permanent\", \"persistent\", \"temporary\"])\n} : void 0;\nvar Drawer_default = Drawer;\n\nexport {\n  Slide_default,\n  getDrawerUtilityClass,\n  drawerClasses_default,\n  isHorizontal,\n  getAnchor,\n  Drawer_default\n};\n//# sourceMappingURL=chunk-YU3IIQQQ.js.map\n",
      "start": 1701867792155,
      "end": 1701867792278,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701867792278,
      "end": 1701867792278,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  Modal_default,\n  Paper_default\n} from \"/node_modules/.vite/deps/chunk-BO4RBQWS.js?v=c929456e\";\nimport {\n  getTransitionProps,\n  reflow\n} from \"/node_modules/.vite/deps/chunk-3VBKQG2M.js?v=c929456e\";\nimport {\n  Transition_default\n} from \"/node_modules/.vite/deps/chunk-NQATQIFR.js?v=c929456e\";\nimport {\n  useTheme\n} from \"/node_modules/.vite/deps/chunk-ZOIWXA3S.js?v=c929456e\";\nimport {\n  init_utils\n} from \"/node_modules/.vite/deps/chunk-DRF2MIBW.js?v=c929456e\";\nimport {\n  debounce_default,\n  init_debounce,\n  ownerWindow_default\n} from \"/node_modules/.vite/deps/chunk-Q2B64RV7.js?v=c929456e\";\nimport {\n  init_useForkRef,\n  useForkRef_default\n} from \"/node_modules/.vite/deps/chunk-VAFBYMTJ.js?v=c929456e\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"/node_modules/.vite/deps/chunk-63S7JPMK.js?v=c929456e\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-5CYIWUDX.js?v=c929456e\";\nimport {\n  HTMLElementType,\n  _objectWithoutPropertiesLoose,\n  chainPropTypes,\n  clsx_default,\n  composeClasses,\n  elementAcceptingRef_default,\n  generateUtilityClass,\n  generateUtilityClasses,\n  init_clsx,\n  init_esm,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  integerPropType_default,\n  require_prop_types,\n  rootShouldForwardProp,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-CY3GP2WZ.js?v=c929456e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=c929456e\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=c929456e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=c929456e\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=c929456e\";\n\n// node_modules/@mui/material/Drawer/Drawer.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React2 = __toESM(require_react());\nvar import_prop_types2 = __toESM(require_prop_types());\ninit_clsx();\ninit_esm();\ninit_composeClasses();\n\n// node_modules/@mui/material/Slide/Slide.js\ninit_extends();\ninit_objectWithoutPropertiesLoose();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_esm();\ninit_debounce();\ninit_useForkRef();\ninit_utils();\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"addEndListener\", \"appear\", \"children\", \"container\", \"direction\", \"easing\", \"in\", \"onEnter\", \"onEntered\", \"onEntering\", \"onExit\", \"onExited\", \"onExiting\", \"style\", \"timeout\", \"TransitionComponent\"];\nfunction getTranslateValue(direction, node, resolvedContainer) {\n  const rect = node.getBoundingClientRect();\n  const containerRect = resolvedContainer && resolvedContainer.getBoundingClientRect();\n  const containerWindow = ownerWindow_default(node);\n  let transform;\n  if (node.fakeTransform) {\n    transform = node.fakeTransform;\n  } else {\n    const computedStyle = containerWindow.getComputedStyle(node);\n    transform = computedStyle.getPropertyValue(\"-webkit-transform\") || computedStyle.getPropertyValue(\"transform\");\n  }\n  let offsetX = 0;\n  let offsetY = 0;\n  if (transform && transform !== \"none\" && typeof transform === \"string\") {\n    const transformValues = transform.split(\"(\")[1].split(\")\")[0].split(\",\");\n    offsetX = parseInt(transformValues[4], 10);\n    offsetY = parseInt(transformValues[5], 10);\n  }\n  if (direction === \"left\") {\n    if (containerRect) {\n      return `translateX(${containerRect.right + offsetX - rect.left}px)`;\n    }\n    return `translateX(${containerWindow.innerWidth + offsetX - rect.left}px)`;\n  }\n  if (direction === \"right\") {\n    if (containerRect) {\n      return `translateX(-${rect.right - containerRect.left - offsetX}px)`;\n    }\n    return `translateX(-${rect.left + rect.width - offsetX}px)`;\n  }\n  if (direction === \"up\") {\n    if (containerRect) {\n      return `translateY(${containerRect.bottom + offsetY - rect.top}px)`;\n    }\n    return `translateY(${containerWindow.innerHeight + offsetY - rect.top}px)`;\n  }\n  if (containerRect) {\n    return `translateY(-${rect.top - containerRect.top + rect.height - offsetY}px)`;\n  }\n  return `translateY(-${rect.top + rect.height - offsetY}px)`;\n}\nfunction resolveContainer(containerPropProp) {\n  return typeof containerPropProp === \"function\" ? containerPropProp() : containerPropProp;\n}\nfunction setTranslateValue(direction, node, containerProp) {\n  const resolvedContainer = resolveContainer(containerProp);\n  const transform = getTranslateValue(direction, node, resolvedContainer);\n  if (transform) {\n    node.style.webkitTransform = transform;\n    node.style.transform = transform;\n  }\n}\nvar Slide = React.forwardRef(function Slide2(props, ref) {\n  const theme = useTheme();\n  const defaultEasing = {\n    enter: theme.transitions.easing.easeOut,\n    exit: theme.transitions.easing.sharp\n  };\n  const defaultTimeout = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    addEndListener,\n    appear = true,\n    children,\n    container: containerProp,\n    direction = \"down\",\n    easing: easingProp = defaultEasing,\n    in: inProp,\n    onEnter,\n    onEntered,\n    onEntering,\n    onExit,\n    onExited,\n    onExiting,\n    style,\n    timeout = defaultTimeout,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Transition_default\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const childrenRef = React.useRef(null);\n  const handleRef = useForkRef_default(children.ref, childrenRef, ref);\n  const normalizedTransitionCallback = (callback) => (isAppearing) => {\n    if (callback) {\n      if (isAppearing === void 0) {\n        callback(childrenRef.current);\n      } else {\n        callback(childrenRef.current, isAppearing);\n      }\n    }\n  };\n  const handleEnter = normalizedTransitionCallback((node, isAppearing) => {\n    setTranslateValue(direction, node, containerProp);\n    reflow(node);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  });\n  const handleEntering = normalizedTransitionCallback((node, isAppearing) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: \"enter\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"-webkit-transform\", _extends({}, transitionProps));\n    node.style.transition = theme.transitions.create(\"transform\", _extends({}, transitionProps));\n    node.style.webkitTransform = \"none\";\n    node.style.transform = \"none\";\n    if (onEntering) {\n      onEntering(node, isAppearing);\n    }\n  });\n  const handleEntered = normalizedTransitionCallback(onEntered);\n  const handleExiting = normalizedTransitionCallback(onExiting);\n  const handleExit = normalizedTransitionCallback((node) => {\n    const transitionProps = getTransitionProps({\n      timeout,\n      style,\n      easing: easingProp\n    }, {\n      mode: \"exit\"\n    });\n    node.style.webkitTransition = theme.transitions.create(\"-webkit-transform\", transitionProps);\n    node.style.transition = theme.transitions.create(\"transform\", transitionProps);\n    setTranslateValue(direction, node, containerProp);\n    if (onExit) {\n      onExit(node);\n    }\n  });\n  const handleExited = normalizedTransitionCallback((node) => {\n    node.style.webkitTransition = \"\";\n    node.style.transition = \"\";\n    if (onExited) {\n      onExited(node);\n    }\n  });\n  const handleAddEndListener = (next) => {\n    if (addEndListener) {\n      addEndListener(childrenRef.current, next);\n    }\n  };\n  const updatePosition = React.useCallback(() => {\n    if (childrenRef.current) {\n      setTranslateValue(direction, childrenRef.current, containerProp);\n    }\n  }, [direction, containerProp]);\n  React.useEffect(() => {\n    if (inProp || direction === \"down\" || direction === \"right\") {\n      return void 0;\n    }\n    const handleResize = debounce_default(() => {\n      if (childrenRef.current) {\n        setTranslateValue(direction, childrenRef.current, containerProp);\n      }\n    });\n    const containerWindow = ownerWindow_default(childrenRef.current);\n    containerWindow.addEventListener(\"resize\", handleResize);\n    return () => {\n      handleResize.clear();\n      containerWindow.removeEventListener(\"resize\", handleResize);\n    };\n  }, [direction, inProp, containerProp]);\n  React.useEffect(() => {\n    if (!inProp) {\n      updatePosition();\n    }\n  }, [inProp, updatePosition]);\n  return (0, import_jsx_runtime.jsx)(TransitionComponent, _extends({\n    nodeRef: childrenRef,\n    onEnter: handleEnter,\n    onEntered: handleEntered,\n    onEntering: handleEntering,\n    onExit: handleExit,\n    onExited: handleExited,\n    onExiting: handleExiting,\n    addEndListener: handleAddEndListener,\n    appear,\n    in: inProp,\n    timeout\n  }, other, {\n    children: (state, childProps) => {\n      return React.cloneElement(children, _extends({\n        ref: handleRef,\n        style: _extends({\n          visibility: state === \"exited\" && !inProp ? \"hidden\" : void 0\n        }, style, children.props.style)\n      }, childProps));\n    }\n  }));\n});\ntrue ? Slide.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Add a custom transition end trigger. Called with the transitioning DOM\n   * node and a done callback. Allows for more fine grained transition end\n   * logic. Note: Timeouts are still used as a fallback if provided.\n   */\n  addEndListener: import_prop_types.default.func,\n  /**\n   * Perform the enter transition when it first mounts if `in` is also `true`.\n   * Set this to `false` to disable this behavior.\n   * @default true\n   */\n  appear: import_prop_types.default.bool,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef_default.isRequired,\n  /**\n   * An HTML element, or a function that returns one.\n   * It's used to set the container the Slide is transitioning from.\n   */\n  container: chainPropTypes(import_prop_types.default.oneOfType([HTMLElementType, import_prop_types.default.func]), (props) => {\n    if (props.open) {\n      const resolvedContainer = resolveContainer(props.container);\n      if (resolvedContainer && resolvedContainer.nodeType === 1) {\n        const box = resolvedContainer.getBoundingClientRect();\n        if (box.top === 0 && box.left === 0 && box.right === 0 && box.bottom === 0) {\n          return new Error([\"MUI: The `container` prop provided to the component is invalid.\", \"The anchor element should be part of the document layout.\", \"Make sure the element is present in the document or that it's not display none.\"].join(\"\\n\"));\n        }\n      } else if (!resolvedContainer || typeof resolvedContainer.getBoundingClientRect !== \"function\" || resolvedContainer.contextElement != null && resolvedContainer.contextElement.nodeType !== 1) {\n        return new Error([\"MUI: The `container` prop provided to the component is invalid.\", \"It should be an HTML element instance.\"].join(\"\\n\"));\n      }\n    }\n    return null;\n  }),\n  /**\n   * Direction the child node will enter from.\n   * @default 'down'\n   */\n  direction: import_prop_types.default.oneOf([\"down\", \"left\", \"right\", \"up\"]),\n  /**\n   * The transition timing function.\n   * You may specify a single easing or a object containing enter and exit values.\n   * @default {\n   *   enter: theme.transitions.easing.easeOut,\n   *   exit: theme.transitions.easing.sharp,\n   * }\n   */\n  easing: import_prop_types.default.oneOfType([import_prop_types.default.shape({\n    enter: import_prop_types.default.string,\n    exit: import_prop_types.default.string\n  }), import_prop_types.default.string]),\n  /**\n   * If `true`, the component will transition in.\n   */\n  in: import_prop_types.default.bool,\n  /**\n   * @ignore\n   */\n  onEnter: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntered: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onEntering: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExit: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExited: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onExiting: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  style: import_prop_types.default.object,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  timeout: import_prop_types.default.oneOfType([import_prop_types.default.number, import_prop_types.default.shape({\n    appear: import_prop_types.default.number,\n    enter: import_prop_types.default.number,\n    exit: import_prop_types.default.number\n  })])\n} : void 0;\nvar Slide_default = Slide;\n\n// node_modules/@mui/material/Drawer/Drawer.js\ninit_capitalize();\ninit_useThemeProps();\ninit_styled();\n\n// node_modules/@mui/material/Drawer/drawerClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getDrawerUtilityClass(slot) {\n  return generateUtilityClass(\"MuiDrawer\", slot);\n}\nvar drawerClasses = generateUtilityClasses(\"MuiDrawer\", [\"root\", \"docked\", \"paper\", \"paperAnchorLeft\", \"paperAnchorRight\", \"paperAnchorTop\", \"paperAnchorBottom\", \"paperAnchorDockedLeft\", \"paperAnchorDockedRight\", \"paperAnchorDockedTop\", \"paperAnchorDockedBottom\", \"modal\"]);\nvar drawerClasses_default = drawerClasses;\n\n// node_modules/@mui/material/Drawer/Drawer.js\nvar import_jsx_runtime2 = __toESM(require_jsx_runtime());\nvar _excluded2 = [\"BackdropProps\"];\nvar _excluded22 = [\"anchor\", \"BackdropProps\", \"children\", \"className\", \"elevation\", \"hideBackdrop\", \"ModalProps\", \"onClose\", \"open\", \"PaperProps\", \"SlideProps\", \"TransitionComponent\", \"transitionDuration\", \"variant\"];\nvar overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, (ownerState.variant === \"permanent\" || ownerState.variant === \"persistent\") && styles.docked, styles.modal];\n};\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    anchor,\n    variant\n  } = ownerState;\n  const slots = {\n    root: [\"root\"],\n    docked: [(variant === \"permanent\" || variant === \"persistent\") && \"docked\"],\n    modal: [\"modal\"],\n    paper: [\"paper\", `paperAnchor${capitalize_default(anchor)}`, variant !== \"temporary\" && `paperAnchorDocked${capitalize_default(anchor)}`]\n  };\n  return composeClasses(slots, getDrawerUtilityClass, classes);\n};\nvar DrawerRoot = styled_default(Modal_default, {\n  name: \"MuiDrawer\",\n  slot: \"Root\",\n  overridesResolver\n})(({\n  theme\n}) => ({\n  zIndex: (theme.vars || theme).zIndex.drawer\n}));\nvar DrawerDockedRoot = styled_default(\"div\", {\n  shouldForwardProp: rootShouldForwardProp,\n  name: \"MuiDrawer\",\n  slot: \"Docked\",\n  skipVariantsResolver: false,\n  overridesResolver\n})({\n  flex: \"0 0 auto\"\n});\nvar DrawerPaper = styled_default(Paper_default, {\n  name: \"MuiDrawer\",\n  slot: \"Paper\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.paper, styles[`paperAnchor${capitalize_default(ownerState.anchor)}`], ownerState.variant !== \"temporary\" && styles[`paperAnchorDocked${capitalize_default(ownerState.anchor)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  overflowY: \"auto\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  height: \"100%\",\n  flex: \"1 0 auto\",\n  zIndex: (theme.vars || theme).zIndex.drawer,\n  // Add iOS momentum scrolling for iOS < 13.0\n  WebkitOverflowScrolling: \"touch\",\n  // temporary style\n  position: \"fixed\",\n  top: 0,\n  // We disable the focus ring for mouse, touch and keyboard users.\n  // At some point, it would be better to keep it for keyboard users.\n  // :focus-ring CSS pseudo-class will help.\n  outline: 0\n}, ownerState.anchor === \"left\" && {\n  left: 0\n}, ownerState.anchor === \"top\" && {\n  top: 0,\n  left: 0,\n  right: 0,\n  height: \"auto\",\n  maxHeight: \"100%\"\n}, ownerState.anchor === \"right\" && {\n  right: 0\n}, ownerState.anchor === \"bottom\" && {\n  top: \"auto\",\n  left: 0,\n  bottom: 0,\n  right: 0,\n  height: \"auto\",\n  maxHeight: \"100%\"\n}, ownerState.anchor === \"left\" && ownerState.variant !== \"temporary\" && {\n  borderRight: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === \"top\" && ownerState.variant !== \"temporary\" && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === \"right\" && ownerState.variant !== \"temporary\" && {\n  borderLeft: `1px solid ${(theme.vars || theme).palette.divider}`\n}, ownerState.anchor === \"bottom\" && ownerState.variant !== \"temporary\" && {\n  borderTop: `1px solid ${(theme.vars || theme).palette.divider}`\n}));\nvar oppositeDirection = {\n  left: \"right\",\n  right: \"left\",\n  top: \"down\",\n  bottom: \"up\"\n};\nfunction isHorizontal(anchor) {\n  return [\"left\", \"right\"].indexOf(anchor) !== -1;\n}\nfunction getAnchor(theme, anchor) {\n  return theme.direction === \"rtl\" && isHorizontal(anchor) ? oppositeDirection[anchor] : anchor;\n}\nvar Drawer = React2.forwardRef(function Drawer2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiDrawer\"\n  });\n  const theme = useTheme();\n  const defaultTransitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n    anchor: anchorProp = \"left\",\n    BackdropProps,\n    children,\n    className,\n    elevation = 16,\n    hideBackdrop = false,\n    ModalProps: {\n      BackdropProps: BackdropPropsProp\n    } = {},\n    onClose,\n    open = false,\n    PaperProps = {},\n    SlideProps,\n    // eslint-disable-next-line react/prop-types\n    TransitionComponent = Slide_default,\n    transitionDuration = defaultTransitionDuration,\n    variant = \"temporary\"\n  } = props, ModalProps = _objectWithoutPropertiesLoose(props.ModalProps, _excluded2), other = _objectWithoutPropertiesLoose(props, _excluded22);\n  const mounted = React2.useRef(false);\n  React2.useEffect(() => {\n    mounted.current = true;\n  }, []);\n  const anchorInvariant = getAnchor(theme, anchorProp);\n  const anchor = anchorProp;\n  const ownerState = _extends({}, props, {\n    anchor,\n    elevation,\n    open,\n    variant\n  }, other);\n  const classes = useUtilityClasses(ownerState);\n  const drawer = (0, import_jsx_runtime2.jsx)(DrawerPaper, _extends({\n    elevation: variant === \"temporary\" ? elevation : 0,\n    square: true\n  }, PaperProps, {\n    className: clsx_default(classes.paper, PaperProps.className),\n    ownerState,\n    children\n  }));\n  if (variant === \"permanent\") {\n    return (0, import_jsx_runtime2.jsx)(DrawerDockedRoot, _extends({\n      className: clsx_default(classes.root, classes.docked, className),\n      ownerState,\n      ref\n    }, other, {\n      children: drawer\n    }));\n  }\n  const slidingDrawer = (0, import_jsx_runtime2.jsx)(TransitionComponent, _extends({\n    in: open,\n    direction: oppositeDirection[anchorInvariant],\n    timeout: transitionDuration,\n    appear: mounted.current\n  }, SlideProps, {\n    children: drawer\n  }));\n  if (variant === \"persistent\") {\n    return (0, import_jsx_runtime2.jsx)(DrawerDockedRoot, _extends({\n      className: clsx_default(classes.root, classes.docked, className),\n      ownerState,\n      ref\n    }, other, {\n      children: slidingDrawer\n    }));\n  }\n  return (0, import_jsx_runtime2.jsx)(DrawerRoot, _extends({\n    BackdropProps: _extends({}, BackdropProps, BackdropPropsProp, {\n      transitionDuration\n    }),\n    className: clsx_default(classes.root, classes.modal, className),\n    open,\n    ownerState,\n    onClose,\n    hideBackdrop,\n    ref\n  }, other, ModalProps, {\n    children: slidingDrawer\n  }));\n});\ntrue ? Drawer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Side from which the drawer will appear.\n   * @default 'left'\n   */\n  anchor: import_prop_types2.default.oneOf([\"bottom\", \"left\", \"right\", \"top\"]),\n  /**\n   * @ignore\n   */\n  BackdropProps: import_prop_types2.default.object,\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types2.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types2.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types2.default.string,\n  /**\n   * The elevation of the drawer.\n   * @default 16\n   */\n  elevation: integerPropType_default,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: import_prop_types2.default.bool,\n  /**\n   * Props applied to the [`Modal`](/material-ui/api/modal/) element.\n   * @default {}\n   */\n  ModalProps: import_prop_types2.default.object,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: import_prop_types2.default.func,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: import_prop_types2.default.bool,\n  /**\n   * Props applied to the [`Paper`](/material-ui/api/paper/) element.\n   * @default {}\n   */\n  PaperProps: import_prop_types2.default.object,\n  /**\n   * Props applied to the [`Slide`](/material-ui/api/slide/) element.\n   */\n  SlideProps: import_prop_types2.default.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types2.default.oneOfType([import_prop_types2.default.arrayOf(import_prop_types2.default.oneOfType([import_prop_types2.default.func, import_prop_types2.default.object, import_prop_types2.default.bool])), import_prop_types2.default.func, import_prop_types2.default.object]),\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: import_prop_types2.default.oneOfType([import_prop_types2.default.number, import_prop_types2.default.shape({\n    appear: import_prop_types2.default.number,\n    enter: import_prop_types2.default.number,\n    exit: import_prop_types2.default.number\n  })]),\n  /**\n   * The variant to use.\n   * @default 'temporary'\n   */\n  variant: import_prop_types2.default.oneOf([\"permanent\", \"persistent\", \"temporary\"])\n} : void 0;\nvar Drawer_default = Drawer;\n\nexport {\n  Slide_default,\n  getDrawerUtilityClass,\n  drawerClasses_default,\n  isHorizontal,\n  getAnchor,\n  Drawer_default\n};\n//# sourceMappingURL=chunk-YU3IIQQQ.js.map\n",
      "start": 1701867792278,
      "end": 1701867792280,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
