{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/react-i18next.js?v=3c106fdb",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __commonJS,\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/void-elements/index.js\nvar require_void_elements = __commonJS({\n  \"node_modules/void-elements/index.js\"(exports, module) {\n    module.exports = {\n      \"area\": true,\n      \"base\": true,\n      \"br\": true,\n      \"col\": true,\n      \"embed\": true,\n      \"hr\": true,\n      \"img\": true,\n      \"input\": true,\n      \"link\": true,\n      \"meta\": true,\n      \"param\": true,\n      \"source\": true,\n      \"track\": true,\n      \"wbr\": true\n    };\n  }\n});\n\n// node_modules/react-i18next/dist/es/Trans.js\nvar import_react3 = __toESM(require_react(), 1);\n\n// node_modules/react-i18next/dist/es/TransWithoutContext.js\ninit_extends();\nvar import_react = __toESM(require_react(), 1);\n\n// node_modules/html-parse-stringify/dist/html-parse-stringify.module.js\nvar import_void_elements = __toESM(require_void_elements());\nvar t = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;\nfunction n(n2) {\n  var r2 = { type: \"tag\", name: \"\", voidElement: false, attrs: {}, children: [] }, i2 = n2.match(/<\\/?([^\\s]+?)[/\\s>]/);\n  if (i2 && (r2.name = i2[1], (import_void_elements.default[i2[1]] || \"/\" === n2.charAt(n2.length - 2)) && (r2.voidElement = true), r2.name.startsWith(\"!--\"))) {\n    var s2 = n2.indexOf(\"-->\");\n    return { type: \"comment\", comment: -1 !== s2 ? n2.slice(4, s2) : \"\" };\n  }\n  for (var a2 = new RegExp(t), c2 = null; null !== (c2 = a2.exec(n2)); )\n    if (c2[0].trim())\n      if (c2[1]) {\n        var o = c2[1].trim(), l = [o, \"\"];\n        o.indexOf(\"=\") > -1 && (l = o.split(\"=\")), r2.attrs[l[0]] = l[1], a2.lastIndex--;\n      } else\n        c2[2] && (r2.attrs[c2[2]] = c2[3].trim().substring(1, c2[3].length - 1));\n  return r2;\n}\nvar r = /<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g;\nvar i = /^\\s*$/;\nvar s = /* @__PURE__ */ Object.create(null);\nfunction a(e2, t2) {\n  switch (t2.type) {\n    case \"text\":\n      return e2 + t2.content;\n    case \"tag\":\n      return e2 += \"<\" + t2.name + (t2.attrs ? function(e3) {\n        var t3 = [];\n        for (var n2 in e3)\n          t3.push(n2 + '=\"' + e3[n2] + '\"');\n        return t3.length ? \" \" + t3.join(\" \") : \"\";\n      }(t2.attrs) : \"\") + (t2.voidElement ? \"/>\" : \">\"), t2.voidElement ? e2 : e2 + t2.children.reduce(a, \"\") + \"</\" + t2.name + \">\";\n    case \"comment\":\n      return e2 + \"<!--\" + t2.comment + \"-->\";\n  }\n}\nvar c = { parse: function(e2, t2) {\n  t2 || (t2 = {}), t2.components || (t2.components = s);\n  var a2, c2 = [], o = [], l = -1, m = false;\n  if (0 !== e2.indexOf(\"<\")) {\n    var u = e2.indexOf(\"<\");\n    c2.push({ type: \"text\", content: -1 === u ? e2 : e2.substring(0, u) });\n  }\n  return e2.replace(r, function(r2, s2) {\n    if (m) {\n      if (r2 !== \"</\" + a2.name + \">\")\n        return;\n      m = false;\n    }\n    var u2, f = \"/\" !== r2.charAt(1), h = r2.startsWith(\"<!--\"), p = s2 + r2.length, d = e2.charAt(p);\n    if (h) {\n      var v = n(r2);\n      return l < 0 ? (c2.push(v), c2) : ((u2 = o[l]).children.push(v), c2);\n    }\n    if (f && (l++, \"tag\" === (a2 = n(r2)).type && t2.components[a2.name] && (a2.type = \"component\", m = true), a2.voidElement || m || !d || \"<\" === d || a2.children.push({ type: \"text\", content: e2.slice(p, e2.indexOf(\"<\", p)) }), 0 === l && c2.push(a2), (u2 = o[l - 1]) && u2.children.push(a2), o[l] = a2), (!f || a2.voidElement) && (l > -1 && (a2.voidElement || a2.name === r2.slice(2, -1)) && (l--, a2 = -1 === l ? c2 : o[l]), !m && \"<\" !== d && d)) {\n      u2 = -1 === l ? c2 : o[l].children;\n      var x = e2.indexOf(\"<\", p), g = e2.slice(p, -1 === x ? void 0 : x);\n      i.test(g) && (g = \" \"), (x > -1 && l + u2.length >= 0 || \" \" !== g) && u2.push({ type: \"text\", content: g });\n    }\n  }), c2;\n}, stringify: function(e2) {\n  return e2.reduce(function(e3, t2) {\n    return e3 + a(\"\", t2);\n  }, \"\");\n} };\nvar html_parse_stringify_module_default = c;\n\n// node_modules/react-i18next/dist/es/utils.js\nfunction warn() {\n  if (console && console.warn) {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (typeof args[0] === \"string\")\n      args[0] = `react-i18next:: ${args[0]}`;\n    console.warn(...args);\n  }\n}\nvar alreadyWarned = {};\nfunction warnOnce() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  if (typeof args[0] === \"string\" && alreadyWarned[args[0]])\n    return;\n  if (typeof args[0] === \"string\")\n    alreadyWarned[args[0]] = /* @__PURE__ */ new Date();\n  warn(...args);\n}\nvar loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off(\"initialized\", initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on(\"initialized\", initialized);\n  }\n};\nfunction loadNamespaces(i18n, ns, cb) {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n}\nfunction loadLanguages(i18n, lng, ns, cb) {\n  if (typeof ns === \"string\")\n    ns = [ns];\n  ns.forEach((n2) => {\n    if (i18n.options.ns.indexOf(n2) < 0)\n      i18n.options.ns.push(n2);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n}\nfunction oldI18nextHasLoadedNamespace(ns, i18n) {\n  let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  const lng = i18n.languages[0];\n  const fallbackLng = i18n.options ? i18n.options.fallbackLng : false;\n  const lastLng = i18n.languages[i18n.languages.length - 1];\n  if (lng.toLowerCase() === \"cimode\")\n    return true;\n  const loadNotPending = (l, n2) => {\n    const loadState = i18n.services.backendConnector.state[`${l}|${n2}`];\n    return loadState === -1 || loadState === 2;\n  };\n  if (options.bindI18n && options.bindI18n.indexOf(\"languageChanging\") > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns))\n    return false;\n  if (i18n.hasResourceBundle(lng, ns))\n    return true;\n  if (!i18n.services.backendConnector.backend || i18n.options.resources && !i18n.options.partialBundledLanguages)\n    return true;\n  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns)))\n    return true;\n  return false;\n}\nfunction hasLoadedNamespace(ns, i18n) {\n  let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce(\"i18n.languages were undefined or empty\", i18n.languages);\n    return true;\n  }\n  const isNewerI18next = i18n.options.ignoreJSONStructure !== void 0;\n  if (!isNewerI18next) {\n    return oldI18nextHasLoadedNamespace(ns, i18n, options);\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance2, loadNotPending) => {\n      if (options.bindI18n && options.bindI18n.indexOf(\"languageChanging\") > -1 && i18nInstance2.services.backendConnector.backend && i18nInstance2.isLanguageChangingTo && !loadNotPending(i18nInstance2.isLanguageChangingTo, ns))\n        return false;\n    }\n  });\n}\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || (typeof Component === \"string\" && Component.length > 0 ? Component : \"Unknown\");\n}\n\n// node_modules/react-i18next/dist/es/unescape.js\nvar matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;\nvar htmlEntities = {\n  \"&amp;\": \"&\",\n  \"&#38;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&#60;\": \"<\",\n  \"&gt;\": \">\",\n  \"&#62;\": \">\",\n  \"&apos;\": \"'\",\n  \"&#39;\": \"'\",\n  \"&quot;\": '\"',\n  \"&#34;\": '\"',\n  \"&nbsp;\": \" \",\n  \"&#160;\": \" \",\n  \"&copy;\": \"©\",\n  \"&#169;\": \"©\",\n  \"&reg;\": \"®\",\n  \"&#174;\": \"®\",\n  \"&hellip;\": \"…\",\n  \"&#8230;\": \"…\",\n  \"&#x2F;\": \"/\",\n  \"&#47;\": \"/\"\n};\nvar unescapeHtmlEntity = (m) => htmlEntities[m];\nvar unescape = (text) => text.replace(matchHtmlEntity, unescapeHtmlEntity);\n\n// node_modules/react-i18next/dist/es/defaults.js\nvar defaultOptions = {\n  bindI18n: \"languageChanged\",\n  bindI18nStore: \"\",\n  transEmptyNodeValue: \"\",\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: \"\",\n  transKeepBasicHtmlNodesFor: [\"br\", \"strong\", \"i\", \"p\"],\n  useSuspense: true,\n  unescape\n};\nfunction setDefaults() {\n  let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n  defaultOptions = {\n    ...defaultOptions,\n    ...options\n  };\n}\nfunction getDefaults() {\n  return defaultOptions;\n}\n\n// node_modules/react-i18next/dist/es/i18nInstance.js\nvar i18nInstance;\nfunction setI18n(instance) {\n  i18nInstance = instance;\n}\nfunction getI18n() {\n  return i18nInstance;\n}\n\n// node_modules/react-i18next/dist/es/TransWithoutContext.js\nfunction hasChildren(node, checkLength) {\n  if (!node)\n    return false;\n  const base = node.props ? node.props.children : node.children;\n  if (checkLength)\n    return base.length > 0;\n  return !!base;\n}\nfunction getChildren(node) {\n  if (!node)\n    return [];\n  const children = node.props ? node.props.children : node.children;\n  return node.props && node.props.i18nIsDynamicList ? getAsArray(children) : children;\n}\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== \"[object Array]\")\n    return false;\n  return children.every((child) => (0, import_react.isValidElement)(child));\n}\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\nfunction mergeProps(source, target) {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\nfunction nodesToString(children, i18nOptions) {\n  if (!children)\n    return \"\";\n  let stringNode = \"\";\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (typeof child === \"string\") {\n      stringNode += `${child}`;\n    } else if ((0, import_react.isValidElement)(child)) {\n      const childPropsCount = Object.keys(child.props).length;\n      const shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      const childChildren = child.props.children;\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += `<${child.type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === \"string\") {\n        stringNode += `<${child.type}>${childChildren}</${child.type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (typeof child === \"object\") {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n}\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n  if (targetString === \"\")\n    return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map((keep) => `<${keep}`).join(\"|\")).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape)\n    return [targetString];\n  const data = {};\n  function getData(childs) {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach((child) => {\n      if (typeof child === \"string\")\n        return;\n      if (hasChildren(child))\n        getData(getChildren(child));\n      else if (typeof child === \"object\" && !(0, import_react.isValidElement)(child))\n        Object.assign(data, child);\n    });\n  }\n  getData(children);\n  const ast = html_parse_stringify_module_default.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  function renderInner(child, node, rootReactNode) {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props && child.props.i18nIsDynamicList ? childs : mappedChildren;\n  }\n  function pushTranslatedJSX(child, inner, mem, i2, isVoid) {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push((0, import_react.cloneElement)(child, {\n        key: i2\n      }, isVoid ? void 0 : inner));\n    } else {\n      mem.push(...import_react.Children.map([child], (c2) => {\n        const props = {\n          ...c2.props\n        };\n        delete props.i18nIsDynamicList;\n        return import_react.default.createElement(c2.type, _extends({}, props, {\n          key: i2,\n          ref: c2.ref\n        }, isVoid ? {} : {\n          children: inner\n        }));\n      }));\n    }\n  }\n  function mapAST(reactNode, astNode, rootReactNode) {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i2) => {\n      const translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === \"tag\") {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp)\n          tmp = rootReactNode[0][node.name];\n        if (!tmp)\n          tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = (0, import_react.isValidElement)(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && typeof child === \"object\" && child.dummy && !isElement;\n        const isKnownComponent = typeof children === \"object\" && children !== null && Object.hasOwnProperty.call(children, node.name);\n        if (typeof child === \"string\") {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i2);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i2);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i2, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push((0, import_react.createElement)(node.name, {\n                key: `${node.name}-${i2}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push((0, import_react.createElement)(node.name, {\n                key: `${node.name}-${i2}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (typeof child === \"object\" && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content)\n            mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i2, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === \"text\") {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push((0, import_react.createElement)(wrapTextNodes, {\n            key: `${node.name}-${i2}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  }\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\nfunction Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce(\"You will need to pass in an i18next instance by using i18nextReactModule\");\n    return children;\n  }\n  const t2 = tFromProps || i18n.t.bind(i18n) || ((k) => k);\n  if (context)\n    tOptions.context = context;\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...i18n.options && i18n.options.react\n  };\n  let namespaces = ns || t2.ns || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === \"string\" ? [namespaces] : namespaces || [\"translation\"];\n  const nodeAsString = nodesToString(children, reactI18nextOptions);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options && i18n.options.interpolation && i18n.options.interpolation.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: \"#$?\",\n      suffix: \"?$#\"\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t2(key, combinedTOpts) : defaultValue;\n  if (components) {\n    Object.keys(components).forEach((c2) => {\n      const comp = components[c2];\n      if (typeof comp.type === \"function\" || !comp.props || !comp.props.children || translation.indexOf(`${c2}/>`) < 0 && translation.indexOf(`${c2} />`) < 0)\n        return;\n      function Componentized() {\n        return import_react.default.createElement(import_react.default.Fragment, null, comp);\n      }\n      components[c2] = import_react.default.createElement(Componentized, null);\n    });\n  }\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== void 0 ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? (0, import_react.createElement)(useAsParent, additionalProps, content) : content;\n}\n\n// node_modules/react-i18next/dist/es/context.js\nvar import_react2 = __toESM(require_react(), 1);\n\n// node_modules/react-i18next/dist/es/initReactI18next.js\nvar initReactI18next = {\n  type: \"3rdParty\",\n  init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};\n\n// node_modules/react-i18next/dist/es/context.js\nvar I18nContext = (0, import_react2.createContext)();\nvar ReportNamespaces = class {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach((ns) => {\n      if (!this.usedNamespaces[ns])\n        this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n};\nfunction composeInitialProps(ForComponent) {\n  return (ctx) => new Promise((resolve) => {\n    const i18nInitialProps = getInitialProps();\n    if (ForComponent.getInitialProps) {\n      ForComponent.getInitialProps(ctx).then((componentsInitialProps) => {\n        resolve({\n          ...componentsInitialProps,\n          ...i18nInitialProps\n        });\n      });\n    } else {\n      resolve(i18nInitialProps);\n    }\n  });\n}\nfunction getInitialProps() {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach((l) => {\n    initialI18nStore[l] = {};\n    namespaces.forEach((ns) => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}\n\n// node_modules/react-i18next/dist/es/Trans.js\nfunction Trans2(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = (0, import_react3.useContext)(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  const t2 = tFromProps || i18n && i18n.t.bind(i18n);\n  return Trans({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions,\n    values,\n    defaults,\n    components,\n    ns: ns || t2 && t2.ns || defaultNSFromContext || i18n && i18n.options && i18n.options.defaultNS,\n    i18n,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  });\n}\n\n// node_modules/react-i18next/dist/es/useTranslation.js\nvar import_react4 = __toESM(require_react(), 1);\nvar usePrevious = (value, ignore) => {\n  const ref = (0, import_react4.useRef)();\n  (0, import_react4.useEffect)(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nfunction useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = (0, import_react4.useContext)(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces)\n    i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce(\"You will need to pass in an i18next instance by using initReactI18next\");\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === \"string\")\n        return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === \"object\" && typeof optsOrDefaultValue.defaultValue === \"string\")\n        return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react && i18n.options.react.wait !== void 0)\n    warnOnce(\"It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.\");\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === \"string\" ? [namespaces] : namespaces || [\"translation\"];\n  if (i18n.reportNamespaces.addUsedNamespaces)\n    i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every((n2) => hasLoadedNamespace(n2, i18n, i18nOptions));\n  function getT() {\n    return i18n.getFixedT(props.lng || null, i18nOptions.nsMode === \"fallback\" ? namespaces : namespaces[0], keyPrefix);\n  }\n  const [t2, setT] = (0, import_react4.useState)(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng)\n    joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = (0, import_react4.useRef)(true);\n  (0, import_react4.useEffect)(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current)\n            setT(getT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current)\n            setT(getT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getT);\n    }\n    function boundReset() {\n      if (isMounted.current)\n        setT(getT);\n    }\n    if (bindI18n && i18n)\n      i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n)\n      i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n)\n        bindI18n.split(\" \").forEach((e2) => i18n.off(e2, boundReset));\n      if (bindI18nStore && i18n)\n        bindI18nStore.split(\" \").forEach((e2) => i18n.store.off(e2, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  const isInitial = (0, import_react4.useRef)(true);\n  (0, import_react4.useEffect)(() => {\n    if (isMounted.current && !isInitial.current) {\n      setT(getT);\n    }\n    isInitial.current = false;\n  }, [i18n, keyPrefix]);\n  const ret = [t2, i18n, ready];\n  ret.t = t2;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready)\n    return ret;\n  if (!ready && !useSuspense)\n    return ret;\n  throw new Promise((resolve) => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}\n\n// node_modules/react-i18next/dist/es/withTranslation.js\nvar import_react5 = __toESM(require_react(), 1);\nfunction withTranslation(ns) {\n  let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      let {\n        forwardedRef,\n        ...rest\n      } = _ref;\n      const [t2, i18n, ready] = useTranslation(ns, {\n        ...rest,\n        keyPrefix: options.keyPrefix\n      });\n      const passDownProps = {\n        ...rest,\n        t: t2,\n        i18n,\n        tReady: ready\n      };\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n      return (0, import_react5.createElement)(WrappedComponent, passDownProps);\n    }\n    I18nextWithTranslation.displayName = `withI18nextTranslation(${getDisplayName(WrappedComponent)})`;\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n    const forwardRef = (props, ref) => (0, import_react5.createElement)(I18nextWithTranslation, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n    return options.withRef ? (0, import_react5.forwardRef)(forwardRef) : I18nextWithTranslation;\n  };\n}\n\n// node_modules/react-i18next/dist/es/Translation.js\nfunction Translation(props) {\n  const {\n    ns,\n    children,\n    ...options\n  } = props;\n  const [t2, i18n, ready] = useTranslation(ns, options);\n  return children(t2, {\n    i18n,\n    lng: i18n.language\n  }, ready);\n}\n\n// node_modules/react-i18next/dist/es/I18nextProvider.js\nvar import_react6 = __toESM(require_react(), 1);\nfunction I18nextProvider(_ref) {\n  let {\n    i18n,\n    defaultNS,\n    children\n  } = _ref;\n  const value = (0, import_react6.useMemo)(() => ({\n    i18n,\n    defaultNS\n  }), [i18n, defaultNS]);\n  return (0, import_react6.createElement)(I18nContext.Provider, {\n    value\n  }, children);\n}\n\n// node_modules/react-i18next/dist/es/withSSR.js\nvar import_react8 = __toESM(require_react(), 1);\n\n// node_modules/react-i18next/dist/es/useSSR.js\nvar import_react7 = __toESM(require_react(), 1);\nfunction useSSR(initialI18nStore, initialLanguage) {\n  let props = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext\n  } = (0, import_react7.useContext)(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n.options && i18n.options.isClone)\n    return;\n  if (initialI18nStore && !i18n.initializedStoreOnce) {\n    i18n.services.resourceStore.data = initialI18nStore;\n    i18n.options.ns = Object.values(initialI18nStore).reduce((mem, lngResources) => {\n      Object.keys(lngResources).forEach((ns) => {\n        if (mem.indexOf(ns) < 0)\n          mem.push(ns);\n      });\n      return mem;\n    }, i18n.options.ns);\n    i18n.initializedStoreOnce = true;\n    i18n.isInitialized = true;\n  }\n  if (initialLanguage && !i18n.initializedLanguageOnce) {\n    i18n.changeLanguage(initialLanguage);\n    i18n.initializedLanguageOnce = true;\n  }\n}\n\n// node_modules/react-i18next/dist/es/withSSR.js\nfunction withSSR() {\n  return function Extend(WrappedComponent) {\n    function I18nextWithSSR(_ref) {\n      let {\n        initialI18nStore,\n        initialLanguage,\n        ...rest\n      } = _ref;\n      useSSR(initialI18nStore, initialLanguage);\n      return (0, import_react8.createElement)(WrappedComponent, {\n        ...rest\n      });\n    }\n    I18nextWithSSR.getInitialProps = composeInitialProps(WrappedComponent);\n    I18nextWithSSR.displayName = `withI18nextSSR(${getDisplayName(WrappedComponent)})`;\n    I18nextWithSSR.WrappedComponent = WrappedComponent;\n    return I18nextWithSSR;\n  };\n}\n\n// node_modules/react-i18next/dist/es/index.js\nvar date = () => \"\";\nvar time = () => \"\";\nvar number = () => \"\";\nvar select = () => \"\";\nvar plural = () => \"\";\nvar selectOrdinal = () => \"\";\nexport {\n  I18nContext,\n  I18nextProvider,\n  Trans2 as Trans,\n  Trans as TransWithoutContext,\n  Translation,\n  composeInitialProps,\n  date,\n  getDefaults,\n  getI18n,\n  getInitialProps,\n  initReactI18next,\n  number,\n  plural,\n  select,\n  selectOrdinal,\n  setDefaults,\n  setI18n,\n  time,\n  useSSR,\n  useTranslation,\n  withSSR,\n  withTranslation\n};\n//# sourceMappingURL=react-i18next.js.map\n",
      "start": 1701766112146,
      "end": 1701766112449,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701766112449,
      "end": 1701766112449,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=3c106fdb\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=3c106fdb\";\nimport {\n  __commonJS,\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=3c106fdb\";\n\n// node_modules/void-elements/index.js\nvar require_void_elements = __commonJS({\n  \"node_modules/void-elements/index.js\"(exports, module) {\n    module.exports = {\n      \"area\": true,\n      \"base\": true,\n      \"br\": true,\n      \"col\": true,\n      \"embed\": true,\n      \"hr\": true,\n      \"img\": true,\n      \"input\": true,\n      \"link\": true,\n      \"meta\": true,\n      \"param\": true,\n      \"source\": true,\n      \"track\": true,\n      \"wbr\": true\n    };\n  }\n});\n\n// node_modules/react-i18next/dist/es/Trans.js\nvar import_react3 = __toESM(require_react(), 1);\n\n// node_modules/react-i18next/dist/es/TransWithoutContext.js\ninit_extends();\nvar import_react = __toESM(require_react(), 1);\n\n// node_modules/html-parse-stringify/dist/html-parse-stringify.module.js\nvar import_void_elements = __toESM(require_void_elements());\nvar t = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;\nfunction n(n2) {\n  var r2 = { type: \"tag\", name: \"\", voidElement: false, attrs: {}, children: [] }, i2 = n2.match(/<\\/?([^\\s]+?)[/\\s>]/);\n  if (i2 && (r2.name = i2[1], (import_void_elements.default[i2[1]] || \"/\" === n2.charAt(n2.length - 2)) && (r2.voidElement = true), r2.name.startsWith(\"!--\"))) {\n    var s2 = n2.indexOf(\"-->\");\n    return { type: \"comment\", comment: -1 !== s2 ? n2.slice(4, s2) : \"\" };\n  }\n  for (var a2 = new RegExp(t), c2 = null; null !== (c2 = a2.exec(n2)); )\n    if (c2[0].trim())\n      if (c2[1]) {\n        var o = c2[1].trim(), l = [o, \"\"];\n        o.indexOf(\"=\") > -1 && (l = o.split(\"=\")), r2.attrs[l[0]] = l[1], a2.lastIndex--;\n      } else\n        c2[2] && (r2.attrs[c2[2]] = c2[3].trim().substring(1, c2[3].length - 1));\n  return r2;\n}\nvar r = /<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g;\nvar i = /^\\s*$/;\nvar s = /* @__PURE__ */ Object.create(null);\nfunction a(e2, t2) {\n  switch (t2.type) {\n    case \"text\":\n      return e2 + t2.content;\n    case \"tag\":\n      return e2 += \"<\" + t2.name + (t2.attrs ? function(e3) {\n        var t3 = [];\n        for (var n2 in e3)\n          t3.push(n2 + '=\"' + e3[n2] + '\"');\n        return t3.length ? \" \" + t3.join(\" \") : \"\";\n      }(t2.attrs) : \"\") + (t2.voidElement ? \"/>\" : \">\"), t2.voidElement ? e2 : e2 + t2.children.reduce(a, \"\") + \"</\" + t2.name + \">\";\n    case \"comment\":\n      return e2 + \"<!--\" + t2.comment + \"-->\";\n  }\n}\nvar c = { parse: function(e2, t2) {\n  t2 || (t2 = {}), t2.components || (t2.components = s);\n  var a2, c2 = [], o = [], l = -1, m = false;\n  if (0 !== e2.indexOf(\"<\")) {\n    var u = e2.indexOf(\"<\");\n    c2.push({ type: \"text\", content: -1 === u ? e2 : e2.substring(0, u) });\n  }\n  return e2.replace(r, function(r2, s2) {\n    if (m) {\n      if (r2 !== \"</\" + a2.name + \">\")\n        return;\n      m = false;\n    }\n    var u2, f = \"/\" !== r2.charAt(1), h = r2.startsWith(\"<!--\"), p = s2 + r2.length, d = e2.charAt(p);\n    if (h) {\n      var v = n(r2);\n      return l < 0 ? (c2.push(v), c2) : ((u2 = o[l]).children.push(v), c2);\n    }\n    if (f && (l++, \"tag\" === (a2 = n(r2)).type && t2.components[a2.name] && (a2.type = \"component\", m = true), a2.voidElement || m || !d || \"<\" === d || a2.children.push({ type: \"text\", content: e2.slice(p, e2.indexOf(\"<\", p)) }), 0 === l && c2.push(a2), (u2 = o[l - 1]) && u2.children.push(a2), o[l] = a2), (!f || a2.voidElement) && (l > -1 && (a2.voidElement || a2.name === r2.slice(2, -1)) && (l--, a2 = -1 === l ? c2 : o[l]), !m && \"<\" !== d && d)) {\n      u2 = -1 === l ? c2 : o[l].children;\n      var x = e2.indexOf(\"<\", p), g = e2.slice(p, -1 === x ? void 0 : x);\n      i.test(g) && (g = \" \"), (x > -1 && l + u2.length >= 0 || \" \" !== g) && u2.push({ type: \"text\", content: g });\n    }\n  }), c2;\n}, stringify: function(e2) {\n  return e2.reduce(function(e3, t2) {\n    return e3 + a(\"\", t2);\n  }, \"\");\n} };\nvar html_parse_stringify_module_default = c;\n\n// node_modules/react-i18next/dist/es/utils.js\nfunction warn() {\n  if (console && console.warn) {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (typeof args[0] === \"string\")\n      args[0] = `react-i18next:: ${args[0]}`;\n    console.warn(...args);\n  }\n}\nvar alreadyWarned = {};\nfunction warnOnce() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  if (typeof args[0] === \"string\" && alreadyWarned[args[0]])\n    return;\n  if (typeof args[0] === \"string\")\n    alreadyWarned[args[0]] = /* @__PURE__ */ new Date();\n  warn(...args);\n}\nvar loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off(\"initialized\", initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on(\"initialized\", initialized);\n  }\n};\nfunction loadNamespaces(i18n, ns, cb) {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n}\nfunction loadLanguages(i18n, lng, ns, cb) {\n  if (typeof ns === \"string\")\n    ns = [ns];\n  ns.forEach((n2) => {\n    if (i18n.options.ns.indexOf(n2) < 0)\n      i18n.options.ns.push(n2);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n}\nfunction oldI18nextHasLoadedNamespace(ns, i18n) {\n  let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  const lng = i18n.languages[0];\n  const fallbackLng = i18n.options ? i18n.options.fallbackLng : false;\n  const lastLng = i18n.languages[i18n.languages.length - 1];\n  if (lng.toLowerCase() === \"cimode\")\n    return true;\n  const loadNotPending = (l, n2) => {\n    const loadState = i18n.services.backendConnector.state[`${l}|${n2}`];\n    return loadState === -1 || loadState === 2;\n  };\n  if (options.bindI18n && options.bindI18n.indexOf(\"languageChanging\") > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns))\n    return false;\n  if (i18n.hasResourceBundle(lng, ns))\n    return true;\n  if (!i18n.services.backendConnector.backend || i18n.options.resources && !i18n.options.partialBundledLanguages)\n    return true;\n  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns)))\n    return true;\n  return false;\n}\nfunction hasLoadedNamespace(ns, i18n) {\n  let options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce(\"i18n.languages were undefined or empty\", i18n.languages);\n    return true;\n  }\n  const isNewerI18next = i18n.options.ignoreJSONStructure !== void 0;\n  if (!isNewerI18next) {\n    return oldI18nextHasLoadedNamespace(ns, i18n, options);\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance2, loadNotPending) => {\n      if (options.bindI18n && options.bindI18n.indexOf(\"languageChanging\") > -1 && i18nInstance2.services.backendConnector.backend && i18nInstance2.isLanguageChangingTo && !loadNotPending(i18nInstance2.isLanguageChangingTo, ns))\n        return false;\n    }\n  });\n}\nfunction getDisplayName(Component) {\n  return Component.displayName || Component.name || (typeof Component === \"string\" && Component.length > 0 ? Component : \"Unknown\");\n}\n\n// node_modules/react-i18next/dist/es/unescape.js\nvar matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;\nvar htmlEntities = {\n  \"&amp;\": \"&\",\n  \"&#38;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&#60;\": \"<\",\n  \"&gt;\": \">\",\n  \"&#62;\": \">\",\n  \"&apos;\": \"'\",\n  \"&#39;\": \"'\",\n  \"&quot;\": '\"',\n  \"&#34;\": '\"',\n  \"&nbsp;\": \" \",\n  \"&#160;\": \" \",\n  \"&copy;\": \"©\",\n  \"&#169;\": \"©\",\n  \"&reg;\": \"®\",\n  \"&#174;\": \"®\",\n  \"&hellip;\": \"…\",\n  \"&#8230;\": \"…\",\n  \"&#x2F;\": \"/\",\n  \"&#47;\": \"/\"\n};\nvar unescapeHtmlEntity = (m) => htmlEntities[m];\nvar unescape = (text) => text.replace(matchHtmlEntity, unescapeHtmlEntity);\n\n// node_modules/react-i18next/dist/es/defaults.js\nvar defaultOptions = {\n  bindI18n: \"languageChanged\",\n  bindI18nStore: \"\",\n  transEmptyNodeValue: \"\",\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: \"\",\n  transKeepBasicHtmlNodesFor: [\"br\", \"strong\", \"i\", \"p\"],\n  useSuspense: true,\n  unescape\n};\nfunction setDefaults() {\n  let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n  defaultOptions = {\n    ...defaultOptions,\n    ...options\n  };\n}\nfunction getDefaults() {\n  return defaultOptions;\n}\n\n// node_modules/react-i18next/dist/es/i18nInstance.js\nvar i18nInstance;\nfunction setI18n(instance) {\n  i18nInstance = instance;\n}\nfunction getI18n() {\n  return i18nInstance;\n}\n\n// node_modules/react-i18next/dist/es/TransWithoutContext.js\nfunction hasChildren(node, checkLength) {\n  if (!node)\n    return false;\n  const base = node.props ? node.props.children : node.children;\n  if (checkLength)\n    return base.length > 0;\n  return !!base;\n}\nfunction getChildren(node) {\n  if (!node)\n    return [];\n  const children = node.props ? node.props.children : node.children;\n  return node.props && node.props.i18nIsDynamicList ? getAsArray(children) : children;\n}\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== \"[object Array]\")\n    return false;\n  return children.every((child) => (0, import_react.isValidElement)(child));\n}\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\nfunction mergeProps(source, target) {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\nfunction nodesToString(children, i18nOptions) {\n  if (!children)\n    return \"\";\n  let stringNode = \"\";\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (typeof child === \"string\") {\n      stringNode += `${child}`;\n    } else if ((0, import_react.isValidElement)(child)) {\n      const childPropsCount = Object.keys(child.props).length;\n      const shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      const childChildren = child.props.children;\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += `<${child.type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === \"string\") {\n        stringNode += `<${child.type}>${childChildren}</${child.type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (typeof child === \"object\") {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n}\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n  if (targetString === \"\")\n    return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map((keep) => `<${keep}`).join(\"|\")).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape)\n    return [targetString];\n  const data = {};\n  function getData(childs) {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach((child) => {\n      if (typeof child === \"string\")\n        return;\n      if (hasChildren(child))\n        getData(getChildren(child));\n      else if (typeof child === \"object\" && !(0, import_react.isValidElement)(child))\n        Object.assign(data, child);\n    });\n  }\n  getData(children);\n  const ast = html_parse_stringify_module_default.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  function renderInner(child, node, rootReactNode) {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props && child.props.i18nIsDynamicList ? childs : mappedChildren;\n  }\n  function pushTranslatedJSX(child, inner, mem, i2, isVoid) {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push((0, import_react.cloneElement)(child, {\n        key: i2\n      }, isVoid ? void 0 : inner));\n    } else {\n      mem.push(...import_react.Children.map([child], (c2) => {\n        const props = {\n          ...c2.props\n        };\n        delete props.i18nIsDynamicList;\n        return import_react.default.createElement(c2.type, _extends({}, props, {\n          key: i2,\n          ref: c2.ref\n        }, isVoid ? {} : {\n          children: inner\n        }));\n      }));\n    }\n  }\n  function mapAST(reactNode, astNode, rootReactNode) {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i2) => {\n      const translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === \"tag\") {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp)\n          tmp = rootReactNode[0][node.name];\n        if (!tmp)\n          tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = (0, import_react.isValidElement)(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && typeof child === \"object\" && child.dummy && !isElement;\n        const isKnownComponent = typeof children === \"object\" && children !== null && Object.hasOwnProperty.call(children, node.name);\n        if (typeof child === \"string\") {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i2);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i2);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i2, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push((0, import_react.createElement)(node.name, {\n                key: `${node.name}-${i2}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push((0, import_react.createElement)(node.name, {\n                key: `${node.name}-${i2}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (typeof child === \"object\" && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content)\n            mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i2, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === \"text\") {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push((0, import_react.createElement)(wrapTextNodes, {\n            key: `${node.name}-${i2}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  }\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\nfunction Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce(\"You will need to pass in an i18next instance by using i18nextReactModule\");\n    return children;\n  }\n  const t2 = tFromProps || i18n.t.bind(i18n) || ((k) => k);\n  if (context)\n    tOptions.context = context;\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...i18n.options && i18n.options.react\n  };\n  let namespaces = ns || t2.ns || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === \"string\" ? [namespaces] : namespaces || [\"translation\"];\n  const nodeAsString = nodesToString(children, reactI18nextOptions);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  if (i18n.options && i18n.options.interpolation && i18n.options.interpolation.defaultVariables) {\n    values = values && Object.keys(values).length > 0 ? {\n      ...values,\n      ...i18n.options.interpolation.defaultVariables\n    } : {\n      ...i18n.options.interpolation.defaultVariables\n    };\n  }\n  const interpolationOverride = values ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: \"#$?\",\n      suffix: \"?$#\"\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t2(key, combinedTOpts) : defaultValue;\n  if (components) {\n    Object.keys(components).forEach((c2) => {\n      const comp = components[c2];\n      if (typeof comp.type === \"function\" || !comp.props || !comp.props.children || translation.indexOf(`${c2}/>`) < 0 && translation.indexOf(`${c2} />`) < 0)\n        return;\n      function Componentized() {\n        return import_react.default.createElement(import_react.default.Fragment, null, comp);\n      }\n      components[c2] = import_react.default.createElement(Componentized, null);\n    });\n  }\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== void 0 ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? (0, import_react.createElement)(useAsParent, additionalProps, content) : content;\n}\n\n// node_modules/react-i18next/dist/es/context.js\nvar import_react2 = __toESM(require_react(), 1);\n\n// node_modules/react-i18next/dist/es/initReactI18next.js\nvar initReactI18next = {\n  type: \"3rdParty\",\n  init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};\n\n// node_modules/react-i18next/dist/es/context.js\nvar I18nContext = (0, import_react2.createContext)();\nvar ReportNamespaces = class {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach((ns) => {\n      if (!this.usedNamespaces[ns])\n        this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n};\nfunction composeInitialProps(ForComponent) {\n  return (ctx) => new Promise((resolve) => {\n    const i18nInitialProps = getInitialProps();\n    if (ForComponent.getInitialProps) {\n      ForComponent.getInitialProps(ctx).then((componentsInitialProps) => {\n        resolve({\n          ...componentsInitialProps,\n          ...i18nInitialProps\n        });\n      });\n    } else {\n      resolve(i18nInitialProps);\n    }\n  });\n}\nfunction getInitialProps() {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach((l) => {\n    initialI18nStore[l] = {};\n    namespaces.forEach((ns) => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}\n\n// node_modules/react-i18next/dist/es/Trans.js\nfunction Trans2(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = (0, import_react3.useContext)(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  const t2 = tFromProps || i18n && i18n.t.bind(i18n);\n  return Trans({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions,\n    values,\n    defaults,\n    components,\n    ns: ns || t2 && t2.ns || defaultNSFromContext || i18n && i18n.options && i18n.options.defaultNS,\n    i18n,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  });\n}\n\n// node_modules/react-i18next/dist/es/useTranslation.js\nvar import_react4 = __toESM(require_react(), 1);\nvar usePrevious = (value, ignore) => {\n  const ref = (0, import_react4.useRef)();\n  (0, import_react4.useEffect)(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nfunction useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = (0, import_react4.useContext)(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces)\n    i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce(\"You will need to pass in an i18next instance by using initReactI18next\");\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === \"string\")\n        return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === \"object\" && typeof optsOrDefaultValue.defaultValue === \"string\")\n        return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react && i18n.options.react.wait !== void 0)\n    warnOnce(\"It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.\");\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === \"string\" ? [namespaces] : namespaces || [\"translation\"];\n  if (i18n.reportNamespaces.addUsedNamespaces)\n    i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every((n2) => hasLoadedNamespace(n2, i18n, i18nOptions));\n  function getT() {\n    return i18n.getFixedT(props.lng || null, i18nOptions.nsMode === \"fallback\" ? namespaces : namespaces[0], keyPrefix);\n  }\n  const [t2, setT] = (0, import_react4.useState)(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng)\n    joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = (0, import_react4.useRef)(true);\n  (0, import_react4.useEffect)(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current)\n            setT(getT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current)\n            setT(getT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getT);\n    }\n    function boundReset() {\n      if (isMounted.current)\n        setT(getT);\n    }\n    if (bindI18n && i18n)\n      i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n)\n      i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n)\n        bindI18n.split(\" \").forEach((e2) => i18n.off(e2, boundReset));\n      if (bindI18nStore && i18n)\n        bindI18nStore.split(\" \").forEach((e2) => i18n.store.off(e2, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  const isInitial = (0, import_react4.useRef)(true);\n  (0, import_react4.useEffect)(() => {\n    if (isMounted.current && !isInitial.current) {\n      setT(getT);\n    }\n    isInitial.current = false;\n  }, [i18n, keyPrefix]);\n  const ret = [t2, i18n, ready];\n  ret.t = t2;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready)\n    return ret;\n  if (!ready && !useSuspense)\n    return ret;\n  throw new Promise((resolve) => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}\n\n// node_modules/react-i18next/dist/es/withTranslation.js\nvar import_react5 = __toESM(require_react(), 1);\nfunction withTranslation(ns) {\n  let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n  return function Extend(WrappedComponent) {\n    function I18nextWithTranslation(_ref) {\n      let {\n        forwardedRef,\n        ...rest\n      } = _ref;\n      const [t2, i18n, ready] = useTranslation(ns, {\n        ...rest,\n        keyPrefix: options.keyPrefix\n      });\n      const passDownProps = {\n        ...rest,\n        t: t2,\n        i18n,\n        tReady: ready\n      };\n      if (options.withRef && forwardedRef) {\n        passDownProps.ref = forwardedRef;\n      } else if (!options.withRef && forwardedRef) {\n        passDownProps.forwardedRef = forwardedRef;\n      }\n      return (0, import_react5.createElement)(WrappedComponent, passDownProps);\n    }\n    I18nextWithTranslation.displayName = `withI18nextTranslation(${getDisplayName(WrappedComponent)})`;\n    I18nextWithTranslation.WrappedComponent = WrappedComponent;\n    const forwardRef = (props, ref) => (0, import_react5.createElement)(I18nextWithTranslation, Object.assign({}, props, {\n      forwardedRef: ref\n    }));\n    return options.withRef ? (0, import_react5.forwardRef)(forwardRef) : I18nextWithTranslation;\n  };\n}\n\n// node_modules/react-i18next/dist/es/Translation.js\nfunction Translation(props) {\n  const {\n    ns,\n    children,\n    ...options\n  } = props;\n  const [t2, i18n, ready] = useTranslation(ns, options);\n  return children(t2, {\n    i18n,\n    lng: i18n.language\n  }, ready);\n}\n\n// node_modules/react-i18next/dist/es/I18nextProvider.js\nvar import_react6 = __toESM(require_react(), 1);\nfunction I18nextProvider(_ref) {\n  let {\n    i18n,\n    defaultNS,\n    children\n  } = _ref;\n  const value = (0, import_react6.useMemo)(() => ({\n    i18n,\n    defaultNS\n  }), [i18n, defaultNS]);\n  return (0, import_react6.createElement)(I18nContext.Provider, {\n    value\n  }, children);\n}\n\n// node_modules/react-i18next/dist/es/withSSR.js\nvar import_react8 = __toESM(require_react(), 1);\n\n// node_modules/react-i18next/dist/es/useSSR.js\nvar import_react7 = __toESM(require_react(), 1);\nfunction useSSR(initialI18nStore, initialLanguage) {\n  let props = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext\n  } = (0, import_react7.useContext)(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n.options && i18n.options.isClone)\n    return;\n  if (initialI18nStore && !i18n.initializedStoreOnce) {\n    i18n.services.resourceStore.data = initialI18nStore;\n    i18n.options.ns = Object.values(initialI18nStore).reduce((mem, lngResources) => {\n      Object.keys(lngResources).forEach((ns) => {\n        if (mem.indexOf(ns) < 0)\n          mem.push(ns);\n      });\n      return mem;\n    }, i18n.options.ns);\n    i18n.initializedStoreOnce = true;\n    i18n.isInitialized = true;\n  }\n  if (initialLanguage && !i18n.initializedLanguageOnce) {\n    i18n.changeLanguage(initialLanguage);\n    i18n.initializedLanguageOnce = true;\n  }\n}\n\n// node_modules/react-i18next/dist/es/withSSR.js\nfunction withSSR() {\n  return function Extend(WrappedComponent) {\n    function I18nextWithSSR(_ref) {\n      let {\n        initialI18nStore,\n        initialLanguage,\n        ...rest\n      } = _ref;\n      useSSR(initialI18nStore, initialLanguage);\n      return (0, import_react8.createElement)(WrappedComponent, {\n        ...rest\n      });\n    }\n    I18nextWithSSR.getInitialProps = composeInitialProps(WrappedComponent);\n    I18nextWithSSR.displayName = `withI18nextSSR(${getDisplayName(WrappedComponent)})`;\n    I18nextWithSSR.WrappedComponent = WrappedComponent;\n    return I18nextWithSSR;\n  };\n}\n\n// node_modules/react-i18next/dist/es/index.js\nvar date = () => \"\";\nvar time = () => \"\";\nvar number = () => \"\";\nvar select = () => \"\";\nvar plural = () => \"\";\nvar selectOrdinal = () => \"\";\nexport {\n  I18nContext,\n  I18nextProvider,\n  Trans2 as Trans,\n  Trans as TransWithoutContext,\n  Translation,\n  composeInitialProps,\n  date,\n  getDefaults,\n  getI18n,\n  getInitialProps,\n  initReactI18next,\n  number,\n  plural,\n  select,\n  selectOrdinal,\n  setDefaults,\n  setI18n,\n  time,\n  useSSR,\n  useTranslation,\n  withSSR,\n  withTranslation\n};\n//# sourceMappingURL=react-i18next.js.map\n",
      "start": 1701766112449,
      "end": 1701766112450,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
