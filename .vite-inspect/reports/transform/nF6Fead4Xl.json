{
  "resolvedId": "C:/Users/ryan.wong/Desktop/dev/TourneyPro_v2/node_modules/.vite/deps/chunk-R5DUQDLR.js?v=c929456e",
  "transforms": [
    {
      "name": "vite:optimized-deps",
      "result": "import {\n  Typography_default\n} from \"./chunk-F65R3Q5F.js\";\nimport {\n  init_useIsFocusVisible,\n  useIsFocusVisible_default\n} from \"./chunk-AIRXF3RN.js\";\nimport {\n  init_useForkRef,\n  useForkRef_default\n} from \"./chunk-VAFBYMTJ.js\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"./chunk-63S7JPMK.js\";\nimport {\n  init_composeClasses\n} from \"./chunk-5CYIWUDX.js\";\nimport {\n  _objectWithoutPropertiesLoose,\n  alpha,\n  clsx_default,\n  composeClasses,\n  elementTypeAcceptingRef_default,\n  generateUtilityClass,\n  generateUtilityClasses,\n  getPath,\n  init_clsx,\n  init_esm,\n  init_esm2,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"./chunk-CY3GP2WZ.js\";\nimport {\n  require_jsx_runtime\n} from \"./chunk-U73TBONF.js\";\nimport {\n  _extends,\n  init_extends\n} from \"./chunk-HMTWVGVS.js\";\nimport {\n  require_react\n} from \"./chunk-ZGRSIX2Q.js\";\nimport {\n  __toESM\n} from \"./chunk-ROME4SDB.js\";\n\n// node_modules/@mui/material/Link/Link.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_esm();\ninit_composeClasses();\ninit_capitalize();\ninit_styled();\ninit_useThemeProps();\ninit_useIsFocusVisible();\ninit_useForkRef();\n\n// node_modules/@mui/material/Link/linkClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getLinkUtilityClass(slot) {\n  return generateUtilityClass(\"MuiLink\", slot);\n}\nvar linkClasses = generateUtilityClasses(\"MuiLink\", [\"root\", \"underlineNone\", \"underlineHover\", \"underlineAlways\", \"button\", \"focusVisible\"]);\nvar linkClasses_default = linkClasses;\n\n// node_modules/@mui/material/Link/getTextDecoration.js\ninit_esm2();\nvar colorTransformations = {\n  primary: \"primary.main\",\n  textPrimary: \"text.primary\",\n  secondary: \"secondary.main\",\n  textSecondary: \"text.secondary\",\n  error: \"error.main\"\n};\nvar transformDeprecatedColors = (color) => {\n  return colorTransformations[color] || color;\n};\nvar getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if (\"vars\" in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nvar getTextDecoration_default = getTextDecoration;\n\n// node_modules/@mui/material/Link/Link.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: [\"root\", `underline${capitalize_default(underline)}`, component === \"button\" && \"button\", focusVisible && \"focusVisible\"]\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nvar LinkRoot = styled_default(Typography_default, {\n  name: \"MuiLink\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize_default(ownerState.underline)}`], ownerState.component === \"button\" && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === \"none\" && {\n    textDecoration: \"none\"\n  }, ownerState.underline === \"hover\" && {\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  }, ownerState.underline === \"always\" && _extends({\n    textDecoration: \"underline\"\n  }, ownerState.color !== \"inherit\" && {\n    textDecorationColor: getTextDecoration_default({\n      theme,\n      ownerState\n    })\n  }, {\n    \"&:hover\": {\n      textDecorationColor: \"inherit\"\n    }\n  }), ownerState.component === \"button\" && {\n    position: \"relative\",\n    WebkitTapHighlightColor: \"transparent\",\n    backgroundColor: \"transparent\",\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: \"pointer\",\n    userSelect: \"none\",\n    verticalAlign: \"middle\",\n    MozAppearance: \"none\",\n    // Reset\n    WebkitAppearance: \"none\",\n    // Reset\n    \"&::-moz-focus-inner\": {\n      borderStyle: \"none\"\n      // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses_default.focusVisible}`]: {\n      outline: \"auto\"\n    }\n  });\n});\nvar Link = React.forwardRef(function Link2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiLink\"\n  });\n  const {\n    className,\n    color = \"primary\",\n    component = \"a\",\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = \"always\",\n    variant = \"inherit\",\n    sx\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible_default();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef_default(ref, focusVisibleRef);\n  const handleBlur = (event) => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = (event) => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return (0, import_jsx_runtime.jsx)(LinkRoot, _extends({\n    color,\n    className: clsx_default(classes.root, className),\n    classes: TypographyClasses,\n    component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState,\n    variant,\n    sx: [...!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : [], ...Array.isArray(sx) ? sx : [sx]]\n  }, other));\n});\ntrue ? Link.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: import_prop_types.default.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef_default,\n  /**\n   * @ignore\n   */\n  onBlur: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onFocus: import_prop_types.default.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: import_prop_types.default.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: import_prop_types.default.oneOf([\"always\", \"hover\", \"none\"]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"body1\", \"body2\", \"button\", \"caption\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"inherit\", \"overline\", \"subtitle1\", \"subtitle2\"]), import_prop_types.default.string])\n} : void 0;\nvar Link_default = Link;\n\nexport {\n  getLinkUtilityClass,\n  linkClasses_default,\n  Link_default\n};\n//# sourceMappingURL=chunk-R5DUQDLR.js.map\n",
      "start": 1701867792155,
      "end": 1701867792254,
      "sourcemaps": null
    },
    {
      "name": "vite:css",
      "start": 1701867792254,
      "end": 1701867792254,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1701867792254,
      "end": 1701867792254,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1701867792254,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:react-swc",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:client-inject",
      "start": 1701867792255,
      "end": 1701867792255,
      "order": "normal"
    },
    {
      "name": "vite:import-analysis",
      "result": "import {\n  Typography_default\n} from \"/node_modules/.vite/deps/chunk-F65R3Q5F.js?v=c929456e\";\nimport {\n  init_useIsFocusVisible,\n  useIsFocusVisible_default\n} from \"/node_modules/.vite/deps/chunk-AIRXF3RN.js?v=c929456e\";\nimport {\n  init_useForkRef,\n  useForkRef_default\n} from \"/node_modules/.vite/deps/chunk-VAFBYMTJ.js?v=c929456e\";\nimport {\n  capitalize_default,\n  init_capitalize\n} from \"/node_modules/.vite/deps/chunk-63S7JPMK.js?v=c929456e\";\nimport {\n  init_composeClasses\n} from \"/node_modules/.vite/deps/chunk-5CYIWUDX.js?v=c929456e\";\nimport {\n  _objectWithoutPropertiesLoose,\n  alpha,\n  clsx_default,\n  composeClasses,\n  elementTypeAcceptingRef_default,\n  generateUtilityClass,\n  generateUtilityClasses,\n  getPath,\n  init_clsx,\n  init_esm,\n  init_esm2,\n  init_generateUtilityClass,\n  init_objectWithoutPropertiesLoose,\n  init_styled,\n  init_useThemeProps,\n  require_prop_types,\n  styled_default,\n  useThemeProps2 as useThemeProps\n} from \"/node_modules/.vite/deps/chunk-CY3GP2WZ.js?v=c929456e\";\nimport {\n  require_jsx_runtime\n} from \"/node_modules/.vite/deps/chunk-U73TBONF.js?v=c929456e\";\nimport {\n  _extends,\n  init_extends\n} from \"/node_modules/.vite/deps/chunk-HMTWVGVS.js?v=c929456e\";\nimport {\n  require_react\n} from \"/node_modules/.vite/deps/chunk-ZGRSIX2Q.js?v=c929456e\";\nimport {\n  __toESM\n} from \"/node_modules/.vite/deps/chunk-ROME4SDB.js?v=c929456e\";\n\n// node_modules/@mui/material/Link/Link.js\ninit_objectWithoutPropertiesLoose();\ninit_extends();\nvar React = __toESM(require_react());\nvar import_prop_types = __toESM(require_prop_types());\ninit_clsx();\ninit_esm();\ninit_composeClasses();\ninit_capitalize();\ninit_styled();\ninit_useThemeProps();\ninit_useIsFocusVisible();\ninit_useForkRef();\n\n// node_modules/@mui/material/Link/linkClasses.js\ninit_esm();\ninit_generateUtilityClass();\nfunction getLinkUtilityClass(slot) {\n  return generateUtilityClass(\"MuiLink\", slot);\n}\nvar linkClasses = generateUtilityClasses(\"MuiLink\", [\"root\", \"underlineNone\", \"underlineHover\", \"underlineAlways\", \"button\", \"focusVisible\"]);\nvar linkClasses_default = linkClasses;\n\n// node_modules/@mui/material/Link/getTextDecoration.js\ninit_esm2();\nvar colorTransformations = {\n  primary: \"primary.main\",\n  textPrimary: \"text.primary\",\n  secondary: \"secondary.main\",\n  textSecondary: \"text.secondary\",\n  error: \"error.main\"\n};\nvar transformDeprecatedColors = (color) => {\n  return colorTransformations[color] || color;\n};\nvar getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = transformDeprecatedColors(ownerState.color);\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if (\"vars\" in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nvar getTextDecoration_default = getTextDecoration;\n\n// node_modules/@mui/material/Link/Link.js\nvar import_jsx_runtime = __toESM(require_jsx_runtime());\nvar _excluded = [\"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\", \"sx\"];\nvar useUtilityClasses = (ownerState) => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: [\"root\", `underline${capitalize_default(underline)}`, component === \"button\" && \"button\", focusVisible && \"focusVisible\"]\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nvar LinkRoot = styled_default(Typography_default, {\n  name: \"MuiLink\",\n  slot: \"Root\",\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize_default(ownerState.underline)}`], ownerState.component === \"button\" && styles.button];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  return _extends({}, ownerState.underline === \"none\" && {\n    textDecoration: \"none\"\n  }, ownerState.underline === \"hover\" && {\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\"\n    }\n  }, ownerState.underline === \"always\" && _extends({\n    textDecoration: \"underline\"\n  }, ownerState.color !== \"inherit\" && {\n    textDecorationColor: getTextDecoration_default({\n      theme,\n      ownerState\n    })\n  }, {\n    \"&:hover\": {\n      textDecorationColor: \"inherit\"\n    }\n  }), ownerState.component === \"button\" && {\n    position: \"relative\",\n    WebkitTapHighlightColor: \"transparent\",\n    backgroundColor: \"transparent\",\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: \"pointer\",\n    userSelect: \"none\",\n    verticalAlign: \"middle\",\n    MozAppearance: \"none\",\n    // Reset\n    WebkitAppearance: \"none\",\n    // Reset\n    \"&::-moz-focus-inner\": {\n      borderStyle: \"none\"\n      // Remove Firefox dotted outline.\n    },\n    [`&.${linkClasses_default.focusVisible}`]: {\n      outline: \"auto\"\n    }\n  });\n});\nvar Link = React.forwardRef(function Link2(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: \"MuiLink\"\n  });\n  const {\n    className,\n    color = \"primary\",\n    component = \"a\",\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = \"always\",\n    variant = \"inherit\",\n    sx\n  } = props, other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible_default();\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handlerRef = useForkRef_default(ref, focusVisibleRef);\n  const handleBlur = (event) => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = (event) => {\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return (0, import_jsx_runtime.jsx)(LinkRoot, _extends({\n    color,\n    className: clsx_default(classes.root, className),\n    classes: TypographyClasses,\n    component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    ownerState,\n    variant,\n    sx: [...!Object.keys(colorTransformations).includes(color) ? [{\n      color\n    }] : [], ...Array.isArray(sx) ? sx : [sx]]\n  }, other));\n});\ntrue ? Link.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: import_prop_types.default.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: import_prop_types.default.object,\n  /**\n   * @ignore\n   */\n  className: import_prop_types.default.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: import_prop_types.default.any,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef_default,\n  /**\n   * @ignore\n   */\n  onBlur: import_prop_types.default.func,\n  /**\n   * @ignore\n   */\n  onFocus: import_prop_types.default.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: import_prop_types.default.oneOfType([import_prop_types.default.arrayOf(import_prop_types.default.oneOfType([import_prop_types.default.func, import_prop_types.default.object, import_prop_types.default.bool])), import_prop_types.default.func, import_prop_types.default.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](/material-ui/api/typography/) element.\n   */\n  TypographyClasses: import_prop_types.default.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: import_prop_types.default.oneOf([\"always\", \"hover\", \"none\"]),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: import_prop_types.default.oneOfType([import_prop_types.default.oneOf([\"body1\", \"body2\", \"button\", \"caption\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"inherit\", \"overline\", \"subtitle1\", \"subtitle2\"]), import_prop_types.default.string])\n} : void 0;\nvar Link_default = Link;\n\nexport {\n  getLinkUtilityClass,\n  linkClasses_default,\n  Link_default\n};\n//# sourceMappingURL=chunk-R5DUQDLR.js.map\n",
      "start": 1701867792255,
      "end": 1701867792256,
      "order": "normal",
      "sourcemaps": null
    }
  ]
}
